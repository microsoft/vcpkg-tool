set(VCPKG_TARGET_ARCHITECTURE x64) #
set(VCPKG_CRT_LINKAGE dynamic) #
set(VCPKG_LIBRARY_LINKAGE static) #
if(0)
set(VCPKG_CMAKE_SYSTEM_NAME Windows) # NOT IN ABI COMMENT
elseif(APPLE)
set(VCPKG_CMAKE_SYSTEM_NAME Darwin)
elseif(UNIX)
set(VCPKG_CMAKE_SYSTEM_NAME Linux)
endif()
set(NOT_IN_ABI_UNSET "test")
unset(NOT_IN_ABI_UNSET)
unset(NOT_IN_ABI_UNSET_2)
unset(ENV{NOTPATH}) #
option(OPT_VAR "TEXT" OFF) #
separate_arguments(SEPT_VAR NATIVE_COMMAND "-sep -args -please") #
site_name(SITE_VAR) #
get_directory_property(GET_VAR VARIABLES) #
find_program(FIND_VAR NAMES gcc) #
cmake_path(SET PATH_VAR "i/am/a/path") #
cmake_path(GET PATH_VAR ROOT_NAME PATH_ROOT_VAR) #
cmake_path(HASH PATH_VAR PATH_HASH_VAR) #
cmake_path(NATIVE_PATH PATH_VAR PATH_NATIVE_VAR) #
cmake_path(IS_RELATIVE PATH_VAR PATH_IS_VAR) #
cmake_path(HAS_EXTENSION PATH_VAR PATH_HAS_VAR) #
cmake_path(CONVERT "$ENV{PATH}" TO_CMAKE_PATH_LIST PATH_CONVERT_VAR) #
cmake_path(NORMAL_PATH PATH_VAR OUTPUT_VARIABLE PATH_NORMAL_VAR) #
cmake_path(REMOVE_FILENAME PATH_VAR OUTPUT_VARIABLE PATH_REMOVE_VAR) # 
execute_process(COMMAND echo "Hello" OUTPUT_VARIABLE EXE_OUT_VAR RESULT_VARIABLE EXE_RES_VAR ERROR_VARIABLE EXE_ERR_VAR) ###
file(READ "${CMAKE_CURRENT_LIST_DIR}/file-to-read" FILE_READ_VAR) #
file(STRINGS "${CMAKE_CURRENT_LIST_DIR}/file-to-read" FILE_STRINGS_VAR)#
file(SHA512 "${CMAKE_CURRENT_LIST_DIR}/file-to-read" FILE_HASH_VAR) #
file(TIMESTAMP "${CMAKE_CURRENT_LIST_DIR}/file-to-read" FILE_TIMESTAMP_VAR)#
file(SIZE "${CMAKE_CURRENT_LIST_DIR}/file-to-read" FILE_SIZE_VAR)#
file(REAL_PATH "${CMAKE_CURRENT_LIST_DIR}/file-to-read" FILE_REAL_VAR)#
file(TO_CMAKE_PATH "${CMAKE_CURRENT_LIST_DIR}/file-to-read" FILE_CMAKE_VAR)#
file(GLOB FILE_GLOB_VAR "*") #
file(RELATIVE_PATH FILE_REL_VAR "${CMAKE_CURRENT_LIST_DIR}" "${CMAKE_CURRENT_LIST_DIR}/file-to-read" ) #
list(APPEND LIST_VAR2 "e1" "e2" "e3")#
list(APPEND LIST_VAR "e1" "e2" "e3")
list(POP_BACK LIST_VAR LIST_OUT_VAR) #
math(EXPR MATH_VAR "1 + 1") #
string(FIND "FINDME" "ME" STRING_FIND_VAR) #
string(REPLACE "ME" "" STRING_REPLACE_VAR "ALLABOUTMEME") #
string(REPEAT "REPEAT" "2" STRING_REPEAT_VAR) #
string(APPEND STRING_APPEND_VAR "APPENDME") #
string(PREPEND STRING_PREPEND_VAR "PREPENDME") #
string(TIMESTAMP STRING_TIME_VAR) #
string(UUID STRING_UUID_VAR NAMESPACE "6ba7b810-9dad-11d1-80b4-00c04fd430c8" NAME "test" TYPE SHA1) #
string(CONCAT STRING_CONCAT_VAR "abc" "123") #
string(SHA512 STRING_HASH_VAR "12345") #
string(JSON JSON_VAR ERROR_VARIABLE JSON_ERR_VAR GET "{\"test\": true}" "test") ##
string(REGEX REPLACE "TEST" "" STRING_REG_REPLACE_VAR "TEST123") #
string(REGEX MATCH "TEST" STRING_REG_MATCH_VAR "TEST123") #
string(SUBSTRING "ABCDEF" 0 3 STRING_SUB_VAR) #
string(ASCII 10 20 30 STRING_ASCII_VAR) #
string(HEX "1020" STRING_HEX_VAR) #
string(MAKE_C_IDENTIFIER  "0x100" STRING_C_VAR) #
string(RANDOM STRING_RANDOM_VAR) #
string(COMPARE "EQUAL" "ABC" "123" STRING_COMPARE_VAR) #
# Not in ABI
if(0)
    set(NOT_IN_ABI "TEST")
endif()
