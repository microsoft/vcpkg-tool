{
  "AddArtifactOnlyOne": "„{command_line}“ kann jeweils nur ein Artefakt auf einmal hinzufügen.",
  "AddCommandFirstArg": "Der erste hinzuzufügende Parameter muss \"artifact\" oder \"port\" sein.",
  "AddFirstArgument": "Das erste Argument für „{command_line}“ muss „artifact“ oder „port“ sein.",
  "AddPortRequiresManifest": "„{command_line}“ erfordert eine aktive Manifestdatei.",
  "AddPortSucceeded": "Der Datei „vcpkg.json“ konnten erfolgreich Ports hinzugefügt werden.",
  "AddRecurseOption": "Wenn Sie sicher sind, dass Sie sie entfernen möchten, führen Sie den Befehl mit der Option „--recurse“ aus.",
  "AddTripletExpressionNotAllowed": "Triplet-Ausdrücke sind hier nicht zulässig. Sie können stattdessen „{package_name}:{triplet}“ in „{package_name}“ ändern.",
  "AddVersionAddedVersionToFile": "Version {version} zu {path} hinzugefügt",
  "AddVersionCommitChangesReminder": "Haben Sie daran gedacht, Ihre Änderungen zu übernehmen?",
  "AddVersionCommitResultReminder": "Vergessen Sie nicht, das Ergebnis zu committen!",
  "AddVersionDetectLocalChangesError": "Die Erkennung lokaler Änderungen wird aufgrund eines unerwarteten Formats in der Git-Statusausgabe übersprungen",
  "AddVersionFileNotFound": "Die erforderliche Datei \"{path}\" wurde nicht gefunden",
  "AddVersionFormatPortSuggestion": "Führen Sie \"{command_line}\" aus, um die Datei zu formatieren",
  "AddVersionIgnoringOptionAll": "--{option} wird ignoriert, da ein Portnamenargument angegeben wurde",
  "AddVersionLoadPortFailed": "Port {package_name} kann nicht geladen werden",
  "AddVersionNewFile": "(neue Datei)",
  "AddVersionNewShaIs": "neuer SHA: {value}",
  "AddVersionNoFilesUpdated": "Es wurden keine Dateien aktualisiert",
  "AddVersionNoFilesUpdatedForPort": "Für {package_name} wurden keine Dateien aktualisiert",
  "AddVersionNoGitSha": "SHA kann für Port {package_name} nicht abgerufen werden",
  "AddVersionOldShaIs": "alter SHA: {value}",
  "AddVersionOverwriteOptionSuggestion": "Verwenden Sie --{option}, um diese Überprüfung zu umgehen",
  "AddVersionPortDoesNotExist": "{package_name} ist nicht vorhanden",
  "AddVersionPortFilesShaChanged": "Eingecheckte Dateien für {package_name} wurden geändert, aber die Version wurde nicht aktualisiert",
  "AddVersionPortFilesShaUnchanged": "Eingecheckte Dateien für {package_name} sind gegenüber Version {version} unverändert",
  "AddVersionPortHasImproperFormat": "{package_name} ist nicht ordnungsgemäß formatiert",
  "AddVersionSuggestNewVersionScheme": "Verwenden Sie das Versionsschema „{new_scheme}“ anstelle von „{old_scheme}“ in Port „{package_name}“. \nVerwenden Sie --{option}, um diese Überprüfung zu deaktivieren.",
  "AddVersionUnableToParseVersionsFile": "Die Versionsdatei \"{path}\" kann nicht analysiert werden",
  "AddVersionUncommittedChanges": "Für {package_name} wurden keine Änderungen ausgeführt",
  "AddVersionUpdateVersionReminder": "Erinnern Sie sich daran, die Version oder Portversion zu aktualisieren?",
  "AddVersionUseOptionAll": "{command_name} ohne Argumente erfordert die Übergabe von --{option}, um alle Portversionen gleichzeitig zu aktualisieren",
  "AddVersionVersionAlreadyInFile": "Version {version} befindet sich bereits in {path}",
  "AddVersionVersionIs": "Version: {version}",
  "AddingCompletionEntry": "Der vcpkg-Vervollständigungseintrag wird zu „{path}“ hinzugefügt.",
  "AdditionalPackagesToExport": "Zusätzliche Pakete (*) müssen exportiert werden, um diesen Vorgang abzuschließen.",
  "AdditionalPackagesToRemove": "Zusätzliche Pakete (*) müssen entfernt werden, um diesen Vorgang abzuschließen.",
  "AllFormatArgsRawArgument": "Formatzeichenfolge „{value}“ enthält ein nicht formatiertes Formatargument.",
  "AllFormatArgsUnbalancedBraces": "nicht ausgeglichene Klammer in der Formatzeichenfolge „{value}“",
  "AllPackagesAreUpdated": "Alle installierten Pakete sind mit der lokalen Portdatei auf dem neuesten Stand.",
  "AlreadyInstalled": "{spec} ist bereits installiert.",
  "AlreadyInstalledNotHead": "{spec} ist bereits installiert – wird nicht aus HEAD erstellt.",
  "AndroidHomeDirMissingProps": "\"source.properties\" fehlt im Verzeichnis \"{env_var}\": {path}",
  "AnotherInstallationInProgress": "Auf dem Computer wird gerade eine andere Installation ausgeführt. 6 Sekunden warten, bevor der Versuch wiederholt wird.",
  "AppliedUserIntegration": "Die benutzerweite Integration für diesen vcpkg-Stamm wurde angewendet.",
  "ArtifactsOptionIncompatibility": "--{option} hat keine Auswirkungen auf \"Artefakt suchen\".",
  "AssetSourcesArg": "Fügen Sie Quellen für die Ressourcenzwischenspeicherung hinzu. Siehe „vcpkg help assetcaching“.",
  "AttemptingToFetchPackagesFromVendor": "Es wird versucht, {count} Pakete von {vendor} abzurufen.",
  "AuthenticationMayRequireManualAction": "Mindestens ein {vendor}-Anmeldeinformationsanbieter hat eine manuelle Aktion angefordert. Fügen Sie die binäre Quelle \"interactive\" hinzu, um Interaktivität zuzulassen.",
  "AutoSettingEnvVar": "-- Automatisches Setzen von {env_var} Umgebungsvariablen auf \"{url}\".",
  "AutomaticLinkingForMSBuildProjects": "Alle MSBuild C++-Projekte können jetzt alle installierten Bibliotheken #enthalten. Die Verknüpfung wird automatisch verarbeitet. Durch die Installation neuer Bibliotheken werden diese sofort verfügbar.",
  "AvailableArchitectureTriplets": "Verfügbare Architekturtriplets:",
  "AvailableHelpTopics": "Verfügbare Hilfethemen:",
  "BaselineFileNoDefaultField": "Die Baselinedatei beim Commit \"{commit_sha}\" war ungültig (kein Feld \"Standard\").",
  "BaselineMissingDefault": "\"baseline.json\" aus dem Commit \"{commit_sha}\" im Repository \"{url}\" war ungültig (enthielt kein Feld \"Standard\").",
  "BinarySourcesArg": "Fügen Sie Quellen für die binäre Zwischenspeicherung hinzu. Siehe „vcpkg help binarycaching“.",
  "BothYesAndNoOptionSpecifiedError": "--no-{option} und --{option} können nicht gleichzeitig angegeben werden.",
  "BuildAlreadyInstalled": "„{spec}“ ist bereits installiert; entfernen Sie „{spec}“, bevor Sie versuchen, es zu erstellen.",
  "BuildDependenciesMissing": "Für den Buildbefehl müssen alle Abhängigkeiten bereits installiert sein.\nDie folgenden Abhängigkeiten fehlen:",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "HERUNTERGELADEN",
  "BuildResultExcluded": "AUSGESCHLOSSEN",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "ENTFERNT",
  "BuildResultSucceeded": "ERFOLGREICH",
  "BuildResultSummaryHeader": "ZUSAMMENFASSUNG FÜR {triplet}",
  "BuildResultSummaryLine": "{build_result}: {count}",
  "BuildTreesRootDir": "(Experimentell) Geben Sie das Buildstrukturstammverzeichnis an.",
  "BuildTroubleshootingMessage1": "Stellen Sie sicher, dass Sie die neuesten Portdateien mit „git pull“ und „vcpkg update“ verwenden.\nÜberprüfen Sie dann auf bekannte Probleme unter:",
  "BuildTroubleshootingMessage2": "Sie können ein neues Problem einreichen unter:",
  "BuildTroubleshootingMessage3": "Schließen Sie „[{package_name}] Buildfehler“ in Ihren Titel des Fehlerberichts, die folgenden Versionsinformationen in Ihre Fehlerbeschreibung ein, und fügen Sie alle relevanten Fehlerprotokolle von oben an.",
  "BuildTroubleshootingMessage4": "Bitte verwenden Sie die vorausgefüllte Vorlage von {path}, wenn Sie Ihr Problem melden.",
  "BuildingFromHead": "{spec} wird aus HEAD erstellt...",
  "BuildingPackage": "{spec} wird erstellt...",
  "BuildingPackageFailed": "Fehler beim Erstellen von \"{spec}\": {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "aufgrund der folgenden fehlenden Abhängigkeiten:",
  "BuiltInTriplets": "vcpkg-integrierte Triplets:",
  "CMakeTargetsUsage": "„{package_name}“ stellt CMake-Ziele bereit:",
  "CMakeTargetsUsageHeuristicMessage": "# this is heuristically generated, and may be not correct",
  "CMakeToolChainFile": "CMake-Projekte sollten Folgendes verwenden: „-DCMAKE_TOOLCHAIN_FILE={path}“",
  "CMakeUsingExportedLibs": "Um exportierte Bibliotheken in CMake-Projekten zu verwenden, fügen Sie Ihrer CMake-Befehlszeile {value} hinzu.",
  "ChecksFailedCheck": "„vcpkg“ ist abgestürzt; es sind keine weiteren Details verfügbar.",
  "ChecksUnreachableCode": "Nicht erreichbarer Code wurde erreicht.",
  "ChecksUpdateVcpkg": "Das Aktualisieren von vcpkg durch erneutes Ausführen von „bootstrap-vcpkg“ kann diesen Fehler möglicherweise beheben.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing kann nur verwendet werden, wenn eine Baseline über --ci-baseline bereitgestellt wird.",
  "CiBaselineDisallowedCascade": "REGRESSION: {spec} überlappend, muss aber übergeben werden. ({path}.)",
  "CiBaselineRegression": "REGRESSION: {spec} ist mit {build_result} fehlgeschlagen. Falls erwartet, fügen Sie {spec}=fail zu {path} hinzu.",
  "CiBaselineRegressionHeader": "REGRESSIONEN:",
  "CiBaselineUnexpectedPass": "BESTANDEN, VON DER FEHLERLISTE ENTFERNEN: {spec} ({Pfad}).",
  "ClearingContents": "Inhalt von {path} wird gelöscht",
  "CmakeTargetsExcluded": "Hinweis: {count} zusätzliche Ziele werden nicht angezeigt.",
  "CommandFailed": "Befehl:\n{command_line}\nmit den folgenden Ergebnissen fehlgeschlagen:",
  "CommunityTriplets": "VCPKG-Community-Triplets:",
  "ComparingUtf8Decoders": "Utf8Decoders mit unterschiedlicher Herkunft vergleichen; dies ist immer ein Fehler.",
  "CompressFolderFailed": "Fehler beim Komprimieren des Ordners \"{path}\":",
  "ComputingInstallPlan": "Installationsplan wird berechnet...",
  "ConflictingFiles": "Die folgenden Dateien sind bereits in {path} installiert und stehen in Konflikt mit {spec}",
  "ConflictingValuesForOption": "Für „--{option}“ wurden widersprüchliche Werte angegeben.",
  "ConstraintViolation": "Es wurde eine Einschränkungsverletzung gefunden:",
  "ContinueCodeUnitInStart": "Fortsetzungscodeeinheit wurde an der Startposition gefunden.",
  "ControlAndManifestFilesPresent": "Sowohl eine Manifestdatei als auch eine CONTROL-Datei sind im Portverzeichnis vorhanden: {path}",
  "ControlCharacterInString": "Steuerzeichen in Zeichenfolge",
  "CopyrightIsDir": "'{path}' als Verzeichnis ist veraltet.",
  "CorruptedDatabase": "Die Datenbank ist beschädigt.",
  "CorruptedInstallTree": "Die vcpkg-Struktur \"installiert\" ist beschädigt.",
  "CouldNotDeduceNugetIdAndVersion": "Die NuGet-ID und die Version konnten nicht aus dem Dateinamen abgeleitet werden: {path}",
  "CouldNotFindBaseline": "Die explizit angegebene Baseline \"{commit_sha}\" wurde in der Baselinedatei \"{path}\" nicht gefunden.",
  "CouldNotFindBaselineForRepo": "Die Baseline \"{commit_sha}\" für das Repository \"{package_name}\" wurde nicht gefunden.",
  "CouldNotFindBaselineInCommit": "Die Baseline wurde im Commit \"{commit_sha}\" aus dem Repository \"{package_name}\" nicht gefunden:",
  "CouldNotFindGitTreeAtCommit": "Die Git-Struktur für \"Versionen\" wurde im Repository \"{package_name}\" beim Commit \"{commit_sha}\" nicht gefunden.",
  "CreateFailureLogsDir": "Ausgabeverzeichnis für Fehlerprotokolle wird erstellt: {path}.",
  "CreatedNuGetPackage": "Nupkg wurde erstellt: {path}",
  "Creating7ZipArchive": "7zip-Archiv wird erstellt...",
  "CreatingNugetPackage": "NuGet-Paket wird erstellt...",
  "CreatingZipArchive": "ZIP-Archiv wird erstellt...",
  "CreationFailed": "Fehler beim Erstellen von {path}.",
  "CurlFailedToExecute": "curl konnte nicht ausgeführt werden. Exitcode: {exit_code}.",
  "CurlReportedUnexpectedResults": "„curl“ hat unerwartete Ergebnisse für „vcpkg“ gemeldet, und „vcpkg“ kann nicht fortgesetzt werden. \nÜberprüfen Sie den folgenden Text auf vertrauliche Informationen, und öffnen Sie ein Problem auf dem GitHub von „Microsoft/vcpkg“, um dieses Problem zu beheben.\ncmd: {command_line}\n=== curl output ===\n{actual}\n=== end curl output ===",
  "CurlReturnedUnexpectedResponseCodes": "curl hat eine andere Anzahl von Antwortcodes zurückgegeben als für die Anforderung erwartet ({actual} statt {expected}).",
  "DateTableHeader": "Datum",
  "DefaultBrowserLaunched": "Der Standardbrowser wurde zum {url} gestartet.",
  "DefaultFlag": "Standardmäßig wird --{option} aktiviert.",
  "DefaultPathToBinaries": "Basierend auf Ihren Systemeinstellungen lautet der Standardpfad zum Speichern von Binärdateien \"{path}\". Hierdurch wird %LOCALAPPDATA%/%APPDATA% unter Windows und $XDG_CACHE_HOME oder $HOME auf anderen Plattformen abgefragt.",
  "DeprecatedPrefabDebugOption": "--prefab-debug ist jetzt veraltet.",
  "DetectCompilerHash": "Compilerhash für Triplet {triplet} wird erkannt...",
  "DocumentedFieldsSuggestUpdate": "Wenn es sich um dokumentierte Felder handelt, die erkannt werden sollen, aktualisieren Sie das vcpkg-Tool.",
  "DownloadAvailable": "Eine herunterladbare Kopie dieses Tools ist verfügbar und kann verwendet werden, indem {env_var} zurückgesetzt wird.",
  "DownloadRootsDir": "Geben Sie das Stammverzeichnis für Downloads an.\n(Standard: {env_var})",
  "DownloadedSources": "Heruntergeladene Quellen für {spec}",
  "DownloadingVcpkgCeBundle": "Vcpkg-ce-Paket {version} wird heruntergeladen...",
  "DownloadingVcpkgCeBundleLatest": "Das neueste vcpkg-ce-Paket wird heruntergeladen...",
  "DownloadingVcpkgStandaloneBundle": "Das eigenständige Paket \"{version}\" wird heruntergeladen.",
  "DownloadingVcpkgStandaloneBundleLatest": "Das neueste eigenständige Paket wird heruntergeladen.",
  "DuplicateCommandOption": "Die Option \"--{option}\" kann nur einmal übergeben werden.",
  "DuplicateOptions": "'--{value}' wurde mehrere Male angegeben.",
  "DuplicatedKeyInObj": "Doppelter Schlüssel \"{value}\" in einem Objekt",
  "ElapsedForPackage": "Verstrichene Zeit für die Bearbeitung von {spec}: {elapsed}",
  "ElapsedInstallTime": "Insgesamt verstrichene Zeit: {count}",
  "ElapsedTimeForChecks": "Zeit bis zum Bestimmen des Status Erfolgreich/Fehler: {elapsed}",
  "EmailVcpkgTeam": "Senden Sie eine E-Mail mit beliebigem Feedback an {url}.",
  "EmptyArg": "An die Option --{option} muss ein nicht leeres Argument übergeben werden.",
  "EmptyLicenseExpression": "Der SPDX-Lizenzausdruck war leer.",
  "EndOfStringInCodeUnit": "Ende der Zeichenfolge in der Mitte des Codepunkts gefunden",
  "EnvStrFailedToExtract": "Die Umgebungszeichenfolge konnte nicht erweitert werden:",
  "ErrorDetectingCompilerInfo": "beim Erfassen von Compiler-Informationen:\nDer Inhalt der Protokolldatei unter „{Pfad}“ lautet:",
  "ErrorIndividualPackagesUnsupported": "Im Manifestmodus unterstützt „vcpkg install“ keine einzelnen Paketargumente.\nUm zusätzliche Pakete zu installieren, bearbeiten Sie „vcpkg.json“, und führen Sie dann „vcpkg install“ ohne Paketargumente aus.",
  "ErrorInvalidClassicModeOption": "Die Option --{option} wird im klassischen Modus nicht unterstützt, und es wurde kein Manifest gefunden.",
  "ErrorInvalidManifestModeOption": "Die Option --{option} wird im Manifestmodus nicht unterstützt.",
  "ErrorMessage": "Fehler: ",
  "ErrorMessageMustUsePrintError": "Die Nachricht mit dem Namen {value} beginnt mit „error“: Sie muss so geändert werden, dass „ErrorMessage“ stattdessen im Code vorangestellt wird.",
  "ErrorMissingVcpkgRoot": "„vcpkg-root“ konnte nicht erkannt werden. Wenn Sie versuchen, eine Kopie von „vcpkg“ zu verwenden, die Sie erstellt haben, müssen Sie die VCPKG_ROOT-Umgebungsvariable definieren, um auf eine geklonte Kopie von „https://github.com/Microsoft/vcpkg“ zu verweisen.",
  "ErrorNoVSInstance": "in Triplet {triplet}: Es wurde keine gültige Visual Studio-Instanz gefunden",
  "ErrorNoVSInstanceAt": "unter „{path}“",
  "ErrorNoVSInstanceFullVersion": "mit dem Präfix für die Toolsetversion {version}",
  "ErrorNoVSInstanceVersion": "mit Toolsetversion {version}",
  "ErrorParsingBinaryParagraph": "beim Analysieren des binären Absatzes für {spec}",
  "ErrorRequireBaseline": "Diese „vcpkg“-Instanz erfordert ein Manifest mit einer angegebenen Baseline, um mit Ports zu interagieren. Fügen Sie dem Manifest „builtin-baseline“ hinzu, oder fügen Sie „vcpkg-configuration.json“ hinzu, die die Standardregistrierung neu definiert.",
  "ErrorRequirePackagesList": "„vcpkg install“ erfordert eine Liste von Paketen für die Installation im klassischen Modus.",
  "ErrorUnableToDetectCompilerInfo": "vcpkg konnte die Informationen des aktiven Compilers nicht erkennen. Siehe oben für die CMake-Fehlerausgabe.",
  "ErrorVcvarsUnsupported": "in Triplet {triplet}: Die Verwendung der Developer-Eingabeaufforderung von Visual Studio wird auf Nicht-Windows-Hosts nicht unterstützt.\nDefinieren Sie „VCPKG_CMAKE_SYSTEM_NAME“ oder „VCPKG_CHAINLOAD_TOOLCHAIN_FILE“ in der Triplet-Datei.",
  "ErrorVsCodeNotFound": "Visual Studio Code wurde nicht gefunden, und die Umgebungsvariable {env_var} ist nicht festgelegt oder ungültig.",
  "ErrorVsCodeNotFoundPathExamined": "Die folgenden Pfade wurden untersucht:",
  "ErrorWhileFetchingBaseline": "beim Abrufen der Baseline \"{value}\" aus dem Repository \"{package_name}\":",
  "ErrorWhileParsing": "Fehler beim Analysieren von {path}.",
  "ErrorWhileWriting": "Fehler beim Schreiben {path}",
  "ErrorsFound": "Die folgenden Fehler wurden gefunden:",
  "ExceededRecursionDepth": "Die Rekursionstiefe wurde überschritten.",
  "ExcludedPackage": "Ausgeschlossen: {spec}",
  "ExcludedPackages": "Die folgenden Pakete sind ausgeschlossen:",
  "ExpectedAtMostOneSetOfTags": "Es wurden {count} Sets mit dem Wert {old_value}.*{new_value} gefunden, aber mindestens 1 im Block erwartet:\n{value}",
  "ExpectedCascadeFailure": "Es wurde {expected} Kaskadierungsfehler erwartet, aber es sind {actual} Kaskadierungsfehler aufgetreten.",
  "ExpectedCharacterHere": "'{expected}' wurde hier erwartet",
  "ExpectedDigitsAfterDecimal": "Ziffern nach dem Dezimaltrennzeichen erwartet",
  "ExpectedFailOrSkip": "\"fail\", \"skip\" oder \"pass\" wird hier erwartet.",
  "ExpectedOneSetOfTags": "Es wurden {count} Sets mit dem Wert {old_value}.*{new_value} gefunden, aber genau 1 im Block erwartet:\n{value}",
  "ExpectedPortName": "Hier wurde ein Portname erwartet",
  "ExpectedStatusField": "Im Statusabsatz wurde das Feld „status“ erwartet",
  "ExpectedTripletName": "Hier wurde ein Tripletname erwartet",
  "ExpectedValueForOption": "Nach --{option} wurde ein Wert erwartet.",
  "ExportArchitectureReq": "Für den Export des Prefabs ist mindestens eine der folgenden Architekturen erforderlich: arm64-v8a, armeabi-v7a, x86_64, x86.",
  "ExportPrefabRequiresAndroidTriplet": "Für den Export des Prefabs ist ein Android-Triplet erforderlich.",
  "ExportUnsupportedInManifest": "Der vcpkg-Export unterstützt den Manifestmodus nicht, um zukünftige Entwurfsüberlegungen zu ermöglichen. Sie können den Export im klassischen Modus verwenden, indem Sie vcpkg außerhalb eines manifestbasierten Projekts ausführen.",
  "Exported7zipArchive": "7zip-Archiv exportiert an: {path}",
  "ExportedZipArchive": "Zip-Archiv exportiert an: {path}",
  "ExportingAlreadyBuiltPackages": "Die folgenden Pakete sind bereits erstellt und werden exportiert:",
  "ExportingMaintenanceTool": "Wartungstool wird exportiert...",
  "ExportingPackage": "{package_name} wird exportiert...",
  "ExtendedDocumentationAtUrl": "Unter \"{url}\" ist eine ausführliche Dokumentation erhältlich.",
  "FailedToCheckoutRepo": "Fehler beim Auschecken von \"Versionen\" aus dem Repository \"{package_name}\".",
  "FailedToDownloadFromMirrorSet": "Fehler beim Herunterladen aus dem Spiegelsatz.",
  "FailedToExtract": "Fehler beim Extrahieren von „{path}“:",
  "FailedToFetchError": "{error_msg}\nFehler beim Abrufen von \"{package_name}\":",
  "FailedToFindBaseline": "Fehler beim Suchen von \"baseline.json\".",
  "FailedToFindPortFeature": "{feature} wurde in {spec} nicht gefunden.",
  "FailedToFormatMissingFile": "Keine zu formatierenden Dateien.\nÜbergeben Sie entweder \"--all\" oder die expliziten Dateien zum Formatieren oder Konvertieren.",
  "FailedToLoadInstalledManifest": "Die Steuerelement- oder Manifest-Datei für {spec} konnte aufgrund des folgenden Fehlers nicht geladen werden. Entfernen Sie {spec}, und versuchen Sie es noch einmal.",
  "FailedToLoadPort": "Fehler beim Laden des Ports „{package_name}“ aus {path}",
  "FailedToLoadPortFrom": "Fehler beim Laden des Ports aus {path}",
  "FailedToLoadUnnamedPortFromPath": "Fehler beim Laden des Ports aus {path}",
  "FailedToLocateSpec": "Fehler beim Suchen der Spezifikation im Diagramm: {spec}",
  "FailedToObtainDependencyVersion": "Die gewünschte Abhängigkeitsversion wurde nicht gefunden.",
  "FailedToObtainLocalPortGitSha": "Fehler beim Abrufen von Git-SHAs für lokale Ports.",
  "FailedToObtainPackageVersion": "Die gewünschte Paketversion wurde nicht gefunden.",
  "FailedToParseCMakeConsoleOut": "Fehler beim Analysieren der CMake-Konsolenausgabe, um Blockstart-/Endmarkierungen zu finden.",
  "FailedToParseControl": "Fehler beim Analysieren der Steuerungsdatei: {path}",
  "FailedToParseJson": "Fehler beim Analysieren der JSON-Datei: {path}",
  "FailedToParseManifest": "Fehler beim Analysieren der Manifestdatei: {path}",
  "FailedToParseSerializedBinParagraph": "[Integritätsprüfung] Fehler beim Analysieren eines serialisierten binären Absatzes.\nÖffnen Sie ein Problem unter https://github.com/microsoft/vcpkg, und geben Sie folgende Ausgabe an:\n{error_msg}\nSerialisierter binärer Absatz:",
  "FailedToProvisionCe": "Fehler beim Bereitstellen von vcpkg-ce.",
  "FailedToRead": "Fehler beim Lesen von {path}: {error_msg}",
  "FailedToReadParagraph": "Fehler beim Lesen von Absätzen aus \"{path}\".",
  "FailedToRemoveControl": "Fehler beim Entfernen der Steuerungsdatei \"{path}\".",
  "FailedToRunToolToDetermineVersion": "Fehler beim Ausführen von „{path}“ zum Bestimmen der {tool_name}-Version.",
  "FailedToStoreBackToMirror": "Fehler beim Speichern in der Spiegelung:",
  "FailedToStoreBinaryCache": "Fehler beim Speichern des binären Caches {path}",
  "FailedToWriteManifest": "Fehler beim Schreiben der Manifestdatei \"{path}\".",
  "FailedVendorAuthentication": "Mindestens ein {vendor}-Anmeldeinformationsanbieter konnte nicht authentifiziert werden. Weitere Informationen zum Bereitstellen von Anmeldeinformationen finden Sie unter \"{url}\".",
  "FeedbackAppreciated": "Vielen Dank für Ihr Feedback!",
  "FetchingBaselineInfo": "Baselineinformationen werden von \"{package_name}\" abgerufen...",
  "FetchingRegistryInfo": "Registrierungsinformationen werden von {url} ({value}) abgerufen...",
  "FileNotFound": "{path}: Datei nicht gefunden",
  "FileSystemOperationFailed": "Fehler beim Vorgang des Dateisystems:",
  "FilesExported": "Exportierte Dateien unter: {path}",
  "FishCompletion": "Die vcpkg-fish-Vervollständigung wurde bereits unter „{path}“ hinzugefügt.",
  "FloatingPointConstTooBig": "Gleitkommakonstante zu groß: {count}",
  "FollowingPackagesMissingControl": "Die folgenden Pakete verfügen nicht über eine gültige CONTROL- oder vcpkg.json-Datei:",
  "FollowingPackagesNotInstalled": "Die folgenden Pakete sind nicht installiert:",
  "FollowingPackagesUpgraded": "Die folgenden Pakete sind auf dem neuesten Stand:",
  "ForceSystemBinariesOnWeirdPlatforms": "Die Umgebungsvariable VCPKG_FORCE_SYSTEM_BINARIES muss auf ARM-, S390x- und ppc64le-Plattformen festgelegt werden.",
  "FormattedParseMessageExpression": "beim Ausdruck: {value}",
  "GenerateMsgErrorParsingFormatArgs": "Formatzeichenfolge für {value} wird analysiert:",
  "GenerateMsgIncorrectComment": "Die Nachricht {value} weist einen falschen Kommentar auf:",
  "GenerateMsgNoArgumentValue": "{{{value}}} wurde in einem Kommentar angegeben, aber nicht in der Nachricht verwendet.",
  "GenerateMsgNoCommentValue": "{{{value}}} wurde in der Nachricht verwendet, aber nicht kommentiert.",
  "GeneratedConfiguration": "Die Konfiguration \"{path}\" wurde generiert.",
  "GeneratedInstaller": "{path} Installationsprogramm wurde generiert.",
  "GeneratingConfiguration": "Die Konfiguration \"{path}\" wird generiert...",
  "GeneratingInstaller": "Installationsprogramm \"{path}\" wird generiert...",
  "GeneratingRepo": "Repository \"{path}\" wird generiert...",
  "GetParseFailureInfo": "Verwenden Sie „--debug“, um weitere Informationen zu den Analysefehlern zu erhalten.",
  "GitCommandFailed": "Fehler beim Ausführen von {command_line}",
  "GitRegistryMustHaveBaseline": "Der Git-Registrierungseintrag für \"{package_name}\" muss ein Feld \"Baseline\" aufweisen, das ein gültiger Git-Commit-SHA (40 Hexadezimalzeichen) ist.\nDer aktuelle HEAD-Wert dieses Repositorys ist \"{value}\".",
  "GitStatusOutputExpectedFileName": "Es wurde ein Dateiname erwartet.",
  "GitStatusOutputExpectedNewLine": "Neue Zeile erwartet",
  "GitStatusOutputExpectedRenameOrNewline": "Umbenannte Datei oder neue Zeilen erwartet",
  "GitStatusUnknownFileStatus": "Unbekannter Dateistatus: {value}",
  "GitUnexpectedCommandOutput": "Unerwartete Git-Ausgabe",
  "GraphCycleDetected": "Zyklische Abhängigkeit im Graphen erkannt bei {package_name}:",
  "HashFileFailureToRead": "Fehler beim Lesen der Datei „{Pfad}“ zum Hashen: ",
  "HeaderOnlyUsage": "„{package_name}“ ist Header-only und kann von CMake aus verwendet werden über:",
  "HelpBuiltinBase": "Die Baseline verweist auf einen Commit innerhalb des vcpkg-Repositorys, der eine Mindestversion für jede Abhängigkeit im Diagramm festlegt. Wenn beispielsweise keine anderen Einschränkungen angegeben werden (direkt oder transitiv), wird die Version in die Baseline des Manifests der obersten Ebene aufgelöst. Baselines transitiver Abhängigkeiten werden ignoriert.",
  "HelpContactCommand": "Kontaktinformationen anzeigen, um Feedback zu senden.",
  "HelpCreateCommand": "Erstellen Sie einen neuen Port.",
  "HelpDependInfoCommand": "Zeigt eine Liste der Abhängigkeiten für Ports an.",
  "HelpEditCommand": "Öffnen Sie einen Port zum Bearbeiten (verwenden Sie die Umgebungsvariable „{env_var}“, um ein Editorprogramm festzulegen. Standardmäßig wird „code“ verwendet).",
  "HelpEnvCommand": "Erstellt eine bereinigende Shellumgebung für die Entwicklung oder Kompilierung.",
  "HelpExampleCommand": "Weitere Hilfe (einschließlich Beispiele) finden Sie im zugehörigen Ordner für README.md und Dokumente.",
  "HelpExampleManifest": "Beispielmanifest:",
  "HelpExportCommand": "Exportiert ein Paket.",
  "HelpFormatManifestCommand": "Formatiert alle vcpkg.json-Dateien. Führen Sie dies aus, bevor Sie einen Commit für vcpkg ausführen.",
  "HelpHashCommand": "Hash einer Datei nach einem bestimmten Algorithmus, Standardmäßig SHA512.",
  "HelpInitializeRegistryCommand": "Initialisiert eine Registrierung im Verzeichnis <path>.",
  "HelpInstallCommand": "Installieren Sie ein Paket.",
  "HelpListCommand": "Listen Sie installierte Pakete auf.",
  "HelpManifestConstraints": "Manifeste können drei Arten von Einschränkungen auf die verwendeten Versionen platzieren.",
  "HelpMinVersion": "Vcpkg wählt die gefundene Mindestversion aus, die allen anwendbaren Einschränkungen entspricht, einschließlich der Version aus der Baseline, die auf oberster Ebene angegeben wurde, sowie alle \"version>=\"-Einschränkungen im Diagramm.",
  "HelpOverrides": "Bei Verwendung als Manifest der obersten Ebene (z. B. beim Ausführen von \"vcpkg install\" im Verzeichnis) lassen Außerkraftsetzungen zu, dass ein Manifest die Abhängigkeitsauflösung kurzschließt und die zu verwendende Version angibt. Sie können verwendet werden, um Versionskonflikte wie Abhängigkeiten vom Typ \"version-string\" zu behandeln. Sie werden nicht berücksichtigt, wenn sie transitiv abhängig sind.",
  "HelpOwnsCommand": "Suchen Sie nach Dateien in installierten Paketen.",
  "HelpPackagePublisher": "Darüber hinaus können Paketherausgeber Einschränkungen vom Typ “version>=\" verwenden, um sicherzustellen, dass Konsumenten mindestens eine bestimmte Mindestversion einer vorgegebenen Abhängigkeit verwenden. Wenn zu einer Bibliothek beispielsweise eine API benötigt, die Boost Asio in Version 1.70 hinzugefügt wird, stellt eine \"version>=\"-Einschränkung sicher, dass transitive Benutzer selbst bei Überschreibungen einzelner Versionen oder registrierungsübergreifenden Verweisen eine ausreichende Version verwenden.",
  "HelpPortVersionScheme": "Jede Version hat zusätzlich eine \"port-version\", bei der es sich um eine nicht negative ganze Zahl handelt. Wenn sie als Text gerendert wird, wird die Portversion (falls ungleich null) als Suffix zum primären Versionstext hinzugefügt und durch einen Hash (#) getrennt. Portversionen werden lexografisch nach dem primären Versionstext sortiert, z. B.:\n1.0.0 < 1.0.0#1 < 1.0.1 < 1.0.1#5 < 2.0.0",
  "HelpRemoveCommand": "Deinstallieren Sie ein Paket.",
  "HelpRemoveOutdatedCommand": "Deinstallieren Sie alle veralteten Pakete.",
  "HelpResponseFileCommand": "Geben Sie eine Antwortdatei an, um zusätzliche Parameter bereitzustellen.",
  "HelpSearchCommand": "Suchen Sie nach verfügbaren Paketen, die erstellt werden können.",
  "HelpTopicCommand": "Hilfe zu einem bestimmten Thema anzeigen.",
  "HelpTopicsCommand": "Zeigt die Liste der Hilfethemen an.",
  "HelpUpdateBaseline": "Der beste Ansatz, um Ihre Bibliotheken auf dem neuesten Stand zu halten, besteht im Aktualisieren Ihres Baselineverweises. Hierdurch wird sichergestellt, dass alle Pakete, einschließlich transitiver Pakete, aktualisiert werden. Wenn Sie jedoch ein Paket unabhängig aktualisieren müssen, können Sie eine \"version>=\"-Einschränkung verwenden.",
  "HelpUpdateCommand": "Listet Pakete auf, die aktualisiert werden können.",
  "HelpUpgradeCommand": "Alle veralteten Pakete neu erstellen.",
  "HelpVersionCommand": "Zeigt Versionsinformationen an.",
  "HelpVersionDateScheme": "Ein Datum (01.01.2021)",
  "HelpVersionGreater": "Innerhalb des Felds \"Abhängigkeiten\" kann für jede Abhängigkeit eine Mindesteinschränkung aufgelistet werden. Diese Mindesteinschränkungen werden abhängig von dieser Bibliothek transitiv verwendet. Zusätzlich kann eine minimale Portversion mit dem Suffix \"#\" angegeben werden.",
  "HelpVersionScheme": "Eine durch Punkte getrennte Sequenz von Zahlen (1.2.3.4)",
  "HelpVersionSchemes": "Die folgenden Versionsschemas werden akzeptiert.",
  "HelpVersionSemverScheme": "EIne Semantische Version 2.0 (2.1.0-rc2)",
  "HelpVersionStringScheme": "Eine genaue, nicht kompatible Version (Vista)",
  "HelpVersioning": "Mithilfe der Versionsverwaltung können Sie deterministisch die genauen Revisionen von Abhängigkeiten steuern, die von Ihrem Projekt innerhalb Ihrer Manifestdatei verwendet werden.",
  "IgnoringVcpkgRootEnvironment": "Die Umgebungsvariable „VCPKG_ROOT“ wird ignoriert. Verwenden Sie „--vcpkg-root ‘{path}‘“, um den Umgebungswert zu nutzen, oder entfernen Sie die Umgebungsvariable „VCPKG_ROOT“, um diese Meldung zu unterdrücken. Der erkannte vcpkg-Stamm „{actual}“ wird verwendet.",
  "IllegalFeatures": "Die Liste der Features ist in diesem Kontext nicht zulässig",
  "IllegalPlatformSpec": "Der Plattformqualifizierer ist in diesem Kontext nicht zulässig",
  "ImproperShaLength": "SHA512-Zeichen müssen 128 Hexadezimalzeichen umfassen: {value}",
  "IncorrectArchiveFileSignature": "Falsche Archivdateisignatur",
  "IncorrectLibHeaderEnd": "Falsches Bibliotheksheaderende",
  "IncorrectNumberOfArgs": "„{command_name}“ erfordert „{expected}“ Argumente, es wurden jedoch „{actual}“ angegeben.",
  "IncorrectPESignature": "Falsche PE-Signatur",
  "IncrementedUtf8Decoder": "Erhöhter Utf8Decoder am Ende der Zeichenfolge",
  "InfoSetEnvVar": "Sie können die Umgebungsvariable „{env_var}“ auch auf den Editor Ihrer Wahl festlegen.",
  "InitRegistryFailedNoRepo": "Unter {path} konnte keine Registrierung erstellt werden, da es sich nicht um einen Git-Repositorystamm handelt.\nVerwenden Sie „git init {command_line}“, um ein Git-Repository in diesem Ordner zu erstellen.",
  "InstallFailed": "Fehler: {path}: {error_msg}",
  "InstallPackageInstruction": "Wechseln Sie bei geöffnetem Projekt zu Tools > NuGet-Paket-Manager-> Paket-Manager Konsole und fügen Sie Folgendes ein:\n Install-Package „{ wert}“ -Quelle „{path}“",
  "InstallRootDir": "(Experimentell) Geben Sie das Installationsstammverzeichnis an.",
  "InstallWithSystemManager": "Möglicherweise können Sie dieses Tool über Ihren Systempaket-Manager installieren.",
  "InstallWithSystemManagerMono": "Ubuntu 18.04-Benutzer benötigen möglicherweise eine neuere Version von Mono, die unter {url} verfügbar ist.",
  "InstallWithSystemManagerPkg": "Möglicherweise können Sie dieses Tool über Ihren Systempaket-Manager ({command_line}) installieren.",
  "InstalledBy": "Installiert von {path}",
  "InstalledPackages": "Die folgenden Pakete sind bereits installiert:",
  "InstalledRequestedPackages": "Alle angeforderten Pakete sind derzeit installiert.",
  "InstallingFromLocation": "-- Installation des Ports von Speicherort: {Pfad}",
  "InstallingMavenFile": "{path} -Installation der Maven-Datei",
  "InstallingPackage": "Installing {action_index}/{count} {spec}...",
  "IntegrationFailed": "Die Integration wurde nicht angewendet.",
  "InternalCICommand": "vcpkg ci ist ein interner Befehl, der sich inkompatibel ändert oder jederzeit entfernt wird.",
  "InternalErrorMessage": "Interner Fehler: ",
  "InternalErrorMessageContact": "Geben Sie unter „https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug“ das Problem mit detaillierten Schritten an, um das Problem zu reproduzieren.",
  "InvalidArgMustBeAnInt": "--{option} muss eine ganze Zahl sein.",
  "InvalidArgMustBePositive": "--{option} darf nicht negativ sein.",
  "InvalidArgument": "Ungültiges Argument.",
  "InvalidArgumentRequiresAbsolutePath": "Ungültiges Argument: Die binäre Konfiguration '{binary_source}' Pfadargumente für binäre Konfigurationszeichenfolgen müssen absolut sein.",
  "InvalidArgumentRequiresBaseUrl": "Ungültiges Argument: Für die binäre Konfiguration '{binary_source}' ist eine {base_url} Basis-URL als erstes Argument erforderlich.",
  "InvalidArgumentRequiresBaseUrlAndToken": "Ungültiges Argument: Die Binärkonfiguration „{binary_source}“ erfordert mindestens eine Basis-URL und ein SAS-Token",
  "InvalidArgumentRequiresNoneArguments": "Ungültiges Argument: Die binäre Konfiguration '{binary_source}' akzeptiert keine Argumente",
  "InvalidArgumentRequiresOneOrTwoArguments": "ungültiges Argument: Binärkonfiguration „{binary_source}“ erfordert 1 oder 2 Argumente",
  "InvalidArgumentRequiresPathArgument": "Ungültiges Argument: Die Binärkonfiguration \"{binary_source}\" erfordert mindestens ein Pfadargument",
  "InvalidArgumentRequiresPrefix": "Ungültiges Argument: Die Binärkonfiguration \"{binary_source}\" erfordert mindestens ein Präfix",
  "InvalidArgumentRequiresSingleArgument": "Ungültiges Argument: Die Binärkonfiguration „{binary_source}“ akzeptiert nicht mehr als 1 Argument",
  "InvalidArgumentRequiresSingleStringArgument": "Ungültiges Argument: Binäre Konfiguration '{binary_source}' erwartet ein einzelnes Zeichenfolgenargument.",
  "InvalidArgumentRequiresSourceArgument": "Ungültiges Argument: Die Binärkonfiguration \"{binary_source}\" erfordert mindestens ein Quellenargument",
  "InvalidArgumentRequiresTwoOrThreeArguments": "ungültiges Argument: Binärkonfiguration „{binary_source}“ erfordert 2 oder 3 Argumente",
  "InvalidArgumentRequiresValidToken": "Ungültiges Argument: Für die binäre Konfiguration '{binary_source}' ist ein SAS-Token ohne voranstellendes \"?\"-Argument als zweites Argument erforderlich",
  "InvalidBuildInfo": "Ungültige BUILD_INFO für Paket: {error_msg}",
  "InvalidCodePoint": "An utf8_encoded_code_point_count wurde ein ungültiger Codepunkt übergeben",
  "InvalidCodeUnit": "Ungültige Codeeinheit",
  "InvalidCommandArgSort": "Der Wert von „--sort“ muss „lexikografisch“, „topologisch“ oder „umgekehrt“ sein.",
  "InvalidCommentStyle": "vcpkg unterstützt keine Kommentare im C-Stil, aber die meisten Objekte ermöglichen die Verwendung von Feldern mit dem Präfix $ als Kommentare.",
  "InvalidCommitId": "Ungültige Commit-ID: {commit_sha}",
  "InvalidFileType": "Fehler: {path} kann den Dateityp nicht verarbeiten",
  "InvalidFilename": "Der Dateiname darf keine ungültigen Zeichen {value} enthalten, lautete aber {path}",
  "InvalidFloatingPointConst": "Ungültige Gleitkommakonstante: {count}",
  "InvalidFormatString": "Ungültige Formatzeichenfolge. {actual}",
  "InvalidHexDigit": "Ungültige Hexadezimalziffer im Unicode-Escapezeichen",
  "InvalidIntegerConst": "Ungültige ganzzahlige Konstante: {count}",
  "InvalidLinkage": "Ungültiger {system_name} Bindungstyp: [{value}]",
  "InvalidOptionForRemove": "„remove“ akzeptiert entweder Bibliotheken oder „--outdated“",
  "InvalidPortVersonName": "Ungültiger Dateiname der Portversion gefunden: {path}.",
  "InvalidString": "An Value::string(std::string) wurde ungültiger UTF8-Code übergeben.",
  "InvalidTriplet": "Ungültiges Triplet: {triplet}",
  "IrregularFile": "Der Pfad war keine reguläre Datei: {path}",
  "JsonErrorMustBeAnObject": "Es wurde erwartet, dass es sich bei „{path}“ um ein Objekt handelt.",
  "JsonFileMissingExtension": "Die JSON-Datei \"{path}\" muss die Erweiterung .json (nur Kleinbuchstaben) aufweisen.",
  "JsonSwitch": "(Experimentell) JSON-Ausgabe anfordern.",
  "JsonValueNotArray": "JSON-Wert ist kein Array.",
  "JsonValueNotObject": "Der JSON-Wert ist kein Objekt.",
  "JsonValueNotString": "Der JSON-Wert ist keine Zeichenfolge.",
  "LaunchingProgramFailed": "{tool_name} wird gestartet:",
  "LicenseExpressionContainsExtraPlus": "Der SPDX-Lizenzausdruck enthält ein zusätzliches „+“. Diese sind nur direkt nach einem Lizenzbezeichner zulässig.",
  "LicenseExpressionContainsInvalidCharacter": "Der SPDX-Lizenzausdruck enthält ein ungültiges Zeichen (0x{value:02X} „{value}“).",
  "LicenseExpressionContainsUnicode": "Der SPDX-Lizenzausdruck enthält ein Unicode-Zeichen (U+{value:04X} „{pretty_value}“), aber diese Ausdrücke dürfen nur ASCII sein.",
  "LicenseExpressionDocumentRefUnsupported": "Die aktuelle Implementierung unterstützt keine SPDX-Verweise mit DocumentRef-.",
  "LicenseExpressionExpectCompoundFoundParen": "Ein Verbund oder das Ende der Zeichenfolge wurde erwartet, eine Klammer wurde gefunden.",
  "LicenseExpressionExpectCompoundFoundWith": "Entweder AND oder OR wurde erwartet, WITH wurde gefunden (WITH ist nur nach Lizenznamen zulässig, nicht nach Ausdrücken in Klammern).",
  "LicenseExpressionExpectCompoundFoundWord": "Entweder AND oder OR wurde erwartet., ein Lizenz- oder Ausnahmename wurde gefunden: „{value}“.",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "Entweder AND, OR oder WITH wurde erwartet, ein Lizenz- oder Ausnahmename wurde gefunden: „{value}“.",
  "LicenseExpressionExpectExceptionFoundCompound": "Ein Ausnahmename wurde erwartet, der Verbund {value} wurde gefunden.",
  "LicenseExpressionExpectExceptionFoundEof": "Ein Ausnahmename wurde erwartet, das Ende der Zeichenfolge wurde gefunden.",
  "LicenseExpressionExpectExceptionFoundParen": "Ein Ausnahmename wurde erwartet, eine Klammer wurde gefunden.",
  "LicenseExpressionExpectLicenseFoundCompound": "Ein Lizenzname wurde erwartet, der Verbund „{value}“ wurde gefunden.",
  "LicenseExpressionExpectLicenseFoundEof": "Ein Lizenzname wurde erwartet, das Ende der Zeichenfolge wurde gefunden.",
  "LicenseExpressionExpectLicenseFoundParen": "Ein Lizenzname wurde erwartet, eine Klammer wurde gefunden.",
  "LicenseExpressionImbalancedParens": "Es wurde eine schließende Klammer ohne eine öffnende Klammer gefunden.",
  "LicenseExpressionUnknownException": "Unbekannter Lizenzausnahmebezeichner „{value}“. Bekannte Werte werden unter https://spdx.org/licenses/exceptions-index.html aufgeführt.",
  "LicenseExpressionUnknownLicense": "Unbekannter Lizenzbezeichner „{value}“. Bekannte Werte werden unter https://spdx.org/licenses/ aufgeführt.",
  "ListOfValidFieldsForControlFiles": "Dies ist die Liste der gültigen Felder für CONTROL-Dateien (Groß-/Kleinschreibung beachten):",
  "LoadingCommunityTriplet": "-- [COMMUNITY] Laden der Triplet-Konfiguration von: {Pfad}",
  "LoadingDependencyInformation": "Abhängigkeitsinformationen für {count} Pakete werden geladen...",
  "LoadingOverlayTriplet": "-- [OVERLAY] Laden der Triplet-Konfiguration von: {Pfad}",
  "LocalizedMessageMustNotContainIndents": "Die Nachricht mit dem Namen {value} enthält eine Art Einzug, der geändert werden muss, damit stattdessen „LocalizedString::append_indent“ verwendet werden kann.",
  "LocalizedMessageMustNotEndWithNewline": "Die Nachricht mit dem Namen {value} endet mit einem Zeilenumbruch, der durch Formatierung und nicht durch Lokalisierung hinzugefügt werden soll.",
  "ManifestConflict": "Es wurden sowohl Manifest- als auch CONTROL-Dateien im Port „{path}“ gefunden; benennen Sie die eine oder die andere um",
  "ManifestFormatCompleted": "Die Manifestdateien wurden erfolgreich formatiert.",
  "MismatchedFiles": "Die zu speichernde Datei stimmt nicht mit dem Hash überein.",
  "MismatchedNames": "Namen stimmten nicht überein: '{package_name}' != '{actual}'",
  "Missing7zHeader": "Der 7z-Header wurde nicht gefunden.",
  "MissingAndroidEnv": "ANDROID_NDK_HOME Umgebungsvariable fehlt",
  "MissingAndroidHomeDir": "ANDROID_NDK_HOME Verzeichnis ist nicht vorhanden: {path}",
  "MissingArgFormatManifest": "format-manifest wurde ohne \"--all\" an \"--convert-control\" übergeben.\nDies führt keine Aktion aus: Explizit übergebene Steuerdateien werden automatisch konvertiert.",
  "MissingDependency": "Das Paket {spec} ist installiert, die Abhängigkeit {package_name} jedoch nicht.",
  "MissingExtension": "Die Erweiterung „{extension}“ fehlt.",
  "MissingOption": "Für diesen Befehl ist \"--{option}\" erforderlich.",
  "MissingPortSuggestPullRequest": "Wenn Ihr Port nicht aufgeführt ist, öffnen Sie ein Problem und/oder erwägen Sie, einen Pull Request zu erstellen.",
  "MissmatchedBinParagraphs": "Der serialisierte binäre Absatz unterscheidet sich vom ursprünglichen binären Absatz. Öffnen Sie unter https://github.com/microsoft/vcpkg ein Problem mit der folgenden Ausgabe:",
  "MonoInstructions": "Dies kann auf eine unvollständige Mono-Installation zurückzuführen sein. Vollständige Mono-Installationen sind auf einigen Systemen über „sudo apt install mono-complete“ verfügbar. Ubuntu 18.04-Benutzer benötigen möglicherweise eine neuere Mono-Version, die unter „https://www.mono-project.com/download/stable/“ verfügbar ist",
  "MsiexecFailedToExtract": "msiexec-Fehler beim Extrahieren von „{path}“ mit Start- oder Exitcode {exit_code} und Meldung:",
  "MultiArch": "Multi-Arch muss \"same\" sein, war aber {option}",
  "MutuallyExclusiveOption": "„--{value}“ kann nicht mit „--{option}“ verwendet werden.",
  "NavigateToNPS": "Navigieren Sie zu {url} in Ihrem bevorzugten Browser.",
  "NewConfigurationAlreadyExists": "Das Erstellen eines Manifests würde eine vcpkg-configuration.json unter „{path}“ überschreiben.",
  "NewManifestAlreadyExists": "Unter „{path}“ ist bereits ein Manifest vorhanden.",
  "NewNameCannotBeEmpty": "„--name“ darf nicht leer sein.",
  "NewOnlyOneVersionKind": "Es kann nur eine der Zeichenfolgen „--version-relaxed“, „--version-date“ oder „--version-string“ angegeben werden.",
  "NewSpecifyNameVersionOrApplication": "Geben Sie entweder „--name“ und „--version“ an, um ein Manifest für C++-Bibliotheken zu erstellen, oder geben Sie „--application“ an, um anzugeben, dass das Manifest nicht als Port verwendet werden soll.",
  "NewVersionCannotBeEmpty": "„--version“ darf nicht leer sein.",
  "NoArgumentsForOption": "Die Option --{option} akzeptiert kein Argument.",
  "NoCachedPackages": "Es sind keine Pakete zwischengespeichert.",
  "NoError": "Kein Fehler",
  "NoInstalledPackages": "Es sind keine Pakete installiert. Meinten Sie „Suchen“?",
  "NoLocalizationForMessages": "Keine lokalisierte Meldungen für Folgendes: ",
  "NoOutdatedPackages": "Es sind keine veralteten Pakete vorhanden.",
  "NoRegistryForPort": "für Port {package_name} ist keine Registrierung konfiguriert",
  "NoteMessage": "Hinweis: ",
  "NugetPackageFileSucceededButCreationFailed": "Die NuGet-Paketerstellung war erfolgreich, es wurde jedoch keine nupkg-Datei erstellt. Erwartet: „{path}“",
  "OptionMustBeInteger": "Der Wert von „--{option}“ muss eine ganze Zahl sein.",
  "OptionRequired": "Die Option --{option} ist erforderlich.",
  "OptionRequiresOption": "--{value} erfordert --{option}",
  "OriginalBinParagraphHeader": "\nUrsprünglicher binärer Absatz",
  "OverlayPatchDir": "Der Überlagerungspfad „{path}“ muss vorhanden sein und muss ein Verzeichnis sein.",
  "OverlayTriplets": "Überlagerungstriplets aus {Pfad} :",
  "OverwritingFile": "Die Datei {path} war bereits vorhanden und wird überschrieben",
  "PackageAlreadyRemoved": "Das Paket {spec} kann nicht entfernt werden: bereits entfernt",
  "PackageFailedtWhileExtracting": "Fehler bei „{value}“ beim Extrahieren von „{path}“.",
  "PackageRootDir": "(Experimentell) Geben Sie das Buildstrukturstammverzeichnis an.",
  "PackagesToInstall": "Die folgenden Pakete werden erstellt und installiert:",
  "PackagesToInstallDirectly": "Die folgenden Pakete werden direkt installiert:",
  "PackagesToModify": "Zusätzliche Pakete (*) werden geändert, um diesen Vorgang abzuschließen.",
  "PackagesToRebuild": "Die folgenden Pakete werden neu erstellt:",
  "PackagesToRebuildSuggestRecurse": "Wenn Sie sicher sind, dass Sie die obigen Pakete neu erstellen möchten, führen Sie den Befehl mit der Option \"--recurse\" aus.",
  "PackagesToRemove": "Die folgenden Pakete werden entfernt:",
  "PackingVendorFailed": "Fehler bei der {vendor}-Paketerstellung. Verwenden Sie \"--debug\", um weitere Informationen zu erhalten.",
  "PairedSurrogatesAreInvalid": "Nachstehendes Ersatzzeichen nach vorangestelltem Ersatzzeichen (paarweise Ersatzzeichen sind ungültig)",
  "ParseControlErrorInfoInvalidFields": "Die folgenden Felder wurden nicht erwartet:",
  "ParseControlErrorInfoMissingFields": "Die folgenden Felder fehlten:",
  "ParseControlErrorInfoTypesEntry": "{value} wurde als {expected} erwartet",
  "ParseControlErrorInfoWhileLoading": "beim Laden von {path}:",
  "ParseControlErrorInfoWrongTypeFields": "Die folgenden Felder wiesen die falschen Typen auf:",
  "PortDependencyConflict": "Port {package_name} weist die folgenden nicht unterstützten Abhängigkeiten auf:",
  "PortNotInBaseline": "die Baseline enthält keinen Eintrag für Port {package_name}",
  "PortSupportsField": "(unterstützt: \"{supports_expression}\")",
  "PortTypeConflict": "Der Porttyp von {spec} unterscheidet sich zwischen der installierten und der verfügbaren Portdatei.\nEntfernen Sie {spec} manuell, und führen Sie diesen Befehl erneut aus.",
  "PortsAdded": "Die folgenden {count} Ports wurden hinzugefügt:",
  "PortsNoDiff": "Es wurden keine Änderungen an den Ports zwischen den beiden Commits vorgenommen.",
  "PortsRemoved": "Die folgenden {count} Ports wurden entfernt:",
  "PortsUpdated": "\nDie folgenden {count} Ports wurden entfernt:",
  "PrebuiltPackages": "Es gibt Pakete, die nicht erstellt wurden. Führen Sie die folgenden Ausführungen aus, um sie zu erstellen:",
  "PreviousIntegrationFileRemains": "Die vorherige Integrationsdatei wurde nicht entfernt.",
  "ProcessorArchitectureMalformed": "%PROCESSOR_ARCHITECTURE% ({arch}) konnte nicht als gültige CPU-Architektur geparst werden.",
  "ProcessorArchitectureMissing": "Die erforderliche Umgebungsvariable %PROCESSOR_ARCHITECTURE% fehlt.",
  "ProcessorArchitectureW6432Malformed": "%PROCESSOR_ARCHITEW6432% ({arch}) konnte nicht als gültige CPU-Architektur geparst werden. Fallback auf %PROCESSOR_ARCHITECTURE% wird durchgeführt.",
  "ProgramReturnedNonzeroExitCode": "Fehler bei {tool_name}. Exitcode: ({exit_code}).",
  "ProvideExportType": "Mindestens eine der folgenden Optionen ist erforderlich: --raw --nuget --ifw --zip --7zip --chocolatey --prefab.",
  "PushingVendorFailed": "Fehler beim Pushen von {vendor} nach „{path}“. Verwenden Sie „--debug“, um weitere Informationen zu erhalten.",
  "RegistryCreated": "Die Registrierung wurde erfolgreich unter {path} erstellt",
  "RemoveDependencies": "Um Abhängigkeiten im Manifestmodus zu entfernen, bearbeiten Sie Ihr Manifest (vcpkg.json), und führen Sie „install“ aus.",
  "RemovePackageConflict": "Ein anderes installiertes Paket stimmt mit dem Namen einer Anforderung ohne Übereinstimmung überein. Meinten Sie {spec}?",
  "RemovingPackage": "{action_index}/{count} {spec} wird entfernt.",
  "ReplaceSecretsError": "Ersetzen von Geheimnissen führte zu folgendem Fehler: \"{error_msg}\"",
  "RestoredPackage": "Das Paket wurde aus „{path}“ wiederhergestellt.",
  "RestoredPackagesFromVendor": "{count} Paket(e) wurde(n) von {value} in {elapsed} wiederhergestellt. Verwenden Sie \"--debug\", um weitere Details anzuzeigen.",
  "ResultsHeader": "ERGEBNISSE",
  "SeeURL": "Weitere Informationen finden Sie unter {url}.",
  "SerializedBinParagraphHeader": "\nSerialisierter binärer Absatz",
  "SettingEnvVar": "-- Setzen der Umgebungsvariablen \"{env_var}\" auf \"{url}\".",
  "ShaPassedAsArgAndOption": "SHA512 wurde sowohl als Argument als auch als Option übergeben. Übergeben Sie nur eine dieser Optionen.",
  "ShaPassedWithConflict": "SHA512 erfolgreich, aber --skip-sha512 wurde ebenfalls übergeben. Führen Sie nur eine dieser Optionen aus.",
  "ShallowRepositoryDetected": "vcpkg wurde als flaches Repository geklont in: {path}\nWiederholen Sie den Vorgang mit einem vollständigen vcpkg-Klon.",
  "SkipClearingInvalidDir": "Das Löschen des Inhalts von {path} wird übersprungen, da es sich nicht um ein Verzeichnis handelte.",
  "SourceFieldPortNameMismatch": "Das Feld „Source“ innerhalb der CONTROL-Datei oder das Feld „name“ innerhalb der Datei „vcpkg.json“ weist den Namen „{package_name}“ auf und stimmt nicht mit dem Portverzeichnis „{path}“ überein.",
  "SpecifiedFeatureTurnedOff": "Das Feature '{command_name}' wurde speziell deaktiviert, aber --{option} wurde angegeben.",
  "SpecifyDirectoriesContaining": "Geben Sie Verzeichnisse an, die Tripletsdateien enthalten.\n(auch: '{env_var}')",
  "SpecifyDirectoriesWhenSearching": "Geben Sie Verzeichnisse an, die bei der Suche nach Ports verwendet werden sollen.\n(auch: '{env_var}')",
  "SpecifyHostArch": "Geben Sie das Triplet für die Hostarchitektur an. Siehe „vcpkg help triplet“.\n(Standard: „{env_var}“)",
  "SpecifyTargetArch": "Geben Sie das Triplet für die Zielarchitektur an. Siehe „vcpkg help triplet“.\n(Standard: „{env_var}“)",
  "StartCodeUnitInContinue": "Startcodeeinheit in Fortsetzungsposition gefunden",
  "StoreOptionMissingSha": "Die Option \"--store\" ist ohne sha512 ungültig.",
  "StoredBinaryCache": "Gespeicherter binärer Cache: „{path}“",
  "SuccessfulyExported": "{package_name} nach {path} exportiert",
  "SuggestGitPull": "Das Ergebnis ist möglicherweise veraltet. Führen Sie \"git pull\" aus, um die neuesten Ergebnisse zu erhalten.",
  "SuggestResolution": "Um zu versuchen, alle Fehler gleichzeitig zu beheben, führen Sie Folgendes aus:\nvcpkg {command_name} --{option}",
  "SuggestStartingBashShell": "Stellen Sie sicher, dass Sie eine neue Bash-Shell gestartet haben, damit die Änderung wirksam wird.",
  "SuggestUpdateVcpkg": "Möglicherweise müssen Sie die vcpkg-Binärdatei aktualisieren. Versuchen Sie, {command_line} zum Aktualisieren auszuführen.",
  "SupportedPort": "Port {package_name} wird unterstützt.",
  "SystemApiErrorMessage": "Fehler beim Aufrufen von {system_api}. {exit_code} ({error_msg})",
  "ToolFetchFailed": "{tool_name} konnte nicht abgerufen werden.",
  "ToolInWin10": "Dieses Hilfsprogramm ist mit Windows 10 oder höher gebündelt.",
  "TotalTime": "Insgesamt verstrichene Zeit: {elapsed}",
  "TrailingCommaInArray": "Nachgestelltes Komma im Array",
  "TrailingCommaInObj": "Nachgestelltes Komma in einem Objekt",
  "TwoFeatureFlagsSpecified": "Sowohl „{value}“ als auch -“{value}“ wurden als Featurekennzeichen angegeben.",
  "UndeterminedToolChainForTriplet": "Die Toolkettenverwendung für {triplet} mit CMAKE_SYSTEM_NAME {system_name} kann nicht ermittelt werden. Wollten Sie VCPKG_CHAINLOAD_TOOLCHAIN_FILE verwenden?",
  "UnexpectedByteSize": "Es wurde erwartet, dass {expected} Bytes geschrieben werden, aber {actual} wurden geschrieben.",
  "UnexpectedCharExpectedCloseBrace": "Unerwartetes Zeichen; Eigenschaft oder schließende geschweifte Klammer erwartet",
  "UnexpectedCharExpectedColon": "Unerwartetes Zeichen; Doppelpunkt erwartet",
  "UnexpectedCharExpectedComma": "Unerwartetes Zeichen; Komma oder schließende geschweifte Klammer erwartet",
  "UnexpectedCharExpectedName": "Unerwartetes Zeichen; Eigenschaftenname erwartet",
  "UnexpectedCharExpectedValue": "Unerwartetes Zeichen; Wert erwartet",
  "UnexpectedCharMidArray": "Unerwartetes Zeichen in der Mitte des Arrays",
  "UnexpectedCharMidKeyword": "Unerwartetes Zeichen in der Mitte des Schlüsselworts",
  "UnexpectedDigitsAfterLeadingZero": "Unerwartete Ziffern nach einer führenden Null",
  "UnexpectedEOFAfterEscape": "Unerwartetes EOF nach Escapezeichen",
  "UnexpectedEOFAfterMinus": "Unerwartetes EOF nach Minuszeichen",
  "UnexpectedEOFExpectedChar": "Unerwartetes Zeichen; EOF erwartet",
  "UnexpectedEOFExpectedCloseBrace": "Unerwartetes EOF; Eigenschaft oder schließende geschweifte Klammer erwartet",
  "UnexpectedEOFExpectedColon": "Unerwartetes EOF; Doppelpunkt erwartet",
  "UnexpectedEOFExpectedName": "Unerwartetes EOF; Eigenschaftenname erwartet",
  "UnexpectedEOFExpectedProp": "Unerwartetes EOF; Eigenschaft erwartet",
  "UnexpectedEOFExpectedValue": "Unerwartetes EOF; Wert erwartet",
  "UnexpectedEOFMidArray": "Unerwartetes EOF in der Mitte des Arrays",
  "UnexpectedEOFMidKeyword": "Unerwartetes EOF in der Mitte des Schlüsselworts",
  "UnexpectedEOFMidString": "Unerwartetes EOF in der Mitte der Zeichenfolge",
  "UnexpectedEOFMidUnicodeEscape": "Unerwartetes Dateiende in der Mitte des Unicode-Escapezeichens",
  "UnexpectedErrorDuringBulkDownload": "Unerwarteter Fehler beim Massendownload.",
  "UnexpectedEscapeSequence": "Unerwartete Fortsetzung der Escapesequenz",
  "UnexpectedExtension": "Unerwartete Archiverweiterung: „{extension}“.",
  "UnexpectedFormat": "Das erwartete Format ist [{expected}], war aber [{actual}].",
  "UnexpectedPortName": "Der Port {expected} wird als {actual} in {path} deklariert.",
  "UnexpectedToolOutput": "{tool_name} ({path}) hat beim Versuch, die Version zu bestimmen, eine unerwartete Ausgabe erzeugt:",
  "UnknownBaselineFileContent": "Nicht erkennbarer Baselineeintrag; erwartet \"port:triplet=(fail|skip)\".",
  "UnknownBinaryProviderType": "Unbekannter Binäranbietertyp: Gültige Anbieter sind \"clear\", \"default\", \"nuget\", \"nugetconfig\", \"nugettimeout\", \"interactive\", \"interactive\", \"x-azblob\", \"x-gcs\", \"x-aws\", \"x-aws-config\", \"http\" und \"files\"",
  "UnknownMachineCode": "Unbekannter Computertypcode {value}",
  "UnknownOptions": "Unbekannte(r) Option(n) für Befehl „{command_name}“:",
  "UnknownParameterForIntegrate": "Unbekannter Parameter „{value}“ für die Integration.",
  "UnknownPolicySetting": "Unbekannte Einstellung für Richtlinien-'{value}': {option}",
  "UnknownSettingForBuildType": "Unbekannte Einstellung für VCPKG_BUILD_TYPE {option}. Gültige Einstellungen sind „“, „debug“ und „release“.",
  "UnknownTool": "vcpkg verfügt nicht über eine Definition dieses Tools für diese Plattform.",
  "UnknownTopic": "Unbekannter Thementyp {Wert}",
  "UnknownVariablesInTemplate": "Ungültiges Argument: URL-Vorlage \"{value}\" enthält unbekannte Variablen: {list}",
  "UnrecognizedConfigField": "Die Konfiguration enthält die folgenden unbekannten Felder:",
  "UnrecognizedIdentifier": "Unbekannter Bezeichnername „{value}“. Zur Liste „Überschreiben“ in der Tripletdatei hinzufügen.",
  "UnsupportedFeature": "Das Feature {feature} wurde übergeben, aber dies ist kein Feature, das von {package_name} unterstützt wird.",
  "UnsupportedPort": "Port {package_name} wird nicht unterstützt.",
  "UnsupportedPortDependency": "- Abhängigkeits-{value} wird nicht unterstützt.",
  "UnsupportedPortFeature": "{spec} wird nur für \"{supports_expression}\" unterstützt",
  "UnsupportedShortOptions": "Kurze Optionen werden nicht unterstützt: „{value}“",
  "UnsupportedSyntaxInCDATA": "]]> wird im CDATA-Block nicht unterstützt.",
  "UnsupportedSystemName": "VCPKG_CMAKE_SYSTEM_NAME „{system_name}“ konnte keiner „vcvarsall“-Plattform zugeordnet werden. Unterstützte Systemnamen sind „Windows“ und „WindowsStore“.",
  "UnsupportedToolchain": "in Triplet {triplet}: Es wurde keine gültige Toolkette für die angeforderte Zielarchitektur „{arch}“ gefunden.\nDie ausgewählte Visual Studio-Instanz befindet sich unter: {path}\nDie verfügbaren Toolkettenkombinationen sind: {list}",
  "UpdateBaselineAddBaselineNoManifest": "der --{option}-Schalter wurde übergeben, aber es gibt keine Manifestdatei, der ein `builtin-baseline`-Feld hinzugefügt werden könnte.",
  "UpdateBaselineLocalGitError": "Git konnte HEAD nicht für die lokale vcpkg-Registrierung unter „{Pfad}“ analysieren.",
  "UpdateBaselineNoConfiguration": "Weder „vcpkg.json“ noch „vcpkg-configuration.json“ sind zum Aktualisieren vorhanden.",
  "UpdateBaselineNoExistingBuiltinBaseline": "die Manifest-Datei enthält derzeit kein `builtin-baseline`-Feld; Um eine hinzuzufügen, übergeben Sie den Schalter --{option}.",
  "UpdateBaselineNoUpdate": "Registry „{url}“ nicht aktualisiert: „{value}",
  "UpdateBaselineRemoteGitError": "Git konnte das Remote-Repository „{url}“ nicht abrufen",
  "UpdateBaselineUpdatedBaseline": "aktualisierte Registry „{url}“: Baseline „{old_value}“ -> „{new_value}“",
  "UpgradeInManifest": "Der Upgradebefehl unterstützt derzeit nicht den Manifestmodus. Ändern Sie stattdessen \"vcpkg.json\", und führen Sie die Installation aus.",
  "UpgradeRunWithNoDryRun": "Wenn Sie sicher sind, dass Sie die obigen Pakete neu erstellen möchten, führen Sie diesen Befehl mit der Option \"--no-dry-run\" aus.",
  "UploadedBinaries": "Binärdateien wurden in {count} {vendor} hochgeladen.",
  "UploadedPackagesToVendor": "{count} Pakete in {vendor} in {elapsed} hochgeladen",
  "UploadingBinariesToVendor": "Binärdateien für „{spec}“ werden in „{vendor}“-Quellpfad „{path}“ hochgeladen.",
  "UploadingBinariesUsingVendor": "Binärdateien für „{spec}“ werden mithilfe von „{vendor}“ nach „{path}“ hochgeladen.",
  "UseEnvVar": "-- Verwendung von {env_var} in Umgebungsvariablen.",
  "UserWideIntegrationDeleted": "Die benutzerweite Integration ist nicht installiert.",
  "UserWideIntegrationRemoved": "Die benutzerweite Integration wurde entfernt.",
  "UsingCommunityTriplet": "-- Verwendung von Community-Triplett {Triplett}. Der Erfolg dieser Triplet-Konfiguration ist nicht garantiert.",
  "UsingManifestAt": "Die Manifestdatei unter {path} wird verwendet.",
  "Utf8ConversionFailed": "Fehler beim Konvertieren in UTF-8",
  "VSExaminedInstances": "Die folgenden Visual Studio-Instanzen wurden berücksichtigt:",
  "VSExaminedPaths": "Die folgenden Pfade wurden für Visual Studio-Instanzen untersucht:",
  "VSNoInstances": "Es konnte keine vollständige Visual Studio-Instanz gefunden werden.",
  "VcpkgCeIsExperimental": "„vcpkg-artifacts“ sind experimentell und können sich jederzeit ändern.",
  "VcpkgCommitTableHeader": "VCPKG-Commit",
  "VcpkgCompletion": "Die vcpkg {value}-Vervollständigung wurde bereits in Ihr „{path}“-Datei importiert.\nDie folgenden Einträge wurden gefunden:",
  "VcpkgDisallowedClassicMode": "Es wurde kein Manifest (vcpkg.json) über dem aktuellen Arbeitsverzeichnis gefunden.\nDiese „vcpkg“-Verteilung verfügt nicht über eine Instanz im klassischen Modus.",
  "VcpkgHasCrashed": "„vcpkg“ ist abgestürzt. Erstellen Sie unter „https://github.com/microsoft/vcpkg“ ein Problem, das eine kurze Zusammenfassung Ihrer Vorgehensweise und die folgenden Informationen enthält.",
  "VcpkgInVsPrompt": "vcpkg scheint sich in einer Visual Studio-Aufforderung zu befinden, die auf {value} abzielt, aber für {triplet} installiert wird. Verwenden Sie gegebenenfalls „--triplet {value}-windows“ oder „--triplet {value}-uwp“.",
  "VcpkgInvalidCommand": "Ungültiger Befehl: {command_name}",
  "VcpkgRootRequired": "Das Festlegen VCPKG_ROOT ist für den eigenständigen Bootstrap erforderlich.",
  "VcpkgRootsDir": "Geben Sie das vcpkg Stammverzeichnis für Downloads an.\n(Standard: „{env_var}“)",
  "VcpkgSendMetricsButDisabled": "--sendmetrics wurde übergeben, Metriken sind jedoch deaktiviert.",
  "VersionCommandHeader": "Version des vcpkg-Paketverwaltungsprogramms {version}\n\nLizenzinformationen finden Sie unter LICENSE.txt.",
  "VersionConstraintViolated": "Es wurde erwartet, dass die Abhängigkeit {spec} mindestens Version {expected_version} ist, sie ist derzeit aber {actual_version}.",
  "VersionInvalidDate": "„{version}“ ist keine gültige Datumsversion. Datumsangaben müssen dem Format „JJJJ-MM-TT“ entsprechen, und Disambiguatoren müssen durch Punkte getrennte positive ganzzahlige Werte ohne führende Nullen sein.",
  "VersionInvalidRelaxed": "„{version}“ ist keine gültige gelockerte Version (SemVer mit beliebiger numerischer Elementanzahl).",
  "VersionInvalidSemver": "„{version}“ ist keine gültige semantische Version. Weitere Informationen finden Sie unter <https://semver.org>.",
  "VersionSpecMismatch": "Fehler beim Laden des Ports, da die Versionen inkonsistent sind. Die Datei „{path}“ enthält die Version {actual_version}, aber die Versionsdatenbank gibt an, dass sie {expected_version} sein soll.",
  "VersionTableHeader": "Version",
  "WaitingForChildrenToExit": "Es wird auf das Beenden untergeordneter Prozesse gewartet...",
  "WaitingToTakeFilesystemLock": "Es wird auf die Sperre des Dateisystems für „{path}“ gewartet...",
  "WarningMessage": "Warnung: ",
  "WarningMessageMustUsePrintWarning": "Die Nachricht mit dem Namen {value} beginnt mit „warning“: Sie muss so geändert werden, dass „WarningMessage“ stattdessen im Code vorangestellt wird.",
  "WarningsTreatedAsErrors": "vorherige Warnungen werden als Fehler interpretiert",
  "WhileLookingForSpec": "bei der Suche nach {spec}:",
  "WindowsOnlyCommand": "Dieser Befehl unterstützt nur Windows.",
  "WroteNuGetPkgConfInfo": "NuGet-Paketkonfigurationsinformationen wurden in {path} geschrieben."
}
