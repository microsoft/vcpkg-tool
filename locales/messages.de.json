{
  "ABaseline": "eine Baseline",
  "ABaselineObject": "ein Baselineobjekt",
  "ABoolean": "ein boolescher Wert",
  "ABuiltinRegistry": "eine integrierte Registrierung",
  "AConfigurationObject": "ein Konfigurationsobjekt",
  "ADateVersionString": "eine Datumsversionszeichenfolge",
  "ADemandObject": "ein Anforderungsobjekt",
  "ADependency": "eine Abhängigkeit",
  "ADictionaryOfContacts": "ein Wörterbuch von Kontakten",
  "AFeature": "ein Feature",
  "AFilesystemRegistry": "eine Dateisystemregistrierung",
  "AGitObjectSha": "ein GIT-Objekt SHA",
  "AGitReference": "eine Git-Referenz (z. B. ein Branch)",
  "AGitRegistry": "eine Git-Registrierung",
  "AGitRepositoryUrl": "eine GIT-Repository-URL",
  "AManifest": "ein Manifest",
  "AMaximumOfOneAssetReadUrlCanBeSpecified": "es kann maximal eine Ressourcenlese-URL angegeben werden.",
  "AMaximumOfOneAssetWriteUrlCanBeSpecified": "es kann maximal eine Ressourcenschreib-URL angegeben werden.",
  "ANonNegativeInteger": "eine nicht negative ganze Zahl",
  "APackageName": "eine Paketname",
  "APackagePattern": "ein Paketmuster",
  "APackagePatternArray": "ein Paketmusterarray",
  "APath": "ein Pfad",
  "APlatformExpression": "ein Plattformausdruck",
  "ARegistry": "eine Registrierung",
  "ARegistryImplementationKind": "eine Registrierungsimplementierungsart",
  "ARegistryPath": "ein Registrierungspfad",
  "ARegistryPathMustBeDelimitedWithForwardSlashes": "Ein Registrierungspfad muss einzelne Schrägstriche als Pfadtrennzeichen verwenden.",
  "ARegistryPathMustNotHaveDots": "Ein Registrierungspfad darf keine \"dot\"- oder \"dot dot\"-Pfadelemente enthalten.",
  "ARegistryPathMustStartWithDollar": "Ein Registrierungspfad muss mit \"$\" beginnen, um den Registrierungsstamm darzustellen. Beispiel: \"$/foo/bar\".",
  "ARelaxedVersionString": "eine gelockerte Versionszeichenfolge",
  "ASemanticVersionString": "eine semantische Versionszeichenfolge",
  "ASetOfFeatures": "eine Reihe von Features",
  "AString": "eine Zeichenfolge",
  "AStringOrArrayOfStrings": "eine Zeichenfolge oder ein Array von Zeichenfolgen",
  "AStringStringDictionary": "ein \"string\": \"string\"-Wörterbuch",
  "AUrl": "eine URL",
  "AVcpkgRepositoryCommit": "ein vcpkg-Repositorycommit",
  "AVersionConstraint": "eine Versionseinschränkung",
  "AVersionDatabaseEntry": "ein Versionsdatenbankeintrag",
  "AVersionObject": "ein Versionsobjekt",
  "AVersionOfAnyType": "eine Version eines beliebigen Typs",
  "AddArtifactOnlyOne": "„{command_line}“ kann jeweils nur ein Artefakt auf einmal hinzufügen.",
  "AddCommandFirstArg": "Der erste hinzuzufügende Parameter muss \"artifact\" oder \"port\" sein.",
  "AddFirstArgument": "Das erste Argument für „{command_line}“ muss „artifact“ oder „port“ sein.",
  "AddHelp": "Fügt dem Manifest, das dem aktuellen Verzeichnis zugeordnet ist, den angegebenen Port oder das angegebene Artefakt hinzu.",
  "AddPortRequiresManifest": "„{command_line}“ erfordert eine aktive Manifestdatei.",
  "AddPortSucceeded": "Der Datei „vcpkg.json“ konnten erfolgreich Ports hinzugefügt werden.",
  "AddRecurseOption": "Wenn Sie sicher sind, dass Sie sie entfernen möchten, führen Sie den Befehl mit der Option „--recurse“ aus.",
  "AddTripletExpressionNotAllowed": "Triplet-Ausdrücke sind hier nicht zulässig. Sie können stattdessen „{package_name}:{triplet}“ in „{package_name}“ ändern.",
  "AddVersionAddedVersionToFile": "Version {version} zu {path} hinzugefügt",
  "AddVersionCommitChangesReminder": "Haben Sie daran gedacht, Ihre Änderungen zu übernehmen?",
  "AddVersionCommitResultReminder": "Vergessen Sie nicht, das Ergebnis zu committen!",
  "AddVersionDetectLocalChangesError": "Die Erkennung lokaler Änderungen wird aufgrund eines unerwarteten Formats in der Git-Statusausgabe übersprungen",
  "AddVersionFileNotFound": "Die erforderliche Datei \"{path}\" wurde nicht gefunden",
  "AddVersionFormatPortSuggestion": "Führen Sie \"{command_line}\" aus, um die Datei zu formatieren",
  "AddVersionIgnoringOptionAll": "--{option} wird ignoriert, da ein Portnamenargument angegeben wurde",
  "AddVersionLoadPortFailed": "Port {package_name} kann nicht geladen werden",
  "AddVersionNewFile": "(neue Datei)",
  "AddVersionNewShaIs": "Neues SHA: {commit_sha}",
  "AddVersionNoFilesUpdated": "Es wurden keine Dateien aktualisiert",
  "AddVersionNoFilesUpdatedForPort": "Für {package_name} wurden keine Dateien aktualisiert",
  "AddVersionNoGitSha": "SHA kann für Port {package_name} nicht abgerufen werden",
  "AddVersionOldShaIs": "Altes SHA: {commit_sha}",
  "AddVersionOverwriteOptionSuggestion": "Verwenden Sie --{option}, um diese Überprüfung zu umgehen",
  "AddVersionPortFilesShaChanged": "Eingecheckte Dateien für {package_name} wurden geändert, aber die Version wurde nicht aktualisiert",
  "AddVersionPortFilesShaUnchanged": "Eingecheckte Dateien für {package_name} sind gegenüber Version {version} unverändert",
  "AddVersionPortHasImproperFormat": "{package_name} ist nicht ordnungsgemäß formatiert",
  "AddVersionSuggestNewVersionScheme": "Verwenden Sie das Versionsschema „{new_scheme}“ anstelle von „{old_scheme}“ in Port „{package_name}“. \nVerwenden Sie --{option}, um diese Überprüfung zu deaktivieren.",
  "AddVersionUnableToParseVersionsFile": "Die Versionsdatei \"{path}\" kann nicht analysiert werden",
  "AddVersionUncommittedChanges": "Für {package_name} wurden keine Änderungen ausgeführt",
  "AddVersionUpdateVersionReminder": "Erinnern Sie sich daran, die Version oder Portversion zu aktualisieren?",
  "AddVersionUseOptionAll": "{command_name} ohne Argumente erfordert die Übergabe von --{option}, um alle Portversionen gleichzeitig zu aktualisieren",
  "AddVersionVersionAlreadyInFile": "Version {version} befindet sich bereits in {path}",
  "AddVersionVersionIs": "Version: {version}",
  "AddingCompletionEntry": "Der vcpkg-Vervollständigungseintrag wird zu „{path}“ hinzugefügt.",
  "AdditionalPackagesToExport": "Zusätzliche Pakete (*) müssen exportiert werden, um diesen Vorgang abzuschließen.",
  "AdditionalPackagesToRemove": "Zusätzliche Pakete (*) müssen entfernt werden, um diesen Vorgang abzuschließen.",
  "AllFormatArgsRawArgument": "Formatzeichenfolge „{value}“ enthält ein nicht formatiertes Formatargument.",
  "AllFormatArgsUnbalancedBraces": "nicht ausgeglichene Klammer in der Formatzeichenfolge „{value}“",
  "AllPackagesAreUpdated": "Alle installierten Pakete sind mit der lokalen Portdatei auf dem neuesten Stand.",
  "AlreadyInstalled": "{spec} ist bereits installiert.",
  "AlreadyInstalledNotHead": "{spec} ist bereits installiert – wird nicht aus HEAD erstellt.",
  "AmbiguousConfigDeleteConfigFile": "Mehrdeutige vcpkg-Konfiguration, die sowohl von Manifest als auch von der Konfigurationsdatei bereitgestellt wird.\n– Konfigurationsdatei {path} löschen",
  "AnArrayOfDependencies": "ein Array von Abhängigkeiten",
  "AnArrayOfDependencyOverrides": "ein Array von Abhängigkeitsüberschreibungen",
  "AnArrayOfIdentifers": "ein Array von Bezeichnern",
  "AnArrayOfOverlayPaths": "ein Array von Überlagerungspfaden",
  "AnArrayOfOverlayTripletsPaths": "ein Array von Überlagerungs-Tripelpfaden",
  "AnArrayOfRegistries": "ein Array von Registrierungen",
  "AnArrayOfVersions": "ein Array von Versionen",
  "AnArtifactsGitRegistryUrl": "eine Git-Registrierungs-URL für Artefakte",
  "AnArtifactsRegistry": "eine Artefaktregistrierung",
  "AnExactVersionString": "eine genaue Versionszeichenfolge",
  "AnIdentifer": "ein Bezeichner",
  "AnObjectContainingVcpkgArtifactsMetadata": "ein Objekt, das vcpkg-artifacts-Metadaten enthält",
  "AnOverlayPath": "ein Überlagerungspfad",
  "AnOverlayTripletsPath": "ein Tripelpfad",
  "AnOverride": "eine Außerkraftsetzung",
  "AnSpdxLicenseExpression": "ein SPDX-Lizenzausdruck",
  "AndroidHomeDirMissingProps": "\"source.properties\" fehlt im Verzeichnis \"{env_var}\": {path}",
  "AnotherInstallationInProgress": "Auf dem Computer wird gerade eine andere Installation ausgeführt. 6 Sekunden warten, bevor der Versuch wiederholt wird.",
  "AppliedUserIntegration": "Die benutzerweite Integration für diesen vcpkg-Stamm wurde angewendet.",
  "ApplocalProcessing": "vcpkg applocal-Verarbeitung: {path}",
  "ArtifactsBootstrapFailed": "vcpkg-artifacts ist nicht installiert und konnte nicht mit dem Bootstrapping ausgeführt werden.",
  "ArtifactsNotInstalledReadonlyRoot": "vcpkg-artifacts ist nicht installiert und kann nicht installiert werden, da VCPKG_ROOT als schreibgeschützt angenommen wird. Dieses Problem kann möglicherweise durch erneutes Installieren von vcpkg mithilfe des One Liners behoben werden.",
  "ArtifactsNotOfficialWarning": "Verwenden von vcpkg-artifacts mit einer inoffiziellen ",
  "ArtifactsOptionIncompatibility": "--{option} hat keine Auswirkungen auf \"Artefakt suchen\".",
  "AssetCacheProviderAcceptsNoArguments": "Unerwartete Argumente: \"{value}\" akzeptiert keine Argumente.",
  "AssetSourcesArg": "Fügen Sie Quellen für die Ressourcenzwischenspeicherung hinzu. Siehe „vcpkg help assetcaching“.",
  "AttemptingToFetchPackagesFromVendor": "Es wird versucht, {count} Pakete von {vendor} abzurufen.",
  "AttemptingToSetBuiltInBaseline": "Es wird versucht, die integrierte Baseline in \"vcpkg.json\" festzulegen, während die Standardregistrierung in \"vcpkg-configuration.json\" überschrieben wird.\ndie Standardregistrierung aus \"vcpkg-configuration.json\" wird verwendet.",
  "AuthenticationMayRequireManualAction": "Mindestens ein {vendor}-Anmeldeinformationsanbieter hat eine manuelle Aktion angefordert. Fügen Sie die binäre Quelle \"interactive\" hinzu, um Interaktivität zuzulassen.",
  "AutoSettingEnvVar": "-- Automatisches Setzen von {env_var} Umgebungsvariablen auf \"{url}\".",
  "AutomaticLinkingForMSBuildProjects": "Es ist jetzt möglich, dass alle MSBuild C++-Projekte #include alle installierten Bibliotheken. Die Verknüpfung wird automatisch verarbeitet. Durch die Installation neuer Bibliotheken werden diese sofort verfügbar.",
  "AutomaticLinkingForVS2017AndLater": "Visual Studio 2017 und höher kann jetzt alle installierten Bibliotheken beinhalten (#include). Die Verknüpfung wird automatisch verarbeitet. Durch die Installation neuer Bibliotheken werden diese sofort verfügbar.",
  "AvailableArchitectureTriplets": "Verfügbare Architekturtriplets:",
  "AvailableHelpTopics": "Verfügbare Hilfethemen:",
  "AzUrlAssetCacheRequiresBaseUrl": "Unerwartete Argumente: Die Ressourcenkonfiguration \"azurl\" erfordert eine Basis-URL.",
  "AzUrlAssetCacheRequiresLessThanFour": "Unerwartete Argumente: Die Ressourcenkonfiguration \"azurl\" erfordert weniger als 4 Argumente.",
  "BaselineConflict": "Die Angabe von \"vcpkg-configuration.default-registry\" in einer Manifestdatei verursacht einen Konflikt mit der integrierten Baseline.\nEntfernen Sie eine dieser widersprüchlichen Einstellungen.",
  "BaselineFileNoDefaultField": "Die Baselinedatei beim Commit \"{commit_sha}\" war ungültig (kein Feld \"Standard\").",
  "BaselineFileNoDefaultFieldPath": "Die Baselinedatei von {path} war ungültig (fehlendes Standardfeld).",
  "BaselineGitShowFailed": "Beim Auschecken der Baseline aus dem Commit \"{commit_sha}\" konnte \"git show\" versions/baseline.json nicht ausgeführt werden. Dies kann behoben werden, indem Commits mit \"git fetch\" abgerufen werden.",
  "BaselineMissing": "Die Baselineversion wurde nicht gefunden. Führen Sie Folgendes aus:\nvcpkg x-add-version {package_name}\nGit-Add-Versionen\ngit commit -m \"Versionsdatenbank aktualisieren\"\num die Version {version} als Baselineversion festzulegen.",
  "BaselineMissingDefault": "\"baseline.json\" aus dem Commit \"{commit_sha}\" im Repository \"{url}\" war ungültig (enthielt kein Feld \"Standard\").",
  "BinaryCacheVendorHTTP": "HTTP-Server",
  "BinarySourcesArg": "Fügen Sie Quellen für die binäre Zwischenspeicherung hinzu. Siehe „vcpkg help binarycaching“.",
  "BinaryWithInvalidArchitecture": "{path}\n Erwartet: {expected}, war aber {actual}",
  "BuildAlreadyInstalled": "„{spec}“ ist bereits installiert; entfernen Sie „{spec}“, bevor Sie versuchen, es zu erstellen.",
  "BuildDependenciesMissing": "Für den Buildbefehl müssen alle Abhängigkeiten bereits installiert sein.\nDie folgenden Abhängigkeiten fehlen:",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "HERUNTERGELADEN",
  "BuildResultExcluded": "AUSGESCHLOSSEN",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "ENTFERNT",
  "BuildResultSucceeded": "ERFOLGREICH",
  "BuildResultSummaryHeader": "ZUSAMMENFASSUNG FÜR {triplet}",
  "BuildResultSummaryLine": "{build_result}: {count}",
  "BuildTreesRootDir": "(Experimentell) Geben Sie das Buildstrukturstammverzeichnis an.",
  "BuildTroubleshootingMessage1": "Stellen Sie sicher, dass Sie die neuesten Portdateien mit „git pull“ und „vcpkg update“ verwenden.\nÜberprüfen Sie dann auf bekannte Probleme unter:",
  "BuildTroubleshootingMessage2": "Sie können ein neues Problem einreichen unter:",
  "BuildTroubleshootingMessage3": "Schließen Sie „[{package_name}] Buildfehler“ in Ihren Titel des Fehlerberichts, die folgenden Versionsinformationen in Ihre Fehlerbeschreibung ein, und fügen Sie alle relevanten Fehlerprotokolle von oben an.",
  "BuildTroubleshootingMessage4": "Bitte verwenden Sie die vorausgefüllte Vorlage von {path}, wenn Sie Ihr Problem melden.",
  "BuildTroubleshootingMessageGH": "Sie können ein Problem auch einreichen, indem Sie Folgendes tun (GitHub-Cli muss installiert sein):",
  "BuildingFromHead": "{spec} wird aus HEAD erstellt...",
  "BuildingPackage": "{spec} wird erstellt...",
  "BuildingPackageFailed": "Fehler beim Erstellen von \"{spec}\": {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "aufgrund der folgenden fehlenden Abhängigkeiten:",
  "BuiltInTriplets": "vcpkg-integrierte Triplets:",
  "BuiltWithIncorrectArchitecture": "Die folgenden Dateien wurden für eine falsche Architektur erstellt:",
  "CISettingsExclude": "Durch Komma getrennte Liste der zu überspringenden Ports",
  "CISettingsOptCIBase": "Pfad zur Datei \"ci.baseline.txt\". Wird verwendet, um Ports zu überspringen und Regressionen zu erkennen.",
  "CISettingsOptExclude": "Durch Komma getrennte Liste der zu überspringenden Ports",
  "CISettingsOptFailureLogs": "Verzeichnis, in das Fehlerprotokolle kopiert werden",
  "CISettingsOptHostExclude": "Durch Komma getrennte Liste der Ports, die für das Host-Triplet übersprungen werden sollen",
  "CISettingsOptOutputHashes": "Datei zum Ausgeben aller ermittelten Pakethashes",
  "CISettingsOptParentHashes": "Datei zum Lesen von Pakethashes für einen übergeordneten CI-Zustand, um den Satz geänderter Pakete zu reduzieren",
  "CISettingsOptSkippedCascadeCount": "Bestätigt, dass die Anzahl der \"--exclude and supports skips\" genau dieser Anzahl entspricht",
  "CISettingsOptXUnit": "Datei, die Ergebnisse im XUnit-Format ausgibt (intern)",
  "CISettingsVerifyGitTree": "Vergewissern Sie sich, dass jedes Git-Strukturobjekt mit seiner deklarierten Version übereinstimmt (dies ist sehr langsam).",
  "CISettingsVerifyVersion": "Druckergebnis für jeden Port anstatt nur Fehler.",
  "CISkipInstallation": "Die folgenden Pakete sind bereits installiert und werden nicht erneut erstellt: {list}",
  "CISwitchOptAllowUnexpectedPassing": "Gibt an, dass die Ergebnisse \"Passing, remove from fail list\" (Bestanden, von der Fehlerliste entfernen) nicht ausgegeben werden sollen.",
  "CISwitchOptDryRun": "Plan ohne Ausführung drucken",
  "CISwitchOptRandomize": "Zufällige Installationsreihenfolge",
  "CISwitchOptSkipFailures": "Gibt an, dass Ports, die in \"ci.baseline.txt\" als \"=fail\" gekennzeichnet sind, übersprungen werden sollen.",
  "CISwitchOptXUnitAll": "Melden Sie auch unveränderte Ports an die XUnit-Ausgabe (intern).",
  "CMakeTargetsUsage": "„{package_name}“ stellt CMake-Ziele bereit:",
  "CMakeTargetsUsageHeuristicMessage": "# this is heuristically generated, and may be not correct",
  "CMakeToolChainFile": "CMake-Projekte sollten Folgendes verwenden: „-DCMAKE_TOOLCHAIN_FILE={path}“",
  "CMakeUsingExportedLibs": "Um exportierte Bibliotheken in CMake-Projekten zu verwenden, fügen Sie Ihrer CMake-Befehlszeile {value} hinzu.",
  "CacheHelp": "Das Argument muss ein zu suchender substring und darf kein Argument sein, um alle zwischengespeicherten Bibliotheken anzuzeigen.",
  "CheckedOutGitSha": "Ausgechecktes Git-SHA: {commit_sha}",
  "CheckedOutObjectMissingManifest": "Das ausgecheckte Objekt enthält keine CONTROL- oder vcpkg.json-Datei.",
  "ChecksFailedCheck": "„vcpkg“ ist abgestürzt; es sind keine weiteren Details verfügbar.",
  "ChecksUnreachableCode": "Nicht erreichbarer Code wurde erreicht.",
  "ChecksUpdateVcpkg": "Das Aktualisieren von vcpkg durch erneutes Ausführen von „bootstrap-vcpkg“ kann diesen Fehler möglicherweise beheben.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing kann nur verwendet werden, wenn eine Baseline über --ci-baseline bereitgestellt wird.",
  "CiBaselineDisallowedCascade": "REGRESSION: {spec} überlappend, muss aber übergeben werden. ({path}.)",
  "CiBaselineIndependentRegression": "REGRESSION: Fehler bei unabhängigem {spec} mit {build_result}.",
  "CiBaselineRegression": "REGRESSION: {spec} ist mit {build_result} fehlgeschlagen. Falls erwartet, fügen Sie {spec}=fail zu {path} hinzu.",
  "CiBaselineRegressionHeader": "REGRESSIONEN:",
  "CiBaselineUnexpectedPass": "BESTANDEN, VON DER FEHLERLISTE ENTFERNEN: {spec} ({Pfad}).",
  "ClearingContents": "Inhalt von {path} wird gelöscht",
  "CmakeTargetsExcluded": "Hinweis: {count} zusätzliche Ziele werden nicht angezeigt.",
  "CmdAddVersionOptAll": "Verarbeiten Sie Versionen für alle Ports.",
  "CmdAddVersionOptOverwriteVersion": "Überschreiben Sie \"git-tree\" einer vorhandenen Version.",
  "CmdAddVersionOptSkipFormatChk": "Überspringt die Formatierungsprüfung von vcpkg.json-Dateien.",
  "CmdAddVersionOptSkipVersionFormatChk": "Überspringt die Versionsformatprüfung.",
  "CmdAddVersionOptVerbose": "Drucken Sie Erfolgsmeldungen statt nur Fehler.",
  "CmdContactOptSurvey": "Standardbrowser für die aktuelle vcpkg-Umfrage starten",
  "CmdDependInfoFormatConflict": "In Konflikt stehende Formate angegeben. Es wird nur eines von --format, --dgml oder --dot akzeptiert.",
  "CmdDependInfoFormatHelp": "Wählen Sie ein Ausgabeformat aus: \"list\", \"tree\", \"mermaid\", \"dot\" oder \"dgml\".",
  "CmdDependInfoFormatInvalid": "--format={value} ist kein bekanntes Format. --format muss einer von \"list\", \"tree\", \"mermaid\", \"dot\" oder \"dgml\" sein.",
  "CmdDependInfoOptDepth": "Rekursionstiefe in der Ausgabe \"list\" anzeigen.",
  "CmdDependInfoOptMaxRecurse": "Legen Sie die maximale Rekursionstiefe fest. Der Standardwert ist \"kein Grenzwert\".",
  "CmdDependInfoOptSort": "Wählen Sie die Sortierreihenfolge für das Format \"list\", eines von \"lexicographical\", \"topographic\" (Standard), \"reverse\" aus.",
  "CmdDependInfoShowDepthFormatMismatch": "--show-depth kann nur mit den Formaten \"list\" und \"tree\" verwendet werden.",
  "CmdDependInfoXtreeTree": "--sort=x-tree kann nicht mit anderen Formaten als \"tree\" verwendet werden.",
  "CmdEditOptAll": "Öffnen des Editors im Port und im portspezifischen Buildstrukturunterordner",
  "CmdEditOptBuildTrees": "Öffnen des Editors im portspezifischen Buildstrukturunterordner",
  "CmdEnvOptions": "Installierten {path} zu {env_var} hinzufügen",
  "CmdExportOpt7Zip": "In eine 7zip(.7z)-Datei exportieren",
  "CmdExportOptChocolatey": "Exportieren eines Chocolatey-Pakets (experimentelles Feature)",
  "CmdExportOptDebug": "Prefab-Debuggen aktivieren",
  "CmdExportOptDryRun": "Nicht wirklich exportieren.",
  "CmdExportOptIFW": "Exportieren in ein IFW-basiertes Installationsprogramm",
  "CmdExportOptInstalled": "Alle installierten Pakete exportieren",
  "CmdExportOptMaven": "Maven aktivieren",
  "CmdExportOptNuget": "NuGet-Paket exportieren",
  "CmdExportOptPrefab": "In Prefab-Format exportieren",
  "CmdExportOptRaw": "In ein nicht komprimiertes Verzeichnis exportieren",
  "CmdExportOptZip": "In eine ZIP-Datei exportieren",
  "CmdExportSettingChocolateyMaint": "Geben Sie den Maintainer für das exportierte Chocolatey-Paket an (experimentelles Feature).",
  "CmdExportSettingChocolateyVersion": "Geben Sie das Versionssuffix an, das für das exportierte Chocolatey-Paket hinzugefügt werden soll (experimentelles Feature).",
  "CmdExportSettingConfigFile": "Geben Sie den temporären Dateipfad für die Installationsprogrammkonfiguration an.",
  "CmdExportSettingInstallerPath": "Geben Sie den Dateipfad für das exportierte Installationsprogramm an.",
  "CmdExportSettingNugetDesc": "Geben Sie eine Beschreibung für das exportierte NuGet-Paket an.",
  "CmdExportSettingNugetID": "Geben Sie die ID für das exportierte NuGet-Paket an (überschreibt --output).",
  "CmdExportSettingNugetVersion": "Geben Sie eine Version für das exportierte NuGet-Paket an.",
  "CmdExportSettingOutput": "Geben Sie den Ausgabenamen an (wird zum Erstellen des Dateinamens verwendet).",
  "CmdExportSettingOutputDir": "Angeben des Ausgabeverzeichnisses für erstellte Artefakte",
  "CmdExportSettingPkgDir": "Geben Sie den temporären Verzeichnispfad für die neu gepackten Pakete an.",
  "CmdExportSettingPrefabArtifactID": "\"Artefakt-ID\" ist der Name des Projekts gemäß Maven-Spezifikationen.",
  "CmdExportSettingPrefabGroupID": "GroupId identifiziert Ihr Projekt eindeutig gemäß Maven-Spezifikationen.",
  "CmdExportSettingPrefabVersion": "\"Version\" ist der Name des Projekts gemäß Maven-Spezifikationen.",
  "CmdExportSettingRepoDir": "Geben Sie den Verzeichnispfad für das exportierte Repository an.",
  "CmdExportSettingRepoURL": "Angeben der Remote-Repository-URL für das Online-Installationsprogramm",
  "CmdExportSettingSDKMinVersion": "Mindestens unterstützte Android SDK-Version",
  "CmdExportSettingSDKTargetVersion": "Android-Ziel-SDK-Version",
  "CmdFetchOptXStderrStatus": "Direkter Status/Herunterladen von Nachrichten an \"stderr\" anstelle von \"stdout\". (Fehler/Misserfolge gehen weiterhin zu stdout)",
  "CmdFormatManifestOptAll": "Formatieren Sie die Manifestdateien aller Ports.",
  "CmdFormatManifestOptConvertControl": "Konvertieren Sie CONTROL-Dateien in Manifestdateien.",
  "CmdGenerateMessageMapOptNoOutputComments": "Schließen Sie beim Generieren der Nachrichtenzuordnung Kommentare aus (nützlich zum Generieren der englischen Lokalisierungsdatei).",
  "CmdInfoOptInstalled": "(experimentell) Berichte zu installierten Paketen statt verfügbar",
  "CmdInfoOptTransitive": "(experimentell) Berichten Sie auch über Abhängigkeiten von installierten Paketen.",
  "CmdNewOptApplication": "Erstellen Sie ein Anwendungsmanifest (kein Name oder keine Version erforderlich).",
  "CmdNewOptSingleFile": "Betten Sie \"vcpkg-configuration.json\" in \"vcpkg.json\" ein.",
  "CmdNewOptVersionDate": "Interpretieren Sie \"--version\" als ISO 8601-Datum. (JJJJ-MM-TT)",
  "CmdNewOptVersionRelaxed": "Interpretieren Sie \"--version\" als gelockerte numerische Version. (Nicht negative Zahlen durch Punkte getrennt)",
  "CmdNewOptVersionString": "Interpretieren Sie \"--version\" als Zeichenfolge ohne Sortierungsverhalten.",
  "CmdNewSettingName": "Name für das neue Manifest.",
  "CmdNewSettingVersion": "Version für das neue Manifest.",
  "CmdRegenerateOptDryRun": "führt die Aktion nicht tatsächlich aus, sondern zeigt nur an, was erledigt werden würde.",
  "CmdRegenerateOptForce": "fährt ohne Bestätigung mit der (potenziell gefährlichen) Aktion fort.",
  "CmdRegenerateOptNormalize": "Anwenden aller veralteten Fixups",
  "CmdRemoveOptDryRun": "Zu entfernende Pakete drucken, aber nicht entfernen",
  "CmdRemoveOptOutdated": "Wählen Sie alle Pakete mit Versionen aus, die nicht mit den Portdateien übereinstimmen.",
  "CmdRemoveOptRecurse": "Entfernen von Paketen zulassen, die nicht explizit in der Befehlszeile angegeben sind",
  "CmdSetInstalledOptDryRun": "Nicht erstellen oder installieren",
  "CmdSetInstalledOptNoUsage": "Drucken Sie nach der Installation keine CMake-Nutzungsinformationen.",
  "CmdSetInstalledOptWritePkgConfig": "Schreibt eine Datei im NuGet packages.config-Format für die Verwendung mit externer binärer Zwischenspeicherung.\n Weitere Informationen finden Sie unter \"vcpkg help binarycaching\".",
  "CmdSettingCopiedFilesLog": "Pfad zum zu erstellenden kopierten Dateiprotokoll",
  "CmdSettingInstalledDir": "Pfad zur zu verwendenden installierten Struktur",
  "CmdSettingTLogFile": "Pfad zur zu erstellenden TLOG-Datei",
  "CmdSettingTargetBin": "Pfad zur zu analysierenden Binärdatei",
  "CmdUpdateBaselineOptDryRun": "Plan ohne Ausführung drucken",
  "CmdUpdateBaselineOptInitial": "Hinzufügen einer \"integrierten Baseline\" zu einer Datei \"vcpkg.json\", die noch nicht vorhanden ist",
  "CmdUpdateRegistryAll": "Alle bekannten Artefaktregistrierungen aktualisieren",
  "CmdUpdateRegistryAllExcludesTargets": "„Update registry --all“ kann nicht mit einer Liste von Artefaktregistrierungen verwendet werden.",
  "CmdUpdateRegistryAllOrTargets": "Dem Befehl „update registry“ muss entweder eine Liste mit Artefaktregistrierungsnamen oder URIs zum Aktualisieren mitgegeben werden, oder „--all“.",
  "CmdUpgradeOptAllowUnsupported": "Anstatt einen Fehler an einem nicht unterstützten Port anzuzeigen, fahren Sie mit einer Warnung fort.",
  "CmdUpgradeOptNoDryRun": "Tatsächlich upgraden",
  "CmdUpgradeOptNoKeepGoing": "Installation von Paketen bei Fehler beenden",
  "CmdXDownloadOptHeader": "Zusätzlicher Header, der beim Abrufen aus URLs verwendet werden soll",
  "CmdXDownloadOptSha": "Der Hash der Datei, die heruntergeladen werden soll",
  "CmdXDownloadOptSkipSha": "Überprüfen Sie nicht die SHA512-Datei der heruntergeladenen Datei.",
  "CmdXDownloadOptStore": "Gibt an, dass die Datei gespeichert und nicht abgerufen werden soll.",
  "CmdXDownloadOptUrl": "URL zum Herunterladen und Speichern, wenn sie im Cache fehlt",
  "CommandFailed": "Befehl:\n{command_line}\nmit den folgenden Ergebnissen fehlgeschlagen:",
  "Commands": "Befehle:",
  "CommunityTriplets": "VCPKG-Community-Triplets:",
  "ComparingUtf8Decoders": "Utf8Decoders mit unterschiedlicher Herkunft vergleichen; dies ist immer ein Fehler.",
  "CompressFolderFailed": "Fehler beim Komprimieren des Ordners \"{path}\":",
  "ComputingInstallPlan": "Installationsplan wird berechnet...",
  "ConfigurationErrorRegistriesWithoutBaseline": "Die in {path} definierte Konfiguration ist ungültig.\n\nDie Verwendung von Registrierungen erfordert, dass eine Baseline für die Standardregistrierung festgelegt ist, oder dass die Standardregistrierung NULL ist.\n\nWeitere Informationen finden Sie unter {url}.",
  "ConfigurationNestedDemands": "[\"{json_field}\"] enthält ein geschachteltes \"demands\"-Objekt (geschachtelte \"Anforderungen\" haben keine Auswirkungen)",
  "ConflictingFiles": "Die folgenden Dateien sind bereits in {path} installiert und stehen in Konflikt mit {spec}",
  "ConstraintViolation": "Es wurde eine Einschränkungsverletzung gefunden:",
  "ContinueCodeUnitInStart": "Fortsetzungscodeeinheit wurde an der Startposition gefunden.",
  "ControlAndManifestFilesPresent": "Sowohl eine Manifestdatei als auch eine CONTROL-Datei sind im Portverzeichnis vorhanden: {path}",
  "ControlCharacterInString": "Steuerzeichen in Zeichenfolge",
  "CopyrightIsDir": "'{path}' als Verzeichnis ist veraltet.",
  "CorruptedDatabase": "Die Datenbank ist beschädigt.",
  "CorruptedInstallTree": "Die vcpkg-Struktur \"installiert\" ist beschädigt.",
  "CouldNotDeduceNugetIdAndVersion": "Die NuGet-ID und die Version konnten nicht aus dem Dateinamen abgeleitet werden: {path}",
  "CouldNotFindBaseline": "Die explizit angegebene Baseline \"{commit_sha}\" wurde in der Baselinedatei \"{path}\" nicht gefunden.",
  "CouldNotFindBaselineForRepo": "Die Baseline \"{commit_sha}\" für das Repository \"{package_name}\" wurde nicht gefunden.",
  "CouldNotFindBaselineInCommit": "Die Baseline wurde im Commit \"{commit_sha}\" aus dem Repository \"{package_name}\" nicht gefunden:",
  "CouldNotFindGitTreeAtCommit": "Die Git-Struktur für \"Versionen\" wurde im Repository \"{package_name}\" beim Commit \"{commit_sha}\" nicht gefunden.",
  "CouldNotFindToolVersion": "<tools version=\"{version}\"> in {path} nicht gefunden",
  "CouldNotFindVersionDatabaseFile": "Die Versionsdatenbankdatei wurde nicht gefunden: {path}",
  "CreateFailureLogsDir": "Ausgabeverzeichnis für Fehlerprotokolle wird erstellt: {path}.",
  "CreatedNuGetPackage": "Nupkg wurde erstellt: {path}",
  "Creating7ZipArchive": "7zip-Archiv wird erstellt...",
  "CreatingNugetPackage": "NuGet-Paket wird erstellt...",
  "CreatingZipArchive": "ZIP-Archiv wird erstellt...",
  "CreationFailed": "Fehler beim Erstellen von {path}.",
  "CurlFailedToExecute": "curl konnte nicht ausgeführt werden. Exitcode: {exit_code}.",
  "CurlFailedToPut": "CURL konnte die Datei nicht unter {url} mit Exitcode {exit_code} ablegen.",
  "CurlFailedToPutHttp": "CURL konnte die Datei nicht unter {url} mit dem Exitcode {exit_code} und dem HTTP-Code {value} ablegen.",
  "CurlReportedUnexpectedResults": "„curl“ hat unerwartete Ergebnisse für „vcpkg“ gemeldet, und „vcpkg“ kann nicht fortgesetzt werden. \nÜberprüfen Sie den folgenden Text auf vertrauliche Informationen, und öffnen Sie ein Problem auf dem GitHub von „Microsoft/vcpkg“, um dieses Problem zu beheben.\ncmd: {command_line}\n=== curl output ===\n{actual}\n=== end curl output ===",
  "CurlReturnedUnexpectedResponseCodes": "curl hat eine andere Anzahl von Antwortcodes zurückgegeben als für die Anforderung erwartet ({actual} statt {expected}).",
  "CurrentCommitBaseline": "Sie können den aktuellen Commit als Baseline verwenden, d. h.:\n \"builtin-baseline\": \"{commit_sha}\"",
  "CycleDetectedDuring": "Zyklus während {spec} erkannt:",
  "DateTableHeader": "Datum",
  "DefaultBinaryCachePlatformCacheRequiresAbsolutePath": "Die Umgebungsvariable VCPKG_DEFAULT_BINARY_CACHE muss ein Verzeichnis sein (war: {path}).",
  "DefaultBinaryCacheRequiresAbsolutePath": "Die Umgebungsvariable VCPKG_DEFAULT_BINARY_CACHE muss absolut sein (war: {path}).",
  "DefaultBinaryCacheRequiresDirectory": "Die Umgebungsvariable VCPKG_DEFAULT_BINARY_CACHE muss ein Verzeichnis sein (war: {path}).",
  "DefaultBrowserLaunched": "Der Standardbrowser wurde zum {url} gestartet.",
  "DefaultFlag": "Standardmäßig wird --{option} aktiviert.",
  "DefaultRegistryIsArtifact": "Die Standardregistrierung kann keine Artefaktregistrierung sein.",
  "DefaultTriplet": "Ab dem September 2023-Release ändert sich das Standard-Triplet für vcpkg-Bibliotheken von „x86-Windows“ in das erkannte Host-Triplet ({triplet}). Um diese Meldung zu beheben, fügen Sie „--triplet x86-windows“ hinzu, um dasselbe Verhalten beizubehalten.",
  "DeleteVcpkgConfigFromManifest": "– Oder entfernen Sie \"vcpkg-configuration\" aus der Manifestdatei \"{path}\".",
  "DeprecatedPrefabDebugOption": "--prefab-debug ist jetzt veraltet.",
  "DetectCompilerHash": "Compilerhash für Triplet {triplet} wird erkannt...",
  "DocumentedFieldsSuggestUpdate": "Wenn es sich um dokumentierte Felder handelt, die erkannt werden sollen, aktualisieren Sie das vcpkg-Tool.",
  "DownloadAvailable": "Eine herunterladbare Kopie dieses Tools ist verfügbar und kann verwendet werden, indem {env_var} zurückgesetzt wird.",
  "DownloadFailedCurl": "{url}: CURL konnte nicht heruntergeladen werden. Exitcode: {exit_code}",
  "DownloadFailedHashMismatch": "Die Datei weist nicht den erwarteten Hash auf:\nURL: {url}\nDatei: {path}\nErwarteter Hash: {expected}\nTatsächlicher Hash: {actual}",
  "DownloadFailedRetrying": "Fehler beim Herunterladen. Der Vorgang wird nach {value} ms wiederholt.",
  "DownloadFailedStatusCode": "{url}: Fehler: Statuscode {value}",
  "DownloadRootsDir": "Geben Sie das Stammverzeichnis für Downloads an.\n(Standard: {env_var})",
  "DownloadWinHttpError": "{url}: Fehler bei {system_api} mit Exitcode {exit_code}",
  "DownloadedSources": "Heruntergeladene Quellen für {spec}",
  "DownloadingPortableToolVersionX": "Eine geeignete Version von {tool_name} wurde nicht gefunden (v{version} erforderlich). Portierbare {tool_name} {version} wird heruntergeladen...",
  "DownloadingTool": "{tool_name} wird heruntergeladen...\n{url}->{path}",
  "DownloadingUrl": "{url} wird herunterladen",
  "DownloadingVcpkgStandaloneBundle": "Das eigenständige Paket \"{version}\" wird heruntergeladen.",
  "DownloadingVcpkgStandaloneBundleLatest": "Das neueste eigenständige Paket wird heruntergeladen.",
  "DuplicatePackagePattern": "Paket „{package_name}“ ist dupliziert.",
  "DuplicatePackagePatternFirstOcurrence": "Zuerst deklariert in:",
  "DuplicatePackagePatternIgnoredLocations": "Die folgenden Neudeklarationen werden ignoriert:",
  "DuplicatePackagePatternLocation": "Speicherort: {path}",
  "DuplicatePackagePatternRegistry": "Registrierung: {url}",
  "DuplicatedKeyInObj": "Doppelter Schlüssel \"{value}\" in einem Objekt",
  "ElapsedForPackage": "Verstrichene Zeit für die Bearbeitung von {spec}: {elapsed}",
  "ElapsedInstallTime": "Insgesamt verstrichene Zeit: {count}",
  "ElapsedTimeForChecks": "Zeit bis zum Bestimmen des Status Erfolgreich/Fehler: {elapsed}",
  "EmailVcpkgTeam": "Senden Sie eine E-Mail mit beliebigem Feedback an {url}.",
  "EmbeddingVcpkgConfigInManifest": "Das Einbetten von \"vcpkg-configuration\" in eine Manifestdatei ist ein EXPERIMENTELLEs Feature.",
  "EmptyLicenseExpression": "Der SPDX-Lizenzausdruck war leer.",
  "EndOfStringInCodeUnit": "Ende der Zeichenfolge in der Mitte des Codepunkts gefunden",
  "EnvInvalidMaxConcurrency": "{env_var} ist {value}, muss > 0 sein",
  "EnvPlatformNotSupported": "Buildumgebungsbefehle werden auf dieser Plattform nicht unterstützt.",
  "EnvStrFailedToExtract": "Die Umgebungszeichenfolge konnte nicht erweitert werden:",
  "EnvVarMustBeAbsolutePath": "{env_var} ({path}) war kein absoluter Pfad.",
  "ErrorDetectingCompilerInfo": "beim Erfassen von Compiler-Informationen:\nDer Inhalt der Protokolldatei unter „{Pfad}“ lautet:",
  "ErrorIndividualPackagesUnsupported": "Im Manifestmodus unterstützt „vcpkg install“ keine einzelnen Paketargumente.\nUm zusätzliche Pakete zu installieren, bearbeiten Sie „vcpkg.json“, und führen Sie dann „vcpkg install“ ohne Paketargumente aus.",
  "ErrorInvalidClassicModeOption": "Die Option --{option} wird im klassischen Modus nicht unterstützt, und es wurde kein Manifest gefunden.",
  "ErrorInvalidManifestModeOption": "Die Option --{option} wird im Manifestmodus nicht unterstützt.",
  "ErrorMessage": "Fehler: ",
  "ErrorMessageMustUsePrintError": "Die Nachricht mit dem Namen {value} beginnt mit „error“: Sie muss so geändert werden, dass „ErrorMessage“ stattdessen im Code vorangestellt wird.",
  "ErrorMissingVcpkgRoot": "„vcpkg-root“ konnte nicht erkannt werden. Wenn Sie versuchen, eine Kopie von „vcpkg“ zu verwenden, die Sie erstellt haben, müssen Sie die VCPKG_ROOT-Umgebungsvariable definieren, um auf eine geklonte Kopie von „https://github.com/Microsoft/vcpkg“ zu verweisen.",
  "ErrorNoVSInstance": "in Triplet {triplet}: Es wurde keine gültige Visual Studio-Instanz gefunden",
  "ErrorNoVSInstanceAt": "unter „{path}“",
  "ErrorNoVSInstanceFullVersion": "mit dem Präfix für die Toolsetversion {version}",
  "ErrorNoVSInstanceVersion": "mit Toolsetversion {version}",
  "ErrorParsingBinaryParagraph": "beim Analysieren des binären Absatzes für {spec}",
  "ErrorRequireBaseline": "Diese „vcpkg“-Instanz erfordert ein Manifest mit einer angegebenen Baseline, um mit Ports zu interagieren. Fügen Sie dem Manifest „builtin-baseline“ hinzu, oder fügen Sie „vcpkg-configuration.json“ hinzu, die die Standardregistrierung neu definiert.",
  "ErrorRequirePackagesList": "„vcpkg install“ erfordert eine Liste von Paketen für die Installation im klassischen Modus.",
  "ErrorUnableToDetectCompilerInfo": "vcpkg konnte die Informationen des aktiven Compilers nicht erkennen. Siehe oben für die CMake-Fehlerausgabe.",
  "ErrorVcvarsUnsupported": "in Triplet {triplet}: Die Verwendung der Developer-Eingabeaufforderung von Visual Studio wird auf Nicht-Windows-Hosts nicht unterstützt.\nDefinieren Sie „VCPKG_CMAKE_SYSTEM_NAME“ oder „VCPKG_CHAINLOAD_TOOLCHAIN_FILE“ in der Triplet-Datei.",
  "ErrorVsCodeNotFound": "Visual Studio Code wurde nicht gefunden, und die Umgebungsvariable {env_var} ist nicht festgelegt oder ungültig.",
  "ErrorVsCodeNotFoundPathExamined": "Die folgenden Pfade wurden untersucht:",
  "ErrorWhileFetchingBaseline": "beim Abrufen der Baseline \"{value}\" aus dem Repository \"{package_name}\":",
  "ErrorWhileParsing": "Fehler beim Analysieren von {path}.",
  "ErrorWhileWriting": "Fehler beim Schreiben von {path}.",
  "ErrorsFound": "Die folgenden Fehler wurden gefunden:",
  "Example": "Beispiel:",
  "ExceededRecursionDepth": "Die Rekursionstiefe wurde überschritten.",
  "ExcludedPackage": "Ausgeschlossen: {spec}",
  "ExcludedPackages": "Die folgenden Pakete sind ausgeschlossen:",
  "ExpectedAnObject": "ein Objekt wurde erwartet",
  "ExpectedAtMostOneSetOfTags": "Es wurden {count} Sets mit dem Wert {old_value}.*{new_value} gefunden, aber mindestens 1 im Block erwartet:\n{value}",
  "ExpectedCharacterHere": "'{expected}' wurde hier erwartet",
  "ExpectedDefaultFeaturesList": "In der Standardfeatureliste wurde „,“ oder das Textende erwartet.",
  "ExpectedDependenciesList": "In der Abhängigkeitsliste wurde „,“ oder das Textende erwartet.",
  "ExpectedDigitsAfterDecimal": "Ziffern nach dem Dezimaltrennzeichen erwartet",
  "ExpectedEof": "EOF erwartet",
  "ExpectedExplicitTriplet": "Es wurde ein explizites Triplet erwartet.",
  "ExpectedFailOrSkip": "\"fail\", \"skip\" oder \"pass\" wird hier erwartet.",
  "ExpectedFeatureListTerminal": "In der Featureliste wurde „,“ oder „]“ erwartet",
  "ExpectedFeatureName": "Erwarteter Featurename (muss aus Kleinbuchstaben, Ziffern und „-“ bestehen)",
  "ExpectedOneSetOfTags": "Es wurden {count} Sets mit dem Wert {old_value}.*{new_value} gefunden, aber genau 1 im Block erwartet:\n{value}",
  "ExpectedOneVersioningField": "Es wurde nur ein Versionsverwaltungsfeld erwartet.",
  "ExpectedPackageSpecifier": "Es wurde ein Paketspezifizierer erwartet.",
  "ExpectedPathToExist": "Es wurde erwartet, dass {path} nach dem Abrufen vorhanden ist.",
  "ExpectedPortName": "Hier wurde ein Portname erwartet (muss aus Kleinbuchstaben, Ziffern und „-“ bestehen).",
  "ExpectedReadWriteReadWrite": "Unerwartetes Argument: \"read\", \"readwrite\" oder \"write\" erwartet",
  "ExpectedStatusField": "Im Statusabsatz wurde das Feld „status“ erwartet",
  "ExpectedTripletName": "Hier wurde ein Dreifachname erwartet (muss aus Kleinbuchstaben, Ziffern und „-“ bestehen).",
  "ExportArchitectureReq": "Für den Export des Prefabs ist mindestens eine der folgenden Architekturen erforderlich: arm64-v8a, armeabi-v7a, x86_64, x86.",
  "ExportPrefabRequiresAndroidTriplet": "Für den Export des Prefabs ist ein Android-Triplet erforderlich.",
  "ExportUnsupportedInManifest": "Der vcpkg-Export unterstützt den Manifestmodus nicht, um zukünftige Entwurfsüberlegungen zu ermöglichen. Sie können den Export im klassischen Modus verwenden, indem Sie vcpkg außerhalb eines manifestbasierten Projekts ausführen.",
  "Exported7zipArchive": "7zip-Archiv exportiert an: {path}",
  "ExportedZipArchive": "Zip-Archiv exportiert an: {path}",
  "ExportingAlreadyBuiltPackages": "Die folgenden Pakete sind bereits erstellt und werden exportiert:",
  "ExportingMaintenanceTool": "Wartungstool wird exportiert...",
  "ExportingPackage": "{package_name} wird exportiert...",
  "ExtendedDocumentationAtUrl": "Unter \"{url}\" ist eine ausführliche Dokumentation erhältlich.",
  "ExtractingTool": "{tool_name} wird extrahiert...",
  "FailedPostBuildChecks": "{count} Problem(e) nach der Buildüberprüfung gefunden. Um diese Ports an zusammengestellte Kataloge zu übermitteln, korrigieren Sie zuerst die Portdatei: {path}",
  "FailedToAcquireMutant": "Fehler beim Abrufen des Mutant-Objekts {path}",
  "FailedToCheckoutRepo": "Fehler beim Auschecken von \"Versionen\" aus dem Repository \"{package_name}\".",
  "FailedToDeleteDueToFile": "Fehler beim Ausführen von remove_all ({value}) aufgrund von {path}: ",
  "FailedToDeleteInsideDueToFile": "Fehler beim Ausführen von remove_all_inside ({value}) aufgrund von {path}: ",
  "FailedToDetermineArchitecture": "Die Architektur von {path} kann nicht ermittelt werden.\n{command_line}",
  "FailedToDetermineCurrentCommit": "Fehler beim Ermitteln des aktuellen Commits:",
  "FailedToDownloadFromMirrorSet": "Fehler beim Herunterladen aus dem Spiegelsatz.",
  "FailedToExtract": "Fehler beim Extrahieren von „{path}“:",
  "FailedToFetchError": "{error_msg}\nFehler beim Abrufen von \"{package_name}\":",
  "FailedToFindBaseline": "Fehler beim Suchen von \"baseline.json\".",
  "FailedToFindPortFeature": "{package_name} verfügt über kein Feature mit dem Namen {feature}.",
  "FailedToFormatMissingFile": "Keine zu formatierenden Dateien.\nÜbergeben Sie entweder \"--all\" oder die expliziten Dateien zum Formatieren oder Konvertieren.",
  "FailedToLoadInstalledManifest": "Die Steuerelement- oder Manifestdatei für {package_name} konnte aufgrund des folgenden Fehlers nicht geladen werden. Entfernen Sie {package_name}, und versuchen Sie es erneut.",
  "FailedToLoadManifest": "Fehler beim Laden des Manifests aus dem Verzeichnis \"{path}\".",
  "FailedToLoadPort": "Fehler beim Laden des Ports „{package_name}“ aus {path}",
  "FailedToLoadPortFrom": "Fehler beim Laden des Ports aus {path}",
  "FailedToLoadUnnamedPortFromPath": "Fehler beim Laden des Ports aus {path}",
  "FailedToLocateSpec": "Fehler beim Suchen der Spezifikation im Diagramm: {spec}",
  "FailedToObtainDependencyVersion": "Die gewünschte Abhängigkeitsversion wurde nicht gefunden.",
  "FailedToObtainLocalPortGitSha": "Fehler beim Abrufen von Git-SHAs für lokale Ports.",
  "FailedToObtainPackageVersion": "Die gewünschte Paketversion wurde nicht gefunden.",
  "FailedToOpenAlgorithm": "Fehler beim Öffnen des Ports {value}",
  "FailedToParseBaseline": "Fehler beim Parsen der Baseline: {path}",
  "FailedToParseCMakeConsoleOut": "Fehler beim Analysieren der CMake-Konsolenausgabe, um Blockstart-/Endmarkierungen zu finden.",
  "FailedToParseConfig": "Fehler beim Parsen der Konfiguration: {path}.",
  "FailedToParseControl": "Fehler beim Parsen der STEUERUNGSDATEI: {path}",
  "FailedToParseManifest": "Fehler beim Analysieren der Manifestdatei: {path}",
  "FailedToParseNoTopLevelObj": "Fehler beim Analysieren von {path}. Es wurde ein Objekt der obersten Ebene erwartet.",
  "FailedToParseNoVersionsArray": "Fehler beim Parsen von {path}. Es wurde ein „Versionen“-Array erwartet.",
  "FailedToParseSerializedBinParagraph": "[Integritätsprüfung] Fehler beim Analysieren eines serialisierten binären Absatzes.\nÖffnen Sie ein Problem unter https://github.com/microsoft/vcpkg, und geben Sie folgende Ausgabe an:\n{error_msg}\nSerialisierter binärer Absatz:",
  "FailedToParseVersionXML": "Die Version für das Tool \"{tool_name}\" konnte nicht analysiert werden. Versionszeichenfolge: {version}",
  "FailedToParseVersionsFile": "Die Versionsdatei {path} kann nicht geparst werden",
  "FailedToProvisionCe": "Fehler beim Bereitstellen von vcpkg-Artefakten.",
  "FailedToReadParagraph": "Fehler beim Lesen von Absätzen aus \"{path}\".",
  "FailedToRemoveControl": "Fehler beim Entfernen der Steuerungsdatei \"{path}\".",
  "FailedToRunToolToDetermineVersion": "Fehler beim Ausführen von „{path}“ zum Bestimmen der {tool_name}-Version.",
  "FailedToStoreBackToMirror": "Fehler beim Speichern in der Spiegelung:",
  "FailedToStoreBinaryCache": "Fehler beim Speichern des binären Caches {path}",
  "FailedToTakeFileSystemLock": "Fehler beim Aktivieren der Dateisystemsperre für \"{path}\".",
  "FailedToWriteManifest": "Fehler beim Schreiben der Manifestdatei \"{path}\".",
  "FailedVendorAuthentication": "Mindestens ein {vendor}-Anmeldeinformationsanbieter konnte nicht authentifiziert werden. Weitere Informationen zum Bereitstellen von Anmeldeinformationen finden Sie unter \"{url}\".",
  "FeedbackAppreciated": "Vielen Dank für Ihr Feedback!",
  "FetchingBaselineInfo": "Baselineinformationen werden von \"{package_name}\" abgerufen...",
  "FetchingRegistryInfo": "Registrierungsinformationen werden von {url} ({value}) abgerufen...",
  "FieldKindDidNotHaveExpectedValue": "\"kind\" wies keinen erwarteten Wert auf: (erwarteter Wert: {expected}; gefunden: {actual})",
  "FileNotFound": "{path}: Datei nicht gefunden",
  "FileReadFailed": "Fehler beim Lesen von {count} Bytes aus {path} bei Offset {byte_offset}.",
  "FileSeekFailed": "Fehler beim Suchen nach der Position von {byte_offset} in {path}.",
  "FileSystemOperationFailed": "Fehler beim Vorgang des Dateisystems:",
  "FilesContainAbsolutePath1": "In einem installierten Paket sollten keine absoluten Pfade, wie die folgenden, vorhanden sein:",
  "FilesContainAbsolutePath2": "Absolute Pfade wurden in den folgenden Dateien gefunden:",
  "FilesExported": "Exportierte Dateien unter: {path}",
  "FindHelp": "Sucht nach dem angegebenen Artefakt oder Port. Ohne Parameter wird nach „Artefakt\" oder „Port“ alles angezeigt.",
  "FishCompletion": "Die vcpkg-fish-Vervollständigung wurde bereits unter „{path}“ hinzugefügt.",
  "FloatingPointConstTooBig": "Gleitkommakonstante zu groß: {count}",
  "FollowingPackagesMissingControl": "Die folgenden Pakete verfügen nicht über eine gültige CONTROL- oder vcpkg.json-Datei:",
  "FollowingPackagesNotInstalled": "Die folgenden Pakete sind nicht installiert:",
  "FollowingPackagesUpgraded": "Die folgenden Pakete sind auf dem neuesten Stand:",
  "ForceSystemBinariesOnWeirdPlatforms": "Die Umgebungsvariable VCPKG_FORCE_SYSTEM_BINARIES muss auf ARM-, S390x-, riscv- und ppc64le-Plattformen festgelegt werden.",
  "FormattedParseMessageExpression": "beim Ausdruck: {value}",
  "GHAParametersMissing": "Die binäre GHA-Quelle erfordert, dass die Umgebungsvariablen ACTIONS_RUNTIME_TOKEN und ACTIONS_CACHE_URL festgelegt werden. Weitere Informationen finden Sie unter {url}.",
  "GenerateMsgErrorParsingFormatArgs": "Formatzeichenfolge für {value} wird analysiert:",
  "GenerateMsgIncorrectComment": "Die Nachricht {value} weist einen falschen Kommentar auf:",
  "GenerateMsgNoArgumentValue": "{{{value}}} wurde in einem Kommentar angegeben, aber nicht in der Nachricht verwendet.",
  "GenerateMsgNoCommentValue": "{{{value}}} wurde in der Nachricht verwendet, aber nicht kommentiert.",
  "GeneratedConfiguration": "Die Konfiguration \"{path}\" wurde generiert.",
  "GeneratedInstaller": "{path} Installationsprogramm wurde generiert.",
  "GeneratingConfiguration": "Die Konfiguration \"{path}\" wird generiert...",
  "GeneratingInstaller": "Installationsprogramm \"{path}\" wird generiert...",
  "GeneratingRepo": "Repository \"{path}\" wird generiert...",
  "GetParseFailureInfo": "Verwenden Sie „--debug“, um weitere Informationen zu den Analysefehlern zu erhalten.",
  "GitCommandFailed": "Fehler beim Ausführen von {command_line}",
  "GitFailedToFetch": "Fehler beim Abrufen von Verweis \"{value}\" aus Repository \"{url}\".",
  "GitFailedToInitializeLocalRepository": "Fehler beim Initialisieren des lokalen Repositorys \"{path}\".",
  "GitRegistryMustHaveBaseline": "Der Git-Registrierungseintrag für \"{package_name}\" muss ein Feld \"Baseline\" aufweisen, das ein gültiger Git-Commit-SHA (40 Hexadezimalzeichen) ist.\nDer aktuelle HEAD-Wert dieses Repositorys ist \"{value}\".",
  "GitStatusOutputExpectedFileName": "Es wurde ein Dateiname erwartet.",
  "GitStatusOutputExpectedNewLine": "Neue Zeile erwartet",
  "GitStatusOutputExpectedRenameOrNewline": "Umbenannte Datei oder neue Zeilen erwartet",
  "GitStatusUnknownFileStatus": "Unbekannter Dateistatus: {value}",
  "GitUnexpectedCommandOutputCmd": "Git hat beim Ausführen von {command_line} eine unerwartete Ausgabe erzeugt.",
  "GraphCycleDetected": "Zyklische Abhängigkeit im Graphen erkannt bei {package_name}:",
  "HashFileFailureToRead": "Fehler beim Lesen der Datei „{Pfad}“ zum Hashen: ",
  "HeaderOnlyUsage": "„{package_name}“ ist Header-only und kann von CMake aus verwendet werden über:",
  "HelpAssetCaching": "**Experimentelles Feature: Kann jederzeit geändert oder entfernt werden**\n\nvcpkg kann Spiegelungen verwenden, um heruntergeladene Ressourcen zwischenzuspeichern, wodurch ein ununterbrochener Betrieb sichergestellt wird, auch wenn sich die ursprüngliche Quelle ändert oder verschwindet.\n\nDie Asset-Zwischenspeicherung kann konfiguriert werden, indem Sie entweder die Umgebungsvariable „X_VCPKG_ASSET_SOURCES“ auf eine durch Semikolons getrennte Liste von Quellen festlegen oder eine Sequenz von „--x-asset-sources=<source>“-Befehlszeilenoptionen übergeben. Befehlszeilenquellen werden nach Umgebungsquellen interpretiert. Kommas, Semikolons und Anführungszeichen (') können als Escapezeichen verwendet werden.\n\nDer optionale Parameter <rw> steuert für bestimmte Zeichenfolgen, wie auf sie zugegriffen wird. Sie können „read“, „write“ oder „readwrite“ angeben. Standardmäßig wird der Parameter auf „read“ festgelegt.\n\nGültige Quellen:",
  "HelpAssetCachingAzUrl": "Fügt eine Azure Blob Storage-Quelle hinzu, die optional eine Überprüfung mithilfe von Shared Access Signature verwendet. Die URL muss den Containerpfad enthalten und mit einem nachstehenden „/“ beendet werden. Falls <sas>, definiert ist, muss ein „?“ als Präfix vorangestellt werden. Nicht-Azure-Server funktionieren ebenfalls, sofern sie auf GET- und PUT-Anforderungen im folgenden Format reagieren: „<url><sha512><sas>“.",
  "HelpAssetCachingBlockOrigin": "Deaktiviert das Fallback auf die ursprünglichen URLs, falls die Datei für die Spiegelung nicht verfügbar ist.",
  "HelpAssetCachingScript": "Verteilt an ein externes Tool, um die Ressource abzurufen. In der Vorlage wird „{{url}}“ durch die ursprüngliche URL „{{sha512}}“ durch den SHA512-Wert und „{{dst}}“ durch den Ausgabepfad ersetzt, in dem gespeichert werden soll. Diese Ersetzungen werden alle ordnungsgemäß mit Shell-Escapezeichen verwendet. Ein Beispiel für eine Vorlage wäre: „curl -L {{url}} --output {{dst}}“. „{{{{“ wird durch „}}“ und „}}}}“ durch „}}“ ersetzt, um eine Erweiterung zu vermeiden. Beachten Sie, dass dies innerhalb der Buildumgebung ausgeführt wird, sodass der PFAD und andere Umgebungsvariablen durch das Triplet geändert werden.",
  "HelpBinaryCaching": "vcpkg kann kompilierte Pakete zwischenspeichern, um die Wiederherstellung auf einem einzelnen Computer oder im Netzwerk zu beschleunigen. Standardmäßig speichert vcpkg Builds im Cache eines lokalen Computers. Dies kann deaktiviert werden, indem „--binarysource=clear“ als letzte Option in der Befehlszeile übergeben wird.\n\nDie binäre Zwischenspeicherung kann weiter konfiguriert werden, indem Sie entweder die Option „--binarysource=<source>“ an jede Befehlszeile übergeben oder die Umgebungsvariable „VCPKG_BINARY_SOURCES“ auf eine Gruppe von Quellen festlegen (Beispiel: „<source>;<source>;...“). Befehlszeilenquellen werden nach Umgebungsquellen interpretiert.\n\nDer optionale Parameter „<rw>“ für bestimmte Zeichenfolgen steuert, ob sie zum Herunterladen von Binärdateien abgefragt werden und ob bedarfsgesteuerte Builds auf dieses Remotegerät hochgeladen werden. Sie können „read“, „write“ oder „readwrite“ festlegen.\n\nAllgemeine Quellen:",
  "HelpBinaryCachingAws": "**Experimentell: Wird ohne Warnung geändert oder entfernt**\nFügt eine AWS S3-Quelle hinzu. Verwendet die AWS-CLI für Uploads und Downloads. Das Präfix muss das Schema „s3://“ enthalten und „/“ als Suffix haben.",
  "HelpBinaryCachingAwsConfig": "**Experimentell: Wird ohne Warnung geändert oder entfernt**\nFügt eine AWS S3-Quelle hinzu. Fügt eine AWS-Konfiguration hinzu. Unterstützt zurzeit nur den Parameter „no-sign-request“, der dem Parameter „--no-sign-request“ der AWS CLI entspricht.",
  "HelpBinaryCachingAwsHeader": "Azure-Webdienste-Quellen",
  "HelpBinaryCachingAzBlob": "**Experimentell: Wird ohne Warnung geändert oder entfernt**\nFügt eine Azure Blob Storage-Quelle hinzu. Verwendet eine Überprüfung mithilfe von Shared Access Signature. Die <url> sollte den Containerpfad enthalten. <sas> muss ein „?“ vorangestellt werden.",
  "HelpBinaryCachingCos": "**Experimentell: Wird ohne Warnung geändert oder entfernt**\nFügt eine COS-Quelle hinzu. Verwendet die COS-CLI für Uploads und Downloads. <prefix> muss das Schema „cos://“ enthalten und „/“ als Suffix haben.",
  "HelpBinaryCachingDefaults": "Fügt den dateibasierten Standardspeicherort hinzu. Basierend auf Ihren Systemeinstellungen lautet der Standardpfad zum Speichern von Binärdateien „{path}“. Hierdurch wird %LOCALAPPDATA%/%APPDATA% unter Windows und $XDG_CACHE_HOME oder $HOME auf anderen Plattformen abgefragt.",
  "HelpBinaryCachingDefaultsError": "Fügt den dateibasierten Standardspeicherort hinzu.",
  "HelpBinaryCachingFiles": "Fügt einen benutzerdefinierten dateibasierten Speicherort hinzu.",
  "HelpBinaryCachingGcs": "**Experimentell: Wird ohne Warnung geändert oder entfernt**\nFügt eine Google Cloud Storage-Quelle (GCS) hinzu. Verwendet die gsutil-CLI für Uploads und Downloads. Das Präfix muss das Schema „gs://“ enthalten und „/“ als Suffix haben.",
  "HelpBinaryCachingHttp": "Fügt einen benutzerdefinierten http-basierten Speicherort hinzu. GET-, HEAD- und PUT-Anforderungen werden ausgeführt, um die Binärdateien herunterzuladen, zu überprüfen und hochzuladen. Sie können die Variablen {{name}}, {{version}}, {{sha}} und {{triplet}} verwenden. Eine Beispiel-URL wäre: https://cache.example.com/{{triplet}}/{{name}}/{{version}}/{{sha}}. Über das Headerfeld können Sie einen benutzerdefinierten Header festlegen, um ein Autorisierungstoken zu übergeben.",
  "HelpBinaryCachingNuGet": "Fügt eine NuGet-basierte Quelle hinzu, die dem Parameter „-Source“ der NuGet-CLI entspricht.",
  "HelpBinaryCachingNuGetConfig": "Fügt eine auf NuGet-Konfigurationsdatei basierende Quelle hinzu, die dem Parameter „-Config“ der NuGet-CLI entspricht. In dieser Konfiguration muss für Uploads „defaultPushSource“angegeben werden.",
  "HelpBinaryCachingNuGetFooter": "Der Cache von NuGet wird standardmäßig nicht verwendet. Um sie für jede NuGet-basierte Quelle zu verwenden, legen Sie die Umgebungsvariable „VCPKG_USE_NUGET_CACHE“ auf \"true\" (keine Unterscheidung von Groß- und Kleinschreibung) oder „1“ fest.\nDie Quellanbieter „nuget“ und „nugetconfig“ berücksichtigen bestimmte Umgebungsvariablen beim Generieren von NuGet-Paketen. Wenn die entsprechenden Umgebungsvariablen definiert und nicht leer sind, wird das Feld „metadata.repository“ wie in einem der folgenden Beispiele generiert:",
  "HelpBinaryCachingNuGetHeader": "NuGet-Quellen",
  "HelpBinaryCachingNuGetInteractive": "Aktiviert die interaktive NuGet-Anmeldeinformationsverwaltung, die das Gegenteil zum Parameter „-NonInteractive“ in der NuGet-CLI ist.",
  "HelpBinaryCachingNuGetTimeout": "Gibt ein NuGet-Timeout für NuGet-Netzwerkvorgänge an. Entspricht dem Parameter „-Timeout“ der NuGet-CLI.",
  "HelpBuiltinBase": "Die Baseline verweist auf einen Commit innerhalb des vcpkg-Repositorys, der eine Mindestversion für jede Abhängigkeit im Diagramm festlegt. Wenn beispielsweise keine anderen Einschränkungen angegeben werden (direkt oder transitiv), wird die Version in die Baseline des Manifests der obersten Ebene aufgelöst. Baselines transitiver Abhängigkeiten werden ignoriert.",
  "HelpCachingClear": "Entfernt alle vorherigen Quellen, einschließlich Der Standardwerte.",
  "HelpContactCommand": "Kontaktinformationen anzeigen, um Feedback zu senden.",
  "HelpCreateCommand": "Erstellen Sie einen neuen Port.",
  "HelpDependInfoCommand": "Zeigt eine Liste der Abhängigkeiten für Ports an.",
  "HelpEditCommand": "Öffnen Sie einen Port zum Bearbeiten (verwenden Sie die Umgebungsvariable „{env_var}“, um ein Editorprogramm festzulegen. Standardmäßig wird „code“ verwendet).",
  "HelpEnvCommand": "Erstellt eine bereinigende Shellumgebung für die Entwicklung oder Kompilierung.",
  "HelpExampleCommand": "Weitere Hilfe (einschließlich Beispiele) finden Sie im zugehörigen Ordner für README.md und Dokumente.",
  "HelpExampleManifest": "Beispielmanifest:",
  "HelpExportCommand": "Exportiert ein Paket.",
  "HelpFormatManifestCommand": "Formatiert alle vcpkg.json-Dateien. Führen Sie dies aus, bevor Sie einen Commit für vcpkg ausführen.",
  "HelpHashCommand": "Hash einer Datei nach einem bestimmten Algorithmus, Standardmäßig SHA512.",
  "HelpInitializeRegistryCommand": "Initialisiert eine Registrierung im Verzeichnis <path>.",
  "HelpInstallCommand": "Installieren Sie ein Paket.",
  "HelpListCommand": "Listen Sie installierte Pakete auf.",
  "HelpManifestConstraints": "Manifeste können drei Arten von Einschränkungen auf die verwendeten Versionen platzieren.",
  "HelpMinVersion": "Vcpkg wählt die gefundene Mindestversion aus, die allen anwendbaren Einschränkungen entspricht, einschließlich der Version aus der Baseline, die auf oberster Ebene angegeben wurde, sowie alle \"version>=\"-Einschränkungen im Diagramm.",
  "HelpOverrides": "Bei Verwendung als Manifest der obersten Ebene (z. B. beim Ausführen von \"vcpkg install\" im Verzeichnis) lassen Außerkraftsetzungen zu, dass ein Manifest die Abhängigkeitsauflösung kurzschließt und die zu verwendende Version angibt. Sie können verwendet werden, um Versionskonflikte wie Abhängigkeiten vom Typ \"version-string\" zu behandeln. Sie werden nicht berücksichtigt, wenn sie transitiv abhängig sind.",
  "HelpOwnsCommand": "Suchen Sie nach Dateien in installierten Paketen.",
  "HelpPackagePublisher": "Darüber hinaus können Paketherausgeber Einschränkungen vom Typ “version>=\" verwenden, um sicherzustellen, dass Konsumenten mindestens eine bestimmte Mindestversion einer vorgegebenen Abhängigkeit verwenden. Wenn zu einer Bibliothek beispielsweise eine API benötigt, die Boost Asio in Version 1.70 hinzugefügt wird, stellt eine \"version>=\"-Einschränkung sicher, dass transitive Benutzer selbst bei Überschreibungen einzelner Versionen oder registrierungsübergreifenden Verweisen eine ausreichende Version verwenden.",
  "HelpPortVersionScheme": "Jede Version hat zusätzlich eine \"port-version\", bei der es sich um eine nicht negative ganze Zahl handelt. Wenn sie als Text gerendert wird, wird die Portversion (falls ungleich null) als Suffix zum primären Versionstext hinzugefügt und durch einen Hash (#) getrennt. Portversionen werden lexografisch nach dem primären Versionstext sortiert, z. B.:\n1.0.0 < 1.0.0#1 < 1.0.1 < 1.0.1#5 < 2.0.0",
  "HelpRemoveCommand": "Deinstallieren Sie ein Paket.",
  "HelpRemoveOutdatedCommand": "Deinstallieren Sie alle veralteten Pakete.",
  "HelpResponseFileCommand": "Geben Sie eine Antwortdatei an, um zusätzliche Parameter bereitzustellen.",
  "HelpSearchCommand": "Suchen Sie nach verfügbaren Paketen, die erstellt werden können.",
  "HelpTextOptFullDesc": "Langen Text nicht abschneiden",
  "HelpTopicCommand": "Hilfe zu einem bestimmten Thema anzeigen.",
  "HelpTopicsCommand": "Zeigt die Liste der Hilfethemen an.",
  "HelpTxtOptAllowUnsupportedPort": "Anstatt einen Fehler an einem nicht unterstützten Port anzuzeigen, fahren Sie mit einer Warnung fort.",
  "HelpTxtOptCleanAfterBuild": "Buildstrukturen, Pakete und Downloads nach dem Erstellen der einzelnen Pakete bereinigen",
  "HelpTxtOptCleanBuildTreesAfterBuild": "Buildstrukturen nach dem Erstellen der einzelnen Pakete bereinigen",
  "HelpTxtOptCleanDownloadsAfterBuild": "Downloads nach der Erstellung jedes Pakets bereinigen",
  "HelpTxtOptCleanPkgAfterBuild": "Pakete nach der Erstellung jedes Pakets bereinigen",
  "HelpTxtOptDryRun": "Nicht erstellen oder installieren.",
  "HelpTxtOptEditable": "Erneute Quellextraktion und binäre Zwischenspeicherung für Bibliotheken in der Befehlszeile deaktivieren (klassischer Modus)",
  "HelpTxtOptEnforcePortChecks": "Fehler bei der Installation, wenn ein Port Probleme erkannt hat oder versucht, ein veraltetes Feature zu verwenden",
  "HelpTxtOptKeepGoing": "Mit der Installation von Paketen fortfahren, wenn ein Fehler auftritt.",
  "HelpTxtOptManifestFeature": "Zusätzliches Feature aus dem zu installierenden Manifest der obersten Ebene (Manifestmodus).",
  "HelpTxtOptManifestNoDefault": "Installieren Sie nicht die Standardfeatures aus dem Manifest der obersten Ebene (Manifestmodus).",
  "HelpTxtOptNoDownloads": "Keine neuen Quellen herunterladen",
  "HelpTxtOptNoUsage": "Geben Sie nach der Installation keine CMake-Nutzungsinformationen aus.",
  "HelpTxtOptOnlyBinCache": "Fehler, wenn zwischengespeicherte Binärdateien nicht verfügbar sind.",
  "HelpTxtOptOnlyDownloads": "Best-Effort-Versuch durchführen, um Quellen ohne Erstellung herunterzuladen.",
  "HelpTxtOptRecurse": "Entfernen von Paketen im Rahmen der Installation zulassen.",
  "HelpTxtOptUseAria2": "Aria2 verwenden, um Downloadaufgaben auszuführen.",
  "HelpTxtOptUseHeadVersion": "Bibliotheken über die Befehlszeile mit den neuesten Upstreamquellen (klassischer Modus) installieren.",
  "HelpTxtOptWritePkgConfig": "Schreibt eine Datei im NuGet packages.config-Format für die Verwendung mit externer binärer Zwischenspeicherung.\n Weitere Informationen finden Sie unter \"vcpkg help binarycaching\".",
  "HelpUpdateBaseline": "Der beste Ansatz, um Ihre Bibliotheken auf dem neuesten Stand zu halten, besteht im Aktualisieren Ihres Baselineverweises. Hierdurch wird sichergestellt, dass alle Pakete, einschließlich transitiver Pakete, aktualisiert werden. Wenn Sie jedoch ein Paket unabhängig aktualisieren müssen, können Sie eine „version>=“-Einschränkung verwenden.",
  "HelpUpdateCommand": "Listet Pakete auf, die aktualisiert werden können.",
  "HelpUpgradeCommand": "Alle veralteten Pakete neu erstellen.",
  "HelpVersionCommand": "Zeigt Versionsinformationen an.",
  "HelpVersionDateScheme": "Ein Datum (01.01.2021)",
  "HelpVersionGreater": "Innerhalb des Felds \"Abhängigkeiten\" kann für jede Abhängigkeit eine Mindesteinschränkung aufgelistet werden. Diese Mindesteinschränkungen werden abhängig von dieser Bibliothek transitiv verwendet. Zusätzlich kann eine minimale Portversion mit dem Suffix \"#\" angegeben werden.",
  "HelpVersionScheme": "Eine durch Punkte getrennte Sequenz von Zahlen (1.2.3.4)",
  "HelpVersionSchemes": "Die folgenden Versionsschemas werden akzeptiert.",
  "HelpVersionSemverScheme": "EIne Semantische Version 2.0 (2.1.0-rc2)",
  "HelpVersionStringScheme": "Eine genaue, nicht kompatible Version (Vista)",
  "HelpVersioning": "Mithilfe der Versionsverwaltung können Sie deterministisch die genauen Revisionen von Abhängigkeiten steuern, die von Ihrem Projekt innerhalb Ihrer Manifestdatei verwendet werden.",
  "IgnoringVcpkgRootEnvironment": "VCPKG {value} verwendet den erkannten VCPKG-Stamm „{actual}“ und ignoriert den nicht übereinstimmenden VCPKG_ROOT-Umgebungswert „{path}“. Um diese Meldung zu unterdrücken, entfernen Sie die Umgebungsvariable, oder verwenden Sie den Befehlszeilenschalter „--vcpkg-root“.",
  "IllegalFeatures": "Die Liste der Features ist in diesem Kontext nicht zulässig",
  "IllegalPlatformSpec": "Der Plattformqualifizierer ist in diesem Kontext nicht zulässig",
  "ImproperShaLength": "SHA512-Zeichen müssen 128 Hexadezimalzeichen umfassen: {value}",
  "IncorrectArchiveFileSignature": "Falsche Archivdateisignatur",
  "IncorrectPESignature": "Falsche PE-Signatur",
  "IncrementedUtf8Decoder": "Erhöhter Utf8Decoder am Ende der Zeichenfolge",
  "InfoSetEnvVar": "Sie können die Umgebungsvariable „{env_var}“ auch auf den Editor Ihrer Wahl festlegen.",
  "InitRegistryFailedNoRepo": "Unter {path} konnte keine Registrierung erstellt werden, da es sich nicht um einen Git-Repositorystamm handelt.\nVerwenden Sie „git init {command_line}“, um ein Git-Repository in diesem Ordner zu erstellen.",
  "InstallCopiedFile": "{path_source} -> {path_destination} abgeschlossen",
  "InstallFailed": "Fehler: {path}: {error_msg}",
  "InstallPackageInstruction": "Wechseln Sie bei geöffnetem Projekt zu Tools > NuGet-Paket-Manager-> Paket-Manager Konsole und fügen Sie Folgendes ein:\n Install-Package „{ wert}“ -Quelle „{path}“",
  "InstallRootDir": "(Experimentell) Geben Sie das Installationsstammverzeichnis an.",
  "InstallSkippedUpToDateFile": "{path_source} -> {path_destination} übersprungen, aktuell",
  "InstallWithSystemManager": "Möglicherweise können Sie dieses Tool über Ihren Systempaket-Manager installieren.",
  "InstallWithSystemManagerMono": "Ubuntu 18.04-Benutzer benötigen möglicherweise eine neuere Version von Mono, die unter {url} verfügbar ist.",
  "InstallWithSystemManagerPkg": "Möglicherweise können Sie dieses Tool über Ihren Systempaket-Manager ({command_line}) installieren.",
  "InstalledBy": "Installiert von {path}",
  "InstalledPackages": "Die folgenden Pakete sind bereits installiert:",
  "InstalledRequestedPackages": "Alle angeforderten Pakete sind derzeit installiert.",
  "InstallingFromLocation": "-- Installation des Ports von Speicherort: {Pfad}",
  "InstallingMavenFile": "{path}-Installation der Maven-Datei",
  "InstallingPackage": "Installing {action_index}/{count} {spec}...",
  "IntegrateBashHelp": "Aktivieren Sie die Tab-Vervollständigung in bash.",
  "IntegrateFishHelp": "Aktivieren Sie die Tab-Vervollständigung in Fish.",
  "IntegrateInstallHelpLinux": "Machen Sie installierte Pakete benutzerweit verfügbar.",
  "IntegrateInstallHelpWindows": "Machen Sie installierte Pakete benutzerweit verfügbar. Dies erfordert bei der ersten Verwendung Administratorrechte.",
  "IntegratePowerShellHelp": "Aktivieren Sie die Tab-Vervollständigung in PowerShell.",
  "IntegrateProjectHelp": "Generiert ein verweisendes NuGet-Paket für die Verwendung in einzelnen VS-Projekten.",
  "IntegrateRemoveHelp": "Entfernen Sie die benutzerweite Integration.",
  "IntegrateZshHelp": "Aktivieren Sie die Tab-Vervollständigung in zsh.",
  "IntegrationFailedVS2015": "Die Integration wurde für Visual Studio 2015 nicht angewendet.",
  "InternalCICommand": "vcpkg ci ist ein interner Befehl, der sich inkompatibel ändert oder jederzeit entfernt wird.",
  "InternalErrorMessage": "Interner Fehler: ",
  "InternalErrorMessageContact": "Geben Sie unter „https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug“ das Problem mit detaillierten Schritten an, um das Problem zu reproduzieren.",
  "InvalidArchitecture": "Ungültige Architektur: {value}",
  "InvalidArgument": "Ungültiges Argument.",
  "InvalidArgumentRequiresAbsolutePath": "Ungültiges Argument: Die binäre Konfiguration '{binary_source}' Pfadargumente für binäre Konfigurationszeichenfolgen müssen absolut sein.",
  "InvalidArgumentRequiresBaseUrl": "Ungültiges Argument: Für die binäre Konfiguration '{binary_source}' ist eine {base_url} Basis-URL als erstes Argument erforderlich.",
  "InvalidArgumentRequiresBaseUrlAndToken": "Ungültiges Argument: Die Binärkonfiguration „{binary_source}“ erfordert mindestens eine Basis-URL und ein SAS-Token",
  "InvalidArgumentRequiresNoWildcards": "Der Windows-Pfadfall kann nicht behoben werden, weil der Pfad Platzhalter enthält: {path}",
  "InvalidArgumentRequiresNoneArguments": "Ungültiges Argument: Die binäre Konfiguration '{binary_source}' akzeptiert keine Argumente",
  "InvalidArgumentRequiresOneOrTwoArguments": "ungültiges Argument: Binärkonfiguration „{binary_source}“ erfordert 1 oder 2 Argumente",
  "InvalidArgumentRequiresPathArgument": "Ungültiges Argument: Die Binärkonfiguration \"{binary_source}\" erfordert mindestens ein Pfadargument",
  "InvalidArgumentRequiresPrefix": "Ungültiges Argument: Die Binärkonfiguration \"{binary_source}\" erfordert mindestens ein Präfix",
  "InvalidArgumentRequiresSingleArgument": "Ungültiges Argument: Die Binärkonfiguration „{binary_source}“ akzeptiert nicht mehr als 1 Argument",
  "InvalidArgumentRequiresSingleStringArgument": "Ungültiges Argument: Binäre Konfiguration '{binary_source}' erwartet ein einzelnes Zeichenfolgenargument.",
  "InvalidArgumentRequiresSourceArgument": "Ungültiges Argument: Die Binärkonfiguration \"{binary_source}\" erfordert mindestens ein Quellenargument",
  "InvalidArgumentRequiresTwoOrThreeArguments": "ungültiges Argument: Binärkonfiguration „{binary_source}“ erfordert 2 oder 3 Argumente",
  "InvalidArgumentRequiresValidToken": "Ungültiges Argument: Für die binäre Konfiguration '{binary_source}' ist ein SAS-Token ohne voranstellendes \"?\"-Argument als zweites Argument erforderlich",
  "InvalidArgumentRequiresZeroOrOneArgument": "Ungültiges Argument: Binärkonfiguration „{binary_source}“ erfordert 0 oder 1 Argument.",
  "InvalidBuildInfo": "Ungültige BUILD_INFO für Paket: {error_msg}",
  "InvalidBuiltInBaseline": "Die integrierte Baseline der obersten Ebene ({value}) war kein gültiger Commit sha: Es wurden 40 Hexadezimalzeichen erwartet.",
  "InvalidBundleDefinition": "Ungültige Paketdefinition.",
  "InvalidCharacterInFeatureList": "Ungültiges Zeichen im Featurenamen (muss aus Kleinbuchstaben, Ziffern, „-“ oder „*“ bestehen).",
  "InvalidCharacterInFeatureName": "Ungültiges Zeichen im Featurenamen (muss aus Kleinbuchstaben, Ziffern, „-“ bestehen).",
  "InvalidCharacterInPackageName": "ungültiges Zeichen im Paketnamen (muss aus Kleinbuchstaben, Ziffern, „-“ bestehen).",
  "InvalidCodePoint": "An utf8_encoded_code_point_count wurde ein ungültiger Codepunkt übergeben",
  "InvalidCodeUnit": "Ungültige Codeeinheit",
  "InvalidCommandArgSort": "Der Wert von „--sort“ muss „lexikografisch“, „topologisch“ oder „umgekehrt“ sein.",
  "InvalidCommentStyle": "vcpkg unterstützt keine Kommentare im C-Stil, aber die meisten Objekte ermöglichen die Verwendung von Feldern mit dem Präfix $ als Kommentare.",
  "InvalidCommitId": "Ungültige Commit-ID: {commit_sha}",
  "InvalidDefaultFeatureName": "„Standard“ ist ein reservierter Featurename",
  "InvalidDependency": "-Abhängigkeiten müssen alphanumerische Zeichen und Bindestriche in Kleinbuchstaben und nicht einer der reservierten Namen sein.",
  "InvalidFeature": "-Features müssen alphanumerische Zeichen und Bindestriche in Kleinbuchstaben und nicht einer der reservierten Namen sein.",
  "InvalidFileType": "Fehler: {path} kann den Dateityp nicht verarbeiten",
  "InvalidFilename": "Der Dateiname darf keine ungültigen Zeichen {value} enthalten, lautete aber {path}",
  "InvalidFloatingPointConst": "Ungültige Gleitkommakonstante: {count}",
  "InvalidFormatString": "Ungültige Formatzeichenfolge. {actual}",
  "InvalidHexDigit": "Ungültige Hexadezimalziffer im Unicode-Escapezeichen",
  "InvalidIntegerConst": "Ungültige ganzzahlige Konstante: {count}",
  "InvalidLibraryMissingLinkerMembers": "Die Bibliothek war ungültig: Es wurde kein Linkerelement gefunden.",
  "InvalidLinkage": "Ungültiger {system_name} Bindungstyp: [{value}]",
  "InvalidLogicExpressionUnexpectedCharacter": "Ungültiger logischer Ausdruck, unerwartetes Zeichen",
  "InvalidLogicExpressionUsePipe": "Ungültiger Logikausdruck. Verwenden Sie \"|\" anstelle von „oder.",
  "InvalidNoVersions": "Die Datei enthält keine Versionen.",
  "InvalidOptionForRemove": "„remove“ akzeptiert entweder Bibliotheken oder „--outdated“",
  "InvalidPortVersonName": "Ungültiger Dateiname der Portversion gefunden: {path}.",
  "InvalidSharpInVersion": "Ungültiges Zeichen \"#\" im Versionstext",
  "InvalidSharpInVersionDidYouMean": "Ungültiges Zeichen \"#\" im Versionstext. Meinten Sie \"port-version\": {value}?",
  "InvalidString": "An Value::string(std::string) wurde ungültiger UTF8-Code übergeben.",
  "InvalidTriplet": "Ungültiges Triplet: {triplet}",
  "InvalidUri": "URI kann nicht geparst werden: {value}",
  "IrregularFile": "Der Pfad war keine reguläre Datei: {path}",
  "JsonErrorMustBeAnObject": "Es wurde erwartet, dass es sich bei „{path}“ um ein Objekt handelt.",
  "JsonFieldNotObject": "Der Wert von [\"{json_field}\"] muss ein Objekt sein.",
  "JsonFieldNotString": "Der Wert von [\"{json_field}\"] muss eine Zeichenfolge sein.",
  "JsonFileMissingExtension": "Die JSON-Datei \"{path}\" muss die Erweiterung .json (nur Kleinbuchstaben) aufweisen.",
  "JsonSwitch": "(Experimentell) JSON-Ausgabe anfordern.",
  "JsonValueNotArray": "JSON-Wert ist kein Array.",
  "JsonValueNotObject": "Der JSON-Wert ist kein Objekt.",
  "JsonValueNotString": "Der JSON-Wert ist keine Zeichenfolge.",
  "LaunchingProgramFailed": "{tool_name} wird gestartet:",
  "LibraryArchiveMemberTooSmall": "Ein Bibliotheksarchivelement war zu klein, um den erwarteten Datentyp aufzunehmen.",
  "LibraryFirstLinkerMemberMissing": "Der Name des ersten Linkerelements wurde nicht gefunden.",
  "LicenseExpressionContainsExtraPlus": "Der SPDX-Lizenzausdruck enthält ein zusätzliches „+“. Diese sind nur direkt nach einem Lizenzbezeichner zulässig.",
  "LicenseExpressionContainsInvalidCharacter": "Der SPDX-Lizenzausdruck enthält ein ungültiges Zeichen (0x{value:02X} „{value}“).",
  "LicenseExpressionContainsUnicode": "Der SPDX-Lizenzausdruck enthält ein Unicode-Zeichen (U+{value:04X} „{pretty_value}“), aber diese Ausdrücke dürfen nur ASCII sein.",
  "LicenseExpressionDocumentRefUnsupported": "Die aktuelle Implementierung unterstützt keine SPDX-Verweise mit DocumentRef-.",
  "LicenseExpressionExpectCompoundFoundParen": "Ein Verbund oder das Ende der Zeichenfolge wurde erwartet, eine Klammer wurde gefunden.",
  "LicenseExpressionExpectCompoundFoundWith": "Entweder AND oder OR wurde erwartet, WITH wurde gefunden (WITH ist nur nach Lizenznamen zulässig, nicht nach Ausdrücken in Klammern).",
  "LicenseExpressionExpectCompoundFoundWord": "Entweder AND oder OR wurde erwartet., ein Lizenz- oder Ausnahmename wurde gefunden: „{value}“.",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "Entweder AND, OR oder WITH wurde erwartet, ein Lizenz- oder Ausnahmename wurde gefunden: „{value}“.",
  "LicenseExpressionExpectExceptionFoundCompound": "Ein Ausnahmename wurde erwartet, der Verbund {value} wurde gefunden.",
  "LicenseExpressionExpectExceptionFoundEof": "Ein Ausnahmename wurde erwartet, das Ende der Zeichenfolge wurde gefunden.",
  "LicenseExpressionExpectExceptionFoundParen": "Ein Ausnahmename wurde erwartet, eine Klammer wurde gefunden.",
  "LicenseExpressionExpectLicenseFoundCompound": "Ein Lizenzname wurde erwartet, der Verbund „{value}“ wurde gefunden.",
  "LicenseExpressionExpectLicenseFoundEof": "Ein Lizenzname wurde erwartet, das Ende der Zeichenfolge wurde gefunden.",
  "LicenseExpressionExpectLicenseFoundParen": "Ein Lizenzname wurde erwartet, eine Klammer wurde gefunden.",
  "LicenseExpressionImbalancedParens": "Es wurde eine schließende Klammer ohne eine öffnende Klammer gefunden.",
  "LicenseExpressionString": "<Lizenzzeichenfolge>",
  "LicenseExpressionUnknownException": "Unbekannter Lizenzausnahmebezeichner „{value}“. Bekannte Werte werden unter https://spdx.org/licenses/exceptions-index.html aufgeführt.",
  "LicenseExpressionUnknownLicense": "Unbekannter Lizenzbezeichner „{value}“. Bekannte Werte werden unter https://spdx.org/licenses/ aufgeführt.",
  "LinkageDynamicDebug": "Dynamisches Debuggen (/MDd)",
  "LinkageDynamicRelease": "Dynamisches Release (/MD)",
  "LinkageStaticDebug": "Statisches Debuggen (/MTd)",
  "LinkageStaticRelease": "Statisches Release (/MT)",
  "ListHelp": "Das Argument muss ein zu suchender substring und darf kein Argument sein, um alle installierten Bibliotheken anzuzeigen.",
  "ListOfValidFieldsForControlFiles": "Dies ist die Liste der gültigen Felder für CONTROL-Dateien (Groß-/Kleinschreibung beachten):",
  "LoadingCommunityTriplet": "-- [COMMUNITY] Laden der Triplet-Konfiguration von: {Pfad}",
  "LoadingDependencyInformation": "Abhängigkeitsinformationen für {count} Pakete werden geladen...",
  "LoadingOverlayTriplet": "-- [OVERLAY] Laden der Triplet-Konfiguration von: {Pfad}",
  "LocalPortfileVersion": "Verwenden lokaler Portdateiversionen. Verwenden Sie \"git pull\", um die lokalen Portdateien zu aktualisieren.",
  "LocalizedMessageMustNotContainIndents": "Die Nachricht mit dem Namen {value} enthält eine Art Einzug, der geändert werden muss, damit stattdessen „LocalizedString::append_indent“ verwendet werden kann.",
  "LocalizedMessageMustNotEndWithNewline": "Die Nachricht mit dem Namen {value} endet mit einem Zeilenumbruch, der durch Formatierung und nicht durch Lokalisierung hinzugefügt werden soll.",
  "ManifestConflict": "Es wurden sowohl Manifest- als auch CONTROL-Dateien im Port „{path}“ gefunden; benennen Sie die eine oder die andere um",
  "ManifestFormatCompleted": "Die Manifestdateien wurden erfolgreich formatiert.",
  "MismatchedBinParagraphs": "Der serialisierte binäre Absatz unterscheidet sich vom ursprünglichen binären Absatz. Öffnen Sie unter https://github.com/microsoft/vcpkg ein Problem mit der folgenden Ausgabe:",
  "MismatchedFiles": "Die zu speichernde Datei stimmt nicht mit dem Hash überein.",
  "MismatchedManifestAfterReserialize": "Das serialisierte Manifest unterscheidet sich vom ursprünglichen Manifest. Öffnen Sie unter https://github.com/microsoft/vcpkg einen Sachverhalt mit der folgenden Ausgabe:",
  "MismatchedNames": "Namen stimmten nicht überein: '{package_name}' != '{actual}'",
  "MismatchedSpec": "Nicht übereinstimmende Spezifikation im Port {path}: erwartete {expected}, tatsächliche {actual}",
  "MismatchedType": "{json_field}: Nicht übereinstimmender Typ: {json_type} erwartet",
  "Missing7zHeader": "Der 7z-Header wurde nicht gefunden.",
  "MissingAndroidEnv": "ANDROID_NDK_HOME Umgebungsvariable fehlt",
  "MissingAndroidHomeDir": "ANDROID_NDK_HOME Verzeichnis ist nicht vorhanden: {path}",
  "MissingArgFormatManifest": "format-manifest wurde ohne \"--all\" an \"--convert-control\" übergeben.\nDies führt keine Aktion aus: Explizit übergebene Steuerdateien werden automatisch konvertiert.",
  "MissingClosingParen": "Schließende geschweifte Klammer „)“ fehlt.",
  "MissingDependency": "Das Paket {spec} ist installiert, die Abhängigkeit {package_name} jedoch nicht.",
  "MissingExtension": "Die Erweiterung „{extension}“ fehlt.",
  "MissingOption": "Für diesen Befehl ist \"--{option}\" erforderlich.",
  "MissingOrInvalidIdentifer": "fehlender oder ungültiger Bezeichner",
  "MissingPortSuggestPullRequest": "Wenn Ihr Port nicht aufgeführt ist, öffnen Sie ein Problem und/oder erwägen Sie, einen Pull Request zu erstellen.",
  "MissingRequiredField": "fehlendes Pflichtfeld \"{json_field}\" ({json_type})",
  "MixingBooleanOperationsNotAllowed": "Das Mischen von „&“ und „|“ ist nicht zulässig. Verwenden Sie „()“, um die Reihenfolge der Vorgänge anzugeben",
  "MonoInstructions": "Dies kann auf eine unvollständige Mono-Installation zurückzuführen sein. Vollständige Mono-Installationen sind auf einigen Systemen über „sudo apt install mono-complete“ verfügbar. Ubuntu 18.04-Benutzer benötigen möglicherweise eine neuere Mono-Version, die unter „https://www.mono-project.com/download/stable/“ verfügbar ist",
  "MsiexecFailedToExtract": "msiexec-Fehler beim Extrahieren von „{path}“ mit Start- oder Exitcode {exit_code} und Meldung:",
  "MultiArch": "Multi-Arch muss \"same\" sein, war aber {option}",
  "MultipleFeatures": "Das Paket {package_name} deklariert das Feature {feature} mehrmals. Stellen Sie sicher, dass Features unterschiedliche Namen haben.",
  "MutuallyExclusiveOption": "--{value} kann nicht mit --{option} verwendet werden.",
  "NavigateToNPS": "Navigieren Sie zu {url} in Ihrem bevorzugten Browser.",
  "NewConfigurationAlreadyExists": "Das Erstellen eines Manifests würde eine vcpkg-configuration.json unter „{path}“ überschreiben.",
  "NewManifestAlreadyExists": "Unter „{path}“ ist bereits ein Manifest vorhanden.",
  "NewNameCannotBeEmpty": "„--name“ darf nicht leer sein.",
  "NewOnlyOneVersionKind": "Es kann nur eine der Zeichenfolgen „--version-relaxed“, „--version-date“ oder „--version-string“ angegeben werden.",
  "NewSpecifyNameVersionOrApplication": "Geben Sie entweder „--name“ und „--version“ an, um ein Manifest für C++-Bibliotheken zu erstellen, oder geben Sie „--application“ an, um anzugeben, dass das Manifest nicht als Port verwendet werden soll.",
  "NewVersionCannotBeEmpty": "„--version“ darf nicht leer sein.",
  "NoArgumentsForOption": "Die Option --{option} akzeptiert kein Argument.",
  "NoCachedPackages": "Es sind keine Pakete zwischengespeichert.",
  "NoError": "Kein Fehler",
  "NoInstalledPackages": "Es sind keine Pakete installiert. Meinten Sie „Suchen“?",
  "NoLocalizationForMessages": "Keine lokalisierte Meldungen für Folgendes: ",
  "NoOutdatedPackages": "Es sind keine veralteten Pakete vorhanden.",
  "NoRegistryForPort": "für Port {package_name} ist keine Registrierung konfiguriert",
  "NoUrlsAndHashSpecified": "Es wurden keine URLs zum Herunterladen des SHA angegeben: {sha}",
  "NoUrlsAndNoHashSpecified": "Es wurden keine URLs und kein Hash angegeben.",
  "NonExactlyArgs": "Der Befehl \"{command_name}\" erfordert genau {expected} Argumente, aber {actual} wurden angegeben.",
  "NonOneRemainingArgs": "Der Befehl \"{command_name}\" erfordert genau ein Argument.",
  "NonRangeArgs": "Der Befehl \"{command_name}\" erfordert zwischen {lower} und {upper} Argumenten, einschließlich, aber {actual} wurden angegeben.",
  "NonZeroOrOneRemainingArgs": "Der Befehl \"{command_name}\" erfordert NULL oder ein Argument.",
  "NonZeroRemainingArgs": "Der Befehl \"{command_name}\" akzeptiert keine zusätzlichen Argumente.",
  "NoteMessage": "Hinweis: ",
  "NugetOutputNotCapturedBecauseInteractiveSpecified": "Fehler beim NuGet-Befehl, und die Ausgabe wurde nicht erfasst, weil \"--interactive\" angegeben wurde.",
  "NugetPackageFileSucceededButCreationFailed": "Die NuGet-Paketerstellung war erfolgreich, es wurde jedoch keine nupkg-Datei erstellt. Erwartet: „{path}“",
  "NugetTimeoutExpectsSinglePositiveInteger": "Unerwartete Argumente: Die binäre Konfiguration \"nugettimeout\" erwartet ein einzelnes positives ganzzahliges Argument.",
  "OptionMustBeInteger": "Der Wert von „--{option}“ muss eine ganze Zahl sein.",
  "OptionRequired": "Die Option --{option} ist erforderlich.",
  "OptionRequiresANonDashesValue": "Für die Option \"{option}\" ist ein Wert erforderlich. Wenn Sie \"{option}\" auf \"{value}\" festlegen möchten, verwenden Sie stattdessen das Gleichheitsformular: {actual}={value}",
  "OptionRequiresAValue": "Für die Option \"{option}\" ist ein Wert erforderlich.",
  "OptionRequiresOption": "--{value} erfordert --{option}",
  "OptionUsedMultipleTimes": "Die Option \"{option}\" wurde mehrmals angegeben.",
  "OptionalCommand": "optionale Befehl",
  "Options": "Optionen",
  "OriginalBinParagraphHeader": "\nUrsprünglicher binärer Absatz",
  "OverlayPatchDir": "Der Überlagerungspfad „{path}“ muss vorhanden sein und muss ein Verzeichnis sein.",
  "OverlayTriplets": "Überlagerungstriplets aus {Pfad} :",
  "OverwritingFile": "Die Datei {path} war bereits vorhanden und wird überschrieben",
  "PECoffHeaderTooShort": "Beim Analysieren der portablen ausführbaren Datei \"{path}\" ist die Größe des COFF-Headers zu klein, um einen gültigen PE-Header zu enthalten.",
  "PEConfigCrossesSectionBoundary": "Beim Analysieren der portablen ausführbaren Datei \"{path}\" überschreitet das Imagekonfigurationsverzeichnis eine Secionsgrenze.",
  "PEImportCrossesSectionBoundary": "Beim Analysieren der portierbaren ausführbaren Datei \"{path}\" überschreitet die Importtabelle eine Grenze für die Secion.",
  "PEPlusTagInvalid": "Beim Analysieren der portierbaren ausführbaren Datei \"{path}\" war der optionale Header weder PE32 noch PE32+.",
  "PERvaNotFound": "Beim Analysieren der portablen ausführbaren Datei \"{path}\" wurde das RVA {value:#X} nicht gefunden.",
  "PESignatureMismatch": "Beim Analysieren der portablen ausführbaren Datei \"{path}\" stimmt die Signatur nicht überein.",
  "PackageAlreadyRemoved": "{spec} kann nicht entfernt werden: bereits entfernt",
  "PackageFailedtWhileExtracting": "Fehler bei „{value}“ beim Extrahieren von „{path}“.",
  "PackageInfoHelp": "Detaillierte Informationen zu Paketen anzeigen.",
  "PackageRootDir": "(Experimentell) Geben Sie das Buildstrukturstammverzeichnis an.",
  "PackagesToInstall": "Die folgenden Pakete werden erstellt und installiert:",
  "PackagesToInstallDirectly": "Die folgenden Pakete werden direkt installiert:",
  "PackagesToModify": "Zusätzliche Pakete (*) werden geändert, um diesen Vorgang abzuschließen.",
  "PackagesToRebuild": "Die folgenden Pakete werden neu erstellt:",
  "PackagesToRebuildSuggestRecurse": "Wenn Sie sicher sind, dass Sie die obigen Pakete neu erstellen möchten, führen Sie den Befehl mit der Option \"--recurse\" aus.",
  "PackagesToRemove": "Die folgenden Pakete werden entfernt:",
  "PackagesUpToDate": "Es müssen keine Pakete aktualisiert werden.",
  "PackingVendorFailed": "Fehler bei der {vendor}-Paketerstellung. Verwenden Sie \"--debug\", um weitere Informationen zu erhalten.",
  "PairedSurrogatesAreInvalid": "Nachstehendes Ersatzzeichen nach vorangestelltem Ersatzzeichen (paarweise Ersatzzeichen sind ungültig)",
  "ParagraphDuplicateField": "Doppeltes Feld",
  "ParagraphExactlyOne": "Es sollte genau ein Absatz vorhanden sein.",
  "ParagraphExpectedColonAfterField": "„:“ nach Feldname erwartet",
  "ParagraphExpectedFieldName": "erwarteter Feldname",
  "ParagraphUnexpectedEndOfLine": "unerwartetes Zeilenende. Verwenden Sie als span-Element eine leere Zeile mithilfe von „  “.",
  "ParseControlErrorInfoInvalidFields": "Die folgenden Felder wurden nicht erwartet:",
  "ParseControlErrorInfoMissingFields": "Die folgenden Felder fehlten:",
  "ParseControlErrorInfoTypesEntry": "{value} wurde als {expected} erwartet",
  "ParseControlErrorInfoWhileLoading": "beim Laden von {path}:",
  "ParseControlErrorInfoWrongTypeFields": "Die folgenden Felder wiesen die falschen Typen auf:",
  "ParseIdentifierError": "„{value}“ ist kein gültiger Bezeichner. Bezeichner müssen aus alphanumerischen Kleinbuchstaben+Bindestrichen bestehen und dürfen nicht reserviert sein (weitere Informationen finden Sie unter {url}).",
  "ParsePackageNameError": "„{package_name}“ ist kein gültiger Paketname. Paketnamen müssen aus alphanumerischen Kleinbuchstaben+Bindestrichen bestehen und dürfen nicht reserviert sein (weitere Informationen finden Sie unter {url}).",
  "ParsePackagePatternError": "„{package_name}“ ist kein gültiges Paketmuster. Paketmuster dürfen nur ein Platzhalterzeichen (*) verwenden, und es muss das letzte Zeichen im Muster sein (weitere Informationen finden Sie unter {url}).",
  "PathMustBeAbsolute": "Der Wert der Umgebungsvariablen X_VCPKG_REGISTRIES_CACHE ist nicht absolut: {path}",
  "PerformingPostBuildValidation": "-- Durchführen der Validierung nach dem Build",
  "PortBugAllowRestrictedHeaders": "In Ausnahmefällen kann diese Richtlinie über {env_var} deaktiviert werden.",
  "PortBugBinDirExists": "In einem statischen Build sollte kein Verzeichnis \"bin\\\" vorhanden sein, aber \"{path}\" ist vorhanden.",
  "PortBugDebugBinDirExists": "In einem statischen Build sollte kein Verzeichnis \"debug\\bin\\\" vorhanden sein, aber {path} ist vorhanden.",
  "PortBugDebugShareDir": "/debug/share darf nicht vorhanden sein. Organisieren Sie alle wichtigen Dateien neu, und verwenden Sie\ndann \"file(REMOVE_RECURSE \"${{CURRENT_PACKAGES_DIR}}/debug/share\").",
  "PortBugDllAppContainerBitNotSet": "Das App Container-Bit muss für Windows Store-Apps festgelegt werden. Für die folgenden DLLs ist das App Container-Bit nicht festgelegt:",
  "PortBugDllInLibDir": "Die folgenden DLL-Dateien wurden in \"/lib\" oder \"/debug/lib\" gefunden. Verschieben Sie sie in \"/bin\" bzw. \"/debug/bin\".",
  "PortBugDuplicateIncludeFiles": "Includedateien dürfen nicht im Verzeichnis \"/debug/include\" dupliziert werden. Wenn dies im Projekt-Cmake nicht deaktiviert werden kann, verwenden Sie\nfile(REMOVE_RECURSE \"${{CURRENT_PACKAGES_DIR}}/debug/include\")",
  "PortBugFoundCopyrightFiles": "Die folgenden Dateien sind potenzielle Urheberrechtsdateien:",
  "PortBugFoundDebugBinaries": "{count} Debugbinärdateien gefunden:",
  "PortBugFoundDllInStaticBuild": "DLLs sollten nicht in einem statischen Build vorhanden sein, aber die folgenden DLLs wurden gefunden:",
  "PortBugFoundEmptyDirectories": "Es sollten keine leeren Verzeichnisse in {path} vorhanden sein. Die folgenden leeren Verzeichnisse wurden gefunden:",
  "PortBugFoundExeInBinDir": "Die folgenden EXEs wurden in \"/bin\" oder \"/debug/bin\" gefunden. EXEs sind keine gültigen Verteilungsziele.",
  "PortBugFoundReleaseBinaries": "{count} Releasebinärdateien gefunden:",
  "PortBugIncludeDirInCMakeHelperPort": "Der Ordner \"/include\" ist in einem Cmake-Hilfsprogrammport vorhanden. Dies ist falsch, da nur Cmake-Dateien installiert werden sollten.",
  "PortBugInspectFiles": "Verwenden Sie Folgendes, um die {extension}-Dateien zu überprüfen:",
  "PortBugInvalidCrtLinkage": "Die folgenden Binärdateien sollten die CRT „{expected}“ verwenden.",
  "PortBugInvalidCrtLinkageEntry": "{path} verbindet mit:",
  "PortBugKernel32FromXbox": "Das ausgewählte Triplet ist auf Xbox ausgerichtet, aber die folgenden DLLs sind mit kernel32 verknüpft. Diese DLLs können nicht auf Xbox geladen werden, wenn kernel32 nicht vorhanden ist. Dies wird in der Regel durch das Verknüpfen mit kernel32.lib und nicht durch eine geeignete Umbrella-Bibliothek verursacht, z. B. onecore_apiset.lib oder xgameplatform.lib.",
  "PortBugMergeLibCMakeDir": "Der Ordner „/lib/cmake“ sollte mit „/debug/lib/cmake“ zusammengeführt und nach „/share/{package_name}/cmake“ verschoben werden. Verwenden Sie die Hilfsfunktion „vcpkg_cmake_config_fixup()“ aus dem Port „vcpkg-cmake-config“.",
  "PortBugMismatchedNumberOfBinaries": "Die Anzahl der Debug- und Releasebinärdateien stimmt nicht überein.",
  "PortBugMisplacedCMakeFiles": "Die folgenden CMAKE-Dateien wurden außerhalb von \"/share/{spec}\" gefunden. Platzieren Sie cmake-Dateien in \"/share/{spec}\".",
  "PortBugMisplacedFiles": "Die folgenden Dateien werden in {path} abgelegt:",
  "PortBugMisplacedFilesCont": "Dateien können in diesen Verzeichnissen nicht vorhanden sein.",
  "PortBugMisplacedPkgConfigFiles": "pkgconfig-Verzeichnisse sollten eins von \"share/pkgconfig\" (nur für Headerbibliotheken), \"lib/pkgconfig\" oder \"lib/debug/pkgconfig\" sein. Die folgenden falsch eingefügten pkgconfig-Dateien wurden gefunden:",
  "PortBugMissingDebugBinaries": "Debugbinärdateien wurden nicht gefunden.",
  "PortBugMissingFile": "Die Datei \"/{path}\" ist nicht vorhanden. Diese Datei muss für CMake-Hilfsports vorhanden sein.",
  "PortBugMissingImportedLibs": "Importbibliotheken waren in {path} nicht vorhanden.\nWenn dies beabsichtigt ist, fügen Sie die folgende Zeile in der Portdatei hinzu:\nset(VCPKG_POLICY_DLLS_WITHOUT_LIBS aktiviert)",
  "PortBugMissingIncludeDir": "Der Ordner \"/include\" ist leer oder nicht vorhanden. Dies weist darauf hin, dass die Bibliothek nicht ordnungsgemäß installiert wurde.",
  "PortBugMissingLicense": "Die Softwarelizenz muss unter „${{CURRENT_PACKAGES_DIR}}/share/{package_name}/copyright“ verfügbar sein.",
  "PortBugMissingProvidedUsage": "Der Port hat „usage“ bereitgestellt, die Installation in „/share/{package_name}/usage“ jedoch vergessen. Fügen Sie der Portdatei die folgende Zeile hinzu:",
  "PortBugMissingReleaseBinaries": "Releasebinärdateien wurden nicht gefunden.",
  "PortBugMovePkgConfigFiles": "Sie können die pkgconfig-Dateien mit Befehlen wie den folgenden verschieben:",
  "PortBugOutdatedCRT": "Veraltete dynamische CRT in den folgenden Dateien erkannt:",
  "PortBugRemoveBinDir": "Wenn die Erstellung von \"bin\\\" und/oder \"debug\\bin\\\" nicht deaktiviert werden kann, verwenden Sie dies in der Portdatei, um sie zu entfernen.",
  "PortBugRemoveEmptyDirectories": "Wenn ein Verzeichnis aufgefüllt werden soll, aber nicht vorhanden ist, kann dies auf einen Fehler in der Portdatei hinweisen.\nWenn die Verzeichnisse nicht benötigt werden und ihre Erstellung nicht deaktiviert werden kann, entfernen Sie sie in der Portdatei zum Beispiel wie folgt:",
  "PortBugRemoveEmptyDirs": "file(REMOVE_RECURSE leere Verzeichnisse, die von den oben genannten Umbenennungen übrig bleiben)",
  "PortBugRestrictedHeaderPaths": "Die folgenden eingeschränkten Header können verhindern, dass die C++-Kernruntime und andere Pakete ordnungsgemäß kompiliert werden. In Ausnahmefällen kann diese Richtlinie über {env_var} deaktiviert werden.",
  "PortBugSetDllsWithoutExports": "DLLs ohne Exporte sind wahrscheinlich ein Fehler im Buildskript. Wenn dies beabsichtigt ist, fügen Sie die folgende Zeile in der Portdatei hinzu:\nset(VCPKG_POLICY_DLLS_WITHOUT_EXPORTS aktiviert)\nDie folgenden DLLs haben keine Exporte:",
  "PortDependencyConflict": "Port {package_name} weist die folgenden nicht unterstützten Abhängigkeiten auf:",
  "PortDoesNotExist": "{package_name} ist nicht vorhanden",
  "PortMissingManifest": "Das Paket {package_name} verfügt über keine vcpkg.json- oder CONTROL-Datei im Pfad {path}.",
  "PortNotInBaseline": "die Baseline enthält keinen Eintrag für Port {package_name}",
  "PortSupportsField": "(unterstützt: \"{supports_expression}\")",
  "PortVersionConflict": "Die folgenden Pakete unterscheiden sich von ihren Portversionen:",
  "PortVersionMultipleSpecification": "\"port_version\" kann nicht mit einem eingebetteten \"#\" in der Version kombiniert werden.",
  "PortsAdded": "Die folgenden {count} Ports wurden hinzugefügt:",
  "PortsDiffHelp": "Das Argument muss zum Auschecken ein Branch/Tag/Hash sein.",
  "PortsNoDiff": "Es wurden keine Änderungen an den Ports zwischen den beiden Commits vorgenommen.",
  "PortsRemoved": "Die folgenden {count} Ports wurden entfernt:",
  "PortsUpdated": "\nDie folgenden {count} Ports wurden entfernt:",
  "PrebuiltPackages": "Es gibt Pakete, die nicht erstellt wurden. Führen Sie die folgenden Ausführungen aus, um sie zu erstellen:",
  "PreviousIntegrationFileRemains": "Die vorherige Integrationsdatei wurde nicht entfernt.",
  "ProgramReturnedNonzeroExitCode": "Fehler bei {tool_name}. Exitcode: ({exit_code}).",
  "ProvideExportType": "Mindestens eine der folgenden Optionen ist erforderlich: --raw --nuget --ifw --zip --7zip --chocolatey --prefab.",
  "PushingVendorFailed": "Fehler beim Pushen von {vendor} nach „{path}“. Verwenden Sie „--debug“, um weitere Informationen zu erhalten.",
  "RegeneratesArtifactRegistry": "Generiert eine Artefaktregistrierung neu.",
  "RegistryCreated": "Die Registrierung wurde erfolgreich unter {path} erstellt",
  "RegistryValueWrongType": "Der Registrierungswert im Pfad {path} war ein unerwarteter Typ.",
  "RemoveDependencies": "Um Abhängigkeiten im Manifestmodus zu entfernen, bearbeiten Sie Ihr Manifest (vcpkg.json), und führen Sie „install“ aus.",
  "RemovePackageConflict": "{spec} ist nicht installiert, {package_name} ist jedoch für {triplet} installiert. Meinten Sie {package_name}:{triplet}?",
  "RemovingPackage": "{action_index}/{count} {spec} wird entfernt.",
  "ResponseFileCode": "@response_file",
  "RestoredPackagesFromAWS": "{count} Paket(e) wurde(n) von AWS in {elapsed} wiederhergestellt. Verwenden Sie „--debug\", um weitere Details anzuzeigen.",
  "RestoredPackagesFromCOS": "{count} Paket(e) wurde(n) von COS in {elapsed} wiederhergestellt. Verwenden Sie „--debug\", um weitere Details anzuzeigen.",
  "RestoredPackagesFromFiles": "{count} Paket(e) wurde(n) von {path} in {elapsed} wiederhergestellt. Verwenden Sie „--debug\", um weitere Details anzuzeigen.",
  "RestoredPackagesFromGCS": "{count} Paket(e) wurde(n) von GCS in {elapsed} wiederhergestellt. Verwenden Sie „--debug\", um weitere Details anzuzeigen.",
  "RestoredPackagesFromGHA": "{count} Paket(e) wurde(n) von GitHub Actions Cache in {elapsed} wiederhergestellt. Verwenden Sie „--debug\", um weitere Details anzuzeigen.",
  "RestoredPackagesFromHTTP": "{count} Paket(e) wurde(n) von HTTP-Servern in {elapsed} wiederhergestellt. Verwenden Sie „--debug\", um weitere Details anzuzeigen.",
  "RestoredPackagesFromNuGet": "{count} Paket(e) wurde(n) von NuGet in {elapsed} wiederhergestellt. Verwenden Sie „--debug\", um weitere Details anzuzeigen.",
  "ResultsHeader": "ERGEBNISSE",
  "ScriptAssetCacheRequiresScript": "Erwartete Argumente: Die Objektkonfiguration \"x-script\" erfordert genau die exec-Vorlage als Argument.",
  "SearchHelp": "Das Argument muss ein zu suchender substring und darf kein Argument sein, um alle Bibliotheken anzuzeigen.",
  "SecretBanner": "*** GEHEIMNIS ***",
  "SeeURL": "Weitere Informationen finden Sie unter {url}.",
  "SerializedBinParagraphHeader": "\nSerialisierter binärer Absatz",
  "SettingEnvVar": "-- Setzen der Umgebungsvariablen \"{env_var}\" auf \"{url}\".",
  "ShaPassedAsArgAndOption": "SHA512 wurde sowohl als Argument als auch als Option übergeben. Übergeben Sie nur eine dieser Optionen.",
  "ShaPassedWithConflict": "SHA512 erfolgreich, aber --skip-sha512 wurde ebenfalls übergeben. Führen Sie nur eine dieser Optionen aus.",
  "ShallowRepositoryDetected": "vcpkg wurde als flaches Repository geklont in: {path}\nWiederholen Sie den Vorgang mit einem vollständigen vcpkg-Klon.",
  "SkipClearingInvalidDir": "Das Löschen des Inhalts von {path} wird übersprungen, da es sich nicht um ein Verzeichnis handelte.",
  "SourceFieldPortNameMismatch": "Das Feld „Source“ innerhalb der CONTROL-Datei oder das Feld „name“ innerhalb der Datei „vcpkg.json“ weist den Namen „{package_name}“ auf und stimmt nicht mit dem Portverzeichnis „{path}“ überein.",
  "SpecifiedFeatureTurnedOff": "Das Feature '{command_name}' wurde speziell deaktiviert, aber --{option} wurde angegeben.",
  "SpecifyDirectoriesContaining": "Geben Sie Verzeichnisse an, die Tripletsdateien enthalten.\n(auch: '{env_var}')",
  "SpecifyDirectoriesWhenSearching": "Geben Sie Verzeichnisse an, die bei der Suche nach Ports verwendet werden sollen.\n(auch: '{env_var}')",
  "SpecifyHostArch": "Geben Sie das Triplet für die Hostarchitektur an. Siehe „vcpkg help triplet“.\n(Standard: „{env_var}“)",
  "SpecifyTargetArch": "Geben Sie das Triplet für die Zielarchitektur an. Siehe „vcpkg help triplet“.\n(Standard: „{env_var}“)",
  "StartCodeUnitInContinue": "Startcodeeinheit in Fortsetzungsposition gefunden",
  "StoreOptionMissingSha": "Die Option \"--store\" ist ohne sha512 ungültig.",
  "StoredBinariesToDestinations": "Gespeicherte Binärdateien in {count} Zielen in {elapsed}.",
  "StoredBinaryCache": "Gespeicherter binärer Cache: „{path}“",
  "SuccessfulyExported": "{package_name} nach {path} exportiert",
  "SuggestGitPull": "Das Ergebnis ist möglicherweise veraltet. Führen Sie \"git pull\" aus, um die neuesten Ergebnisse zu erhalten.",
  "SuggestResolution": "Um zu versuchen, alle Fehler gleichzeitig zu beheben, führen Sie Folgendes aus:\nvcpkg {command_name} --{option}",
  "SuggestStartingBashShell": "Stellen Sie sicher, dass Sie eine neue Bash-Shell gestartet haben, damit die Änderung wirksam wird.",
  "SuggestUpdateVcpkg": "Möglicherweise müssen Sie die vcpkg-Binärdatei aktualisieren. Versuchen Sie, {command_line} zum Aktualisieren auszuführen.",
  "SupportedPort": "Port {package_name} wird unterstützt.",
  "SwitchUsedMultipleTimes": "Der Schalter \"{option}\" wurde mehrmals angegeben.",
  "SystemApiErrorMessage": "Fehler beim Aufrufen von {system_api}. {exit_code} ({error_msg})",
  "SystemRootMustAlwaysBePresent": "Es wurde erwartet, dass die SystemRoot-Umgebungsvariable immer unter Windows festgelegt ist.",
  "SystemTargetsInstallFailed": "Fehler beim Installieren der Systemzieldatei {path}",
  "ToRemovePackages": "Um nur veraltete Pakete zu entfernen, führen Sie\n{command_name} \"–veraltet entfernen\" aus.",
  "ToUpdatePackages": "Führen Sie \n{command_name}-Upgrade aus, um diese Pakete und alle Abhängigkeiten zu aktualisieren.",
  "ToolFetchFailed": "{tool_name} konnte nicht abgerufen werden.",
  "ToolInWin10": "Dieses Hilfsprogramm ist mit Windows 10 oder höher gebündelt.",
  "ToolOfVersionXNotFound": "Eine geeignete Version von {tool_name} wurde nicht gefunden (v{version} erforderlich) und portierbare Version kann automatisch herunterladen werden. Installieren Sie eine neuere Version von {tool_name}.",
  "TotalInstallTime": "Gesamtinstallationszeit: {elapsed}",
  "TrailingCommaInArray": "Nachgestelltes Komma im Array",
  "TrailingCommaInObj": "Nachgestelltes Komma in einem Objekt",
  "TripletFileNotFound": "Die Tripletdatei \"{triplet}.cmake\" wurde nicht gefunden.",
  "TwoFeatureFlagsSpecified": "Sowohl „{value}“ als auch -“{value}“ wurden als Featurekennzeichen angegeben.",
  "UnableToClearPath": "{path} kann nicht gelöscht werden.",
  "UnableToReadAppDatas": "%LOCALAPPDATA% und %APPDATA% waren nicht lesbar.",
  "UnableToReadEnvironmentVariable": "{env_var} kann nicht gelesen werden.",
  "UndeterminedToolChainForTriplet": "Die Toolkettenverwendung für {triplet} mit CMAKE_SYSTEM_NAME {system_name} kann nicht ermittelt werden. Wollten Sie VCPKG_CHAINLOAD_TOOLCHAIN_FILE verwenden?",
  "UnexpectedArgument": "Unerwartetes Argument: {option}",
  "UnexpectedAssetCacheProvider": "Unbekannter Ressourcenanbietertyp: Gültige Quelltypen sind \"x-azurl\", \"x-script\", \"x-block-origin\" und \"clear\".",
  "UnexpectedByteSize": "Es wurde erwartet, dass {expected} Bytes geschrieben werden, aber {actual} wurden geschrieben.",
  "UnexpectedCharExpectedCloseBrace": "Unerwartetes Zeichen; Eigenschaft oder schließende geschweifte Klammer erwartet",
  "UnexpectedCharExpectedColon": "Unerwartetes Zeichen; Doppelpunkt erwartet",
  "UnexpectedCharExpectedComma": "Unerwartetes Zeichen; Komma oder schließende geschweifte Klammer erwartet",
  "UnexpectedCharExpectedName": "Unerwartetes Zeichen; Eigenschaftenname erwartet",
  "UnexpectedCharExpectedValue": "Unerwartetes Zeichen; Wert erwartet",
  "UnexpectedCharMidArray": "Unerwartetes Zeichen in der Mitte des Arrays",
  "UnexpectedCharMidKeyword": "Unerwartetes Zeichen in der Mitte des Schlüsselworts",
  "UnexpectedDigitsAfterLeadingZero": "Unerwartete Ziffern nach einer führenden Null",
  "UnexpectedEOFAfterBacktick": "Unerwartetes eof: Nachfolgende Backticks ohne Escapezeichen (') sind nicht zulässig.",
  "UnexpectedEOFAfterEscape": "Unerwartetes EOF nach Escapezeichen",
  "UnexpectedEOFAfterMinus": "Unerwartetes EOF nach Minuszeichen",
  "UnexpectedEOFExpectedChar": "Unerwartetes Zeichen; EOF erwartet",
  "UnexpectedEOFExpectedCloseBrace": "Unerwartetes EOF; Eigenschaft oder schließende geschweifte Klammer erwartet",
  "UnexpectedEOFExpectedColon": "Unerwartetes EOF; Doppelpunkt erwartet",
  "UnexpectedEOFExpectedName": "Unerwartetes EOF; Eigenschaftenname erwartet",
  "UnexpectedEOFExpectedProp": "Unerwartetes EOF; Eigenschaft erwartet",
  "UnexpectedEOFExpectedValue": "Unerwartetes EOF; Wert erwartet",
  "UnexpectedEOFMidArray": "Unerwartetes EOF in der Mitte des Arrays",
  "UnexpectedEOFMidKeyword": "Unerwartetes EOF in der Mitte des Schlüsselworts",
  "UnexpectedEOFMidString": "Unerwartetes EOF in der Mitte der Zeichenfolge",
  "UnexpectedEOFMidUnicodeEscape": "Unerwartetes Dateiende in der Mitte des Unicode-Escapezeichens",
  "UnexpectedErrorDuringBulkDownload": "Unerwarteter Fehler beim Massendownload.",
  "UnexpectedEscapeSequence": "Unerwartete Fortsetzung der Escapesequenz",
  "UnexpectedExtension": "Unerwartete Archiverweiterung: „{extension}“.",
  "UnexpectedFeatureList": "Unerwartete Featureliste",
  "UnexpectedField": "unerwartetes Feld \"{json_field}\"",
  "UnexpectedFieldSuggest": "unerwartetes Feld \"{json_field}\", meinten Sie \"{value}\"?",
  "UnexpectedFormat": "Das erwartete Format ist [{expected}], war aber [{actual}].",
  "UnexpectedOption": "Unerwartete Option: {option}",
  "UnexpectedPlatformExpression": "unerwarteter Plattformausdruck",
  "UnexpectedPortName": "Der Port {expected} wird als {actual} in {path} deklariert.",
  "UnexpectedPortversion": "Unerwartete \"port-version\" ohne Versionsverwaltungsfeld",
  "UnexpectedSwitch": "Unerwarteter Schalter: {option}",
  "UnexpectedToolOutput": "{tool_name} ({path}) hat beim Versuch, die Version zu bestimmen, eine unerwartete Ausgabe erzeugt:",
  "UnknownBaselineFileContent": "Nicht erkennbarer Baselineeintrag; erwartet \"port:triplet=(fail|skip)\".",
  "UnknownBinaryProviderType": "Unbekannter Binäranbietertyp: Gültige Anbieter sind \"clear\", \"default\", \"nuget\", \"nugetconfig\", \"nugettimeout\", \"interactive\", \"interactive\", \"x-azblob\", \"x-gcs\", \"x-aws\", \"x-aws-config\", \"http\" und \"files\"",
  "UnknownBooleanSetting": "unbekannte boolesche Einstellung für die Option {option}: „{value}“. Gültige Werte sind „,“, „1“, „0“, „ON“, „OFF“, „TRUE“ und „FALSE“.",
  "UnknownOptions": "Unbekannte(r) Option(n) für Befehl „{command_name}“:",
  "UnknownParameterForIntegrate": "Unbekannter Parameter „{value}“ für die Integration.",
  "UnknownPolicySetting": "Unbekannte Einstellung für Richtlinien-'{value}': {option}",
  "UnknownSettingForBuildType": "Unbekannte Einstellung für VCPKG_BUILD_TYPE {option}. Gültige Einstellungen sind „“, „debug“ und „release“.",
  "UnknownTool": "vcpkg verfügt nicht über eine Definition dieses Tools für diese Plattform.",
  "UnknownTopic": "Unbekannter Thementyp {Wert}",
  "UnknownVariablesInTemplate": "Ungültiges Argument: URL-Vorlage \"{value}\" enthält unbekannte Variablen: {list}",
  "UnrecognizedConfigField": "Die Konfiguration enthält die folgenden unbekannten Felder:",
  "UnrecognizedIdentifier": "Unbekannter Bezeichnername „{value}“. Zur Liste „Überschreiben“ in der Tripletdatei hinzufügen.",
  "UnsupportedFeature": "Das Feature {feature} wurde übergeben, aber dies ist kein Feature, das von {package_name} unterstützt wird.",
  "UnsupportedFeatureSupportsExpression": "{feature_spec} wird nur für den Ausdruck „{supports_expression}“ unterstützt, der nicht mit {triplet} übereinstimmt. Dies bedeutet in der Regel, dass beim Erstellen anderer Plattformen bekannte Buildfehler oder Laufzeitprobleme auftreten. Um dies zu ignorieren und dennoch zu versuchen, {package_name} zu erstellen, führen Sie vcpkg erneut mit „--allow-unsupported“ aus.",
  "UnsupportedFeatureSupportsExpressionWarning": "{feature_spec} wird nur für den Ausdruck „{supports_expression}“ unterstützt, der nicht mit {triplet} übereinstimmt. Dies bedeutet in der Regel, dass beim Erstellen anderer Plattformen bekannte Buildfehler oder Laufzeitprobleme auftreten. Der Vorgang wird trotzdem fortgesetzt, weil „--allow-unsupported“ angegeben ist.",
  "UnsupportedPort": "Port {package_name} wird nicht unterstützt.",
  "UnsupportedPortDependency": "- Abhängigkeits-{value} wird nicht unterstützt.",
  "UnsupportedShortOptions": "Kurze Optionen werden nicht unterstützt: „{value}“",
  "UnsupportedSyntaxInCDATA": "]]> wird im CDATA-Block nicht unterstützt.",
  "UnsupportedSystemName": "VCPKG_CMAKE_SYSTEM_NAME „{system_name}“ konnte keiner „vcvarsall“-Plattform zugeordnet werden. Unterstützte Systemnamen sind „Windows“ und „WindowsStore“.",
  "UnsupportedToolchain": "in Triplet {triplet}: Es wurde keine gültige Toolkette für die angeforderte Zielarchitektur „{arch}“ gefunden.\nDie ausgewählte Visual Studio-Instanz befindet sich unter: {path}\nDie verfügbaren Toolkettenkombinationen sind: {list}",
  "UnsupportedUpdateCMD": "der Updatebefehl unterstützt derzeit nicht den Manifestmodus. Ändern Sie stattdessen \"vcpkg.json\", und führen Sie die Installation aus.",
  "UpdateBaselineAddBaselineNoManifest": "der --{option}-Schalter wurde übergeben, aber es gibt keine Manifestdatei, der ein `builtin-baseline`-Feld hinzugefügt werden könnte.",
  "UpdateBaselineLocalGitError": "Git konnte HEAD nicht für die lokale vcpkg-Registrierung unter „{Pfad}“ analysieren.",
  "UpdateBaselineNoConfiguration": "Weder „vcpkg.json“ noch „vcpkg-configuration.json“ sind zum Aktualisieren vorhanden.",
  "UpdateBaselineNoExistingBuiltinBaseline": "die Manifest-Datei enthält derzeit kein `builtin-baseline`-Feld; Um eine hinzuzufügen, übergeben Sie den Schalter --{option}.",
  "UpdateBaselineNoUpdate": "Registry „{url}“ nicht aktualisiert: „{value}",
  "UpdateBaselineRemoteGitError": "Git konnte das Remote-Repository „{url}“ nicht abrufen",
  "UpdateBaselineUpdatedBaseline": "aktualisierte Registry „{url}“: Baseline „{old_value}“ -> „{new_value}“",
  "UpgradeInManifest": "Der Upgradebefehl unterstützt derzeit nicht den Manifestmodus. Ändern Sie stattdessen \"vcpkg.json\", und führen Sie die Installation aus.",
  "UpgradeRunWithNoDryRun": "Wenn Sie sicher sind, dass Sie die obigen Pakete neu erstellen möchten, führen Sie diesen Befehl mit der Option \"--no-dry-run\" aus.",
  "UploadedBinaries": "Binärdateien wurden in {count} {vendor} hochgeladen.",
  "UploadedPackagesToVendor": "{count} Pakete in {vendor} in {elapsed} hochgeladen",
  "UploadingBinariesToVendor": "Binärdateien für „{spec}“ werden in „{vendor}“-Quellpfad „{path}“ hochgeladen.",
  "UploadingBinariesUsingVendor": "Binärdateien für „{spec}“ werden mithilfe von „{vendor}“ nach „{path}“ hochgeladen.",
  "UseEnvVar": "-- Verwendung von {env_var} in Umgebungsvariablen.",
  "UserWideIntegrationDeleted": "Die benutzerweite Integration ist nicht installiert.",
  "UserWideIntegrationRemoved": "Die benutzerweite Integration wurde entfernt.",
  "UsingCommunityTriplet": "-- Verwendung von Community-Triplett {Triplett}. Der Erfolg dieser Triplet-Konfiguration ist nicht garantiert.",
  "UsingManifestAt": "Die Manifestdatei unter {path} wird verwendet.",
  "Utf8ConversionFailed": "Fehler beim Konvertieren in UTF-8",
  "VSExaminedInstances": "Die folgenden Visual Studio-Instanzen wurden berücksichtigt:",
  "VSExaminedPaths": "Die folgenden Pfade wurden für Visual Studio-Instanzen untersucht:",
  "VSNoInstances": "Es konnte keine vollständige Visual Studio-Instanz gefunden werden.",
  "VcpkgCeIsExperimental": "Vcpkg-artifacts ist experimentell und kann sich jederzeit ändern.",
  "VcpkgCommitTableHeader": "VCPKG-Commit",
  "VcpkgCompletion": "Die vcpkg {value}-Vervollständigung wurde bereits in Ihr „{path}“-Datei importiert.\nDie folgenden Einträge wurden gefunden:",
  "VcpkgDisallowedClassicMode": "Es wurde kein Manifest (vcpkg.json) über dem aktuellen Arbeitsverzeichnis gefunden.\nDiese „vcpkg“-Verteilung verfügt nicht über eine Instanz im klassischen Modus.",
  "VcpkgHasCrashed": "„vcpkg“ ist abgestürzt. Erstellen Sie unter „https://github.com/microsoft/vcpkg“ ein Problem, das eine kurze Zusammenfassung Ihrer Vorgehensweise und die folgenden Informationen enthält.",
  "VcpkgInVsPrompt": "vcpkg scheint sich in einer Visual Studio-Aufforderung zu befinden, die auf {value} abzielt, aber für {triplet} installiert wird. Verwenden Sie gegebenenfalls „--triplet {value}-windows“ oder „--triplet {value}-uwp“.",
  "VcpkgInvalidCommand": "Ungültiger Befehl: {command_name}",
  "VcpkgRegistriesCacheIsNotDirectory": "Der Wert der Umgebungsvariablen X_VCPKG_REGISTRIES_CACHE ist kein Verzeichnis: {path}",
  "VcpkgRootRequired": "Das Festlegen VCPKG_ROOT ist für den eigenständigen Bootstrap erforderlich.",
  "VcpkgRootsDir": "Geben Sie das vcpkg Stammverzeichnis für Downloads an.\n(Standard: „{env_var}“)",
  "VcpkgSendMetricsButDisabled": "--sendmetrics wurde übergeben, Metriken sind jedoch deaktiviert.",
  "VcvarsRunFailed": "Fehler beim Ausführen von \"vcvarsall.bat\", um eine Visual Studio-Umgebung abzurufen.",
  "VcvarsRunFailedExitCode": "beim Versuch, eine Visual Studio-Umgebung abzurufen, hat vcvarsall.bat \"{exit_code}\" zurückgegeben.",
  "VersionBaselineMismatch": "Die neueste Version ist {expected}, aber die Baselinedatei enthält {actual}.\nFühren Sie Folgendes aus:\nvcpkg x-add-version {package_name}\nGit-Add-Versionen\ngit commit -m \"Versionsdatenbank aktualisieren\"\nDadurch wird die Baselineversion aktualisiert.",
  "VersionBuiltinPortTreeEntryMissing": "kein Versionsdatenbankeintrag für das Paket {package_name} bei {expected}; mithilfe der Strukturversion der ausgecheckten Ports ({actual}).",
  "VersionCommandHeader": "Version des vcpkg-Paketverwaltungsprogramms {version}\n\nLizenzinformationen finden Sie unter LICENSE.txt.",
  "VersionConflictXML": "{path}-Version erwartet: [{expected_version}], war aber [{actual_version}]. Führen Sie bootstrap-vcpkg erneut aus.",
  "VersionConstraintPortVersionMustBePositiveInteger": "Portversion (nach \"#\") in \"version>=\" muss eine nicht negative ganze Zahl sein.",
  "VersionConstraintUnresolvable": "Eine Mindesteinschränkung für die Abhängigkeit des Pakets {package_name} aus {spec} kann nicht aufgelöst werden.\nDie Abhängigkeit wurde in der Baseline nicht gefunden. Dies weist darauf hin, dass das Paket zu diesem Zeitpunkt nicht vorhanden war. Dies kann behoben werden, indem mithilfe des Felds „Außerkraftsetzung“ eine explizite Außerkraftsetzungsversion bereitgestellt oder die Baseline aktualisiert wird.\nWeitere Informationen finden Sie unter „vcpkg-Hilfeversionsverwaltung“.",
  "VersionConstraintViolated": "Es wurde erwartet, dass die Abhängigkeit {spec} mindestens Version {expected_version} ist, sie ist derzeit aber {actual_version}.",
  "VersionDatabaseEntryMissing": "kein Versionseintrag für das Paket {package_name} mit Version {version}.",
  "VersionDatabaseFileMissing": "Dem Paket {package_name} fehlt eine Versionsdatenbankdatei im Pfad {path}.\nAusführen:\nvcpkg x-add-version {package_name}\num die Versionsdatei zu erstellen.",
  "VersionGitEntryMissing": "Kein Versionsdatenbankeintrag für das Paket {package_name} in der Version {version}.\nVerfügbare Versionen:",
  "VersionInDeclarationDoesNotMatch": "Die in der Datei deklarierte Version stimmt nicht mit der ausgecheckten Version überein: {version}",
  "VersionIncomparable1": "Versionskonflikt für {spec}: {constraint_origin} erfordert {expected}, der nicht mit der Baselineversion {actual} verglichen werden kann.",
  "VersionIncomparable2": "{version_spec} weist das Schema „{new_scheme}“ auf",
  "VersionIncomparable3": "Dies kann behoben werden, indem der bevorzugten Version eine explizite Außerkraftsetzung hinzugefügt wird, z. B.:",
  "VersionIncomparable4": "Weitere Informationen finden Sie unter „vcpkg help versioning“ oder {url}.",
  "VersionIncomparableSchemeString": "Beide Versionen haben eine Schemazeichenfolge, aber einen anderen primären Text.",
  "VersionIncomparableSchemes": "Die Versionen weisen nicht kompatible Schemas auf:",
  "VersionInvalidDate": "„{version}“ ist keine gültige Datumsversion. Datumsangaben müssen dem Format „JJJJ-MM-TT“ entsprechen, und Disambiguatoren müssen durch Punkte getrennte positive ganzzahlige Werte ohne führende Nullen sein.",
  "VersionInvalidRelaxed": "„{version}“ ist keine gültige gelockerte Version (SemVer mit beliebiger numerischer Elementanzahl).",
  "VersionInvalidSemver": "„{version}“ ist keine gültige semantische Version. Weitere Informationen finden Sie unter <https://semver.org>.",
  "VersionMissing": "Es wurde ein Versionsverwaltungsfeld erwartet (version, version-date, version-semver oder version-string).",
  "VersionMissingRequiredFeature": "{version_spec} verfügt nicht über die erforderliche Funktion {feature}, die von {constraint_origin} benötigt wird",
  "VersionNotFound": "{expected} nicht verfügbar. Es ist nur {actual} verfügbar.",
  "VersionNotFoundInVersionsFile": "Version {version} wurde in der Versionsdatei für {Paketname} nicht gefunden.\nAusführen:\nvcpkg x-add-version {Paket_name}\num die neue Portversion hinzuzufügen.",
  "VersionRejectedDueToBaselineMissing": "{path} wurde abgelehnt, weil er „{json_field}“ verwendet wird und keine integrierte Baseline aufweist. Dies kann behoben werden, indem die Verwendung von „{json_field}“ entfernt oder eine „integrierte Baseline“ hinzugefügt wird.\nWeitere Informationen finden Sie unter „Versionsverwaltung der vcpkg-Hilfe“.",
  "VersionRejectedDueToFeatureFlagOff": "{path} wurde abgelehnt, weil er „{json_field}“ verwendet wird und das Feature-Flag „versions“ deaktiviert ist. Dies kann behoben werden, indem „{json_field}“ entfernt oder das Feature-Flag „versions“ aktiviert wird.\nWeitere Informationen finden Sie unter „Versionsverwaltung der vcpkg-Hilfe“.",
  "VersionSchemeMismatch": "Die Versionsdatenbank deklariert die Version {version} als {expected}, der {path} deklariert sie jedoch als {actual}. Versionen müssen eindeutig sein, auch wenn sie mit unterschiedlichen Schemas deklariert sind.:\nFühren Sie Folgendes aus:\nvcpkg x-add-version {package_name} --overwrite-version\nDadurch wird das in der Versionsdatenbank deklarierte Schema mit dem im Port deklarierten Schema überschrieben.",
  "VersionShaMismatch": "Die Version {version} wird mit {expected} deklariert, aber der lokale Port verfügt über einen anderen SHA {actual}.\nAktualisieren Sie die Versionsfelder des Ports, und führen Sie dann Folgendes aus:\nvcpkg x-add-version {package_name}\ngit add versions\ngit commit -m \"Version der Datenbank aktualisieren\"\nDadurch wird die neue Version hinzugefügt.",
  "VersionShaMissing": "beim Überprüfen des Pakets {package_name}, Git SHA fehlt.\nFühren Sie folgendes aus:\ngit add \"{path}\"\ngit commit -m \"wip\"\nvcpkg x-add-version {package_name}\nGit-Add-Versionen\ngit commit --amend -m \"[{package_name}] Neuen Port hinzufügen\"\nDadurch werden ein Commit für den neuen Port ausgeführt und die zugehörige Versionsdatei erstellt.",
  "VersionSharpMustBeFollowedByPortVersion": "Auf \"#\" im Versionstext muss eine Portversion folgen.",
  "VersionSharpMustBeFollowedByPortVersionNonNegativeInteger": "Auf \"#\" im Versionstext muss eine Portversion folgen (eine nicht negative ganze Zahl).",
  "VersionSpecMismatch": "Fehler beim Laden des Ports, da die Versionen inkonsistent sind. Die Datei „{path}“ enthält die Version {actual_version}, aber die Versionsdatenbank gibt an, dass sie {expected_version} sein soll.",
  "VersionTableHeader": "Version",
  "VersionVerifiedOK": "OK: {version_spec} -> {commit_sha}",
  "WaitingForChildrenToExit": "Es wird auf das Beenden untergeordneter Prozesse gewartet...",
  "WaitingToTakeFilesystemLock": "Es wird auf die Sperre des Dateisystems für „{path}“ gewartet...",
  "WarnOnParseConfig": "In der Konfiguration {path} wurden die folgenden Warnungen gefunden:",
  "WarningMessage": "Warnung: ",
  "WarningMessageMustUsePrintWarning": "Die Nachricht mit dem Namen {value} beginnt mit „warning“: Sie muss so geändert werden, dass „WarningMessage“ stattdessen im Code vorangestellt wird.",
  "WarningsTreatedAsErrors": "vorherige Warnungen werden als Fehler interpretiert",
  "WhileCheckingOutBaseline": "beim Auschecken der Baseline \"{commit_sha}\".",
  "WhileCheckingOutPortTreeIsh": "beim Auschecken von Port {package_name} mit Git-Struktur {commit_sha}",
  "WhileGettingLocalTreeIshObjectsForPorts": "beim Abrufen lokaler Strukturobjekte für Ports",
  "WhileLoadingLocalPort": "beim Laden des lokalen Ports {package_name}",
  "WhileLoadingPortFromGitTree": "beim Laden des Ports von: {commit_sha}",
  "WhileLookingForSpec": "bei der Suche nach {spec}:",
  "WhileParsingVersionsForPort": "beim Parsen von Versionen für das Paket {package_name} aus {path}",
  "WhileValidatingVersion": "beim Überprüfen der Version: {version}",
  "WindowsOnlyCommand": "Dieser Befehl unterstützt nur Windows.",
  "WroteNuGetPkgConfInfo": "NuGet-Paketkonfigurationsinformationen wurden in {path} geschrieben.",
  "UnrecognizedCommand$": "Unbekannter Befehl \"${p0}\"",
  "Use$ToGetHelp": "${p0} verwenden, um Hilfe zu erhalten",
  "FatalTheRootFolder$CannotBeCreated": "Schwerwiegend: Der Stammordner \"${p0}\" kann nicht erstellt werden.",
  "FatalTheGlobalConfigurationFile$CannotBeCreated": "Schwerwiegend: Die globale Konfigurationsdatei \"${p0}\" kann nicht erstellt werden.",
  "VCPKGCOMMANDWasNotSet": "VCPKG_COMMAND wurde nicht festgelegt.",
  "RunningVcpkgInternallyReturnedANonzeroExitCode$": "Beim internen Ausführen von vcpkg wurde ein Exitcode ungleich 0 zurückgegeben: ${p0}",
  "failedToDownloadFrom$": "Fehler beim Herunterladen von ${p0}",
  "failedToDownload$FromAnySource": "Fehler beim Herunterladen von ${p0} aus einer beliebigen Quelle.",
  "ErrorParsingConditionalDemand$$": "Fehler beim Analysieren des bedingten Bedarfs \"${p0}\"- ${p1}",
  "MissingIdentity$": "Fehlende Identität \"${p0}\"",
  "infoidShouldBeOfTypestringFound$": "info.id muss vom Typ \"string\" sein, gefunden: \"${p0}\".",
  "MissingVersion$": "Fehlende Version \"${p0}\"",
  "infoversionShouldBeOfTypestringFound$": "info.version muss vom Typ \"string\" sein, gefunden: \"${p0}\".",
  "infosummaryShouldBeOfTypestringFound$": "info.summary muss vom Typ \"string\" sein, gefunden: \"${p0}\".",
  "infodescriptionShouldBeOfTypestringFound$": "info.description muss vom Typ \"string\" sein, gefunden wurde \"${p0}\".",
  "infooptionsShouldBeASequenceFound$": "info.options sollte eine Sequenz sein, gefunden wurde \"${p0}\".",
  "TheInfoBlockIsDeprecatedForConsistencyWithVcpkgjsonMoveInfoMembersToTheOutside": "Der Informationsblock ist aus Gründen der Konsistenz mit \"vcpkg.json\" veraltet. Infoelemente nach außen verschieben.",
  "idShouldBeOfTypestringFound$": "Die ID muss vom Typ \"string\" sein, gefunden wurde \"${p0}\".",
  "versionShouldBeOfTypestringFound$": "Die Version muss vom Typ \"string\" sein, gefunden wurde \"${p0}\".",
  "summaryShouldBeOfTypestringFound$": "Die Zusammenfassung muss vom Typ \"string\" sein, gefunden wurde \"${p0}\".",
  "descriptionShouldBeOfTypestringFound$": "Die Beschreibung muss vom Typ \"string\" sein, gefunden wurde \"${p0}\".",
  "optionsShouldBeASequenceFound$": "Die Optionen sollten eine Sequenz sein, gefunden wurde \"${p0}\".",
  "DuplicateKeysDetectedInManifest$": "Doppelte Schlüssel im Manifest erkannt: \"${p0}\"",
  "in$Skipping$BecauseItIsA$": "in ${p0} überspringt ${p1}, da es sich um ${p2} handelt.",
  "noPostscriptFileRerunWithTheVcpkgShellFunctionRatherThanExecutable": "keine Postscript-Datei: Führen Sie die Ausführung mit der vcpkg-Shellfunktion statt mit der ausführbaren Datei erneut aus.",
  "DuplicateDefine$DuringActivationNewValueWillReplaceOld": "Definieren Sie ${p0} während der Aktivierung doppelt. Der neue Wert ersetzt den alten Wert.",
  "DuplicateToolDeclared$DuringActivationNewValueWillReplaceOld": "Doppeltes Tool hat ${p0} während der Aktivierung deklariert.  Der neue Wert ersetzt den alten Wert.",
  "DuplicateAliasDeclared$DuringActivationNewValueWillReplaceOld": "Doppelter Alias wurde während der Aktivierung als ${p0} deklariert. Der neue Wert ersetzt den alten Wert.",
  "DuplicateLocationDeclared$DuringActivationNewValueWillReplaceOld": "Doppelter Speicherort wurde während der Aktivierung als ${p0} deklariert. Der neue Wert ersetzt den alten Wert.",
  "CircularVariableReferenceDetected$": "Zirkelvariablenverweis erkannt: ${p0}",
  "CircularVariableReferenceDetected$$": "Zirkelvariablenverweis erkannt: ${p0} – ${p1}",
  "VariableReferenceFound$$$ThatIsReferencingAnUnknownBaseObject": "Der Variablenverweis hat \"$${p0}.${p1}\" gefunden, der auf ein unbekanntes Basisobjekt verweist.",
  "UnresolvedVariableReferenceFound$$$DuringVariableSubstitution": "Während der Variablenersetzung wurde ein nicht aufgelöster Variablenverweis gefunden ($${p0}.${p1}).",
  "InvalidPathDoesNotExist$": "Ungültiger Pfad – nicht vorhanden: ${p0}",
  "Activating$": "Wird aktiviert: ${p0}",
  "Deactivating$": "Deaktivieren: ${p0}",
  "nothingIsActivatedNoChangesHaveBeenMade": "Nichts ist aktiviert. Es wurden keine Änderungen vorgenommen.",
  "InvalidArtifactId$": "Ungültige Artefakt-ID \"${p0}\".",
  "UnknownInstallerType$": "Unbekannter Installertyp ${p0}",
  "WhileResolvingDependenciesOf$$In$CouldNotBeResolvedToARegistry": "Beim Auflösen von Abhängigkeiten von ${p0} konnte ${p1} in ${p2} nicht in eine Registrierung aufgelöst werden.",
  "WhileResolvingDependenciesOfTheProjectFile$$DidNotSpecifyARegistry": "Beim Auflösen von Abhängigkeiten der Projektdatei ${p0} hat ${p1} keine Registrierung angegeben.",
  "UnableToResolveDependency$In$": "Die Abhängigkeit \"${p0}\" in \"${p1}\" kann nicht aufgelöst werden.",
  "Artifact": "Artefakt",
  "Version": "Version",
  "Status": "Status",
  "Dependency": "Abhängigkeit",
  "Summary": "Zusammenfassung",
  "progressUnknown": "(Status unbekannt)",
  "verifying": "Wird überprüft",
  "downloading$$": "${p0} -> ${p1} wird heruntergeladen.",
  "unpacking": "Auspacken",
  "unpacking$": "${p0} wird entpackt.",
  "Installing$": "${p0} wird installiert...",
  "$AlreadyInstalled": "${p0} ist bereits installiert.",
  "Downloading$": "${p0} wird heruntergeladen...",
  "Unpacking$": "${p0} wird entpackt...",
  "ErrorInstalling$$": "Fehler beim Installieren von ${p0} – ${p1}",
  "ExpectedASingleValueFor$FoundMultiple": "Es wurde ein einzelner Wert für ${p0} erwartet. Es wurden mehrere gefunden.",
  "Synopsis": "Synopsis",
  "Description": "Beschreibung",
  "Switches": "Schalter",
  "SeeAlso": "Siehe auch",
  "error": "Fehler:",
  "warning": "Warnung:",
  "ExpectedASingleValueFor$": "Es wurde ein einzelner Wert für \"--${p0}\" erwartet.",
  "Assuming$IsCorrectSupplyAHashInTheArtifactMetadataToSuppressThisMessage": "Angenommen, \"${p0}\" ist richtig; geben Sie einen Hash in den Artefaktmetadaten an, um diese Nachricht zu unterdrücken.",
  "DownloadedFile$DidNotHaveTheCorrectHash$$": "Die heruntergeladene Datei \"${p0}\" hat nicht den richtigen Hash (${p1}: ${p2}) ",
  "packageReference$IsNotAValidNugetPackageReferencenameversion": "Der Paketverweis \"${p0}\" ist kein gültiger NuGet-Paketverweis ({name}/{version}).",
  "statsMayNotBeUndefined": "Statistiken sind möglicherweise nicht undefiniert.",
  "CannotRenameFilesAcrossFilesystems": "Dateien können nicht dateisystemübergreifend umbenannt werden.",
  "CopyFailedSource$IsAFolderTarget$IsAFile": "Fehler beim Kopieren: Die Quelle (${p0}) ist ein Ordner, das Ziel (${p1}) ist eine Datei.",
  "UriMayNotBeEmpty": "Der URI darf nicht leer sein.",
  "scheme$AlreadyRegistered": "Schema \"${p0}\" bereits registriert",
  "uri$HasNoScheme": "URI ${p0} hat kein Schema",
  "scheme$HasNoFilesystemAssociatedWithIt": "Dem Schema \"${p0}\" ist kein Dateisystem zugeordnet.",
  "mayNotRenameAcrossFilesystems": "kann nicht über Dateisysteme hinweg umbenannt werden.",
  "CouldNotActivateEspidfPythonWasNotFound": "Esp-idf konnte nicht aktiviert werden: Python wurde nicht gefunden.",
  "GitIsNotInstalled": "Git ist nicht installiert.",
  "InitializingRepositoryFolder": "Repositoryordner wird initialisiert",
  "FailedToInitializeGitRepositoryFolder$": "Fehler beim Initialisieren des Git-Repositoryordners (${p0}).",
  "AddingRemote$ToGitRepositoryFolder": "Remote-${p0} wird zum Git-Repositoryordner hinzugefügt",
  "FailedToSetGitOrigin$InFolder$": "Fehler beim Festlegen des Git-Ursprungs (${p0}) im Ordner (${p1})",
  "FetchingRemote$ForGitRepositoryFolder": "Der Remoteordner \"${p0}\" für das Git-Repository wird abgerufen.",
  "UnableToFetchGitDataFor$InFolder$": "Git-Daten für (${p0}) können nicht im Ordner (${p1}) abgerufen werden.",
  "CheckingOutCommit$For$ToGitRepositoryFolder": "Commit ${p0} für ${p1} im Git-Repositoryordner wird ausgecheckt",
  "UnableToCheckoutDataFor$InFolder$": "Die Daten für (${p0}) im Ordner \"${p1}\" können nicht ausgecheckt werden.",
  "UpdatingSubmodulesForRepository$InTheGitRepositoryFolder": "Submodule für Repository \"${p0}\" werden im Git-Repositoryordner aktualisiert.",
  "UnableToSetSubmoduleShallowDataFor$InFolder$": "Flache Submoduledaten für (${p0}) können nicht im Ordner (${p1}) festgelegt werden.",
  "UnableUpdateSubmodulesFor$InFolder$": "Submodule für (${p0}) im Ordner (${p1}) können nicht aktualisiert werden.",
  "ExpectedCommaFound$": "Komma erwartet, ${p0} gefunden",
  "ExpectedOneOfNumberBooleanIdentifierStringFoundToken$": "Es wurde eine von {Number, Boolean, Identifier, String} erwartet, Token ${p0} gefunden.",
  "ExpressionSpecifiedNOTTwice": "Ausdruck NICHT zweimal angegeben",
  "ExpectedCloseParenthesisForExpressionFound$": "Schließende Klammer für Ausdruck erwartet, ${p0} gefunden",
  "ExpectedExpressionFound$": "Erwarteter Ausdruck, ${p0} gefunden",
  "ParseErrorDigitExpected": "ParseError: Ziffer erwartet (0-9)",
  "ParseErrorHexDigitExpectedFf": "ParseError: Hexadezimale Ziffer erwartet (0-F,0-f)",
  "ParseErrorBinaryDigitExpected": "ParseError: Binärziffer erwartet (0,1)",
  "UnexpectedEndOfFileWhileSearchingFor$": "Unerwartetes Dateiende bei der Suche nach \"${p0}\".",
  "InvalidEscapeSequence": "Ungültige Escapesequenz",
  "FailedToDeserializeIndex$": "Fehler beim Deserialisieren des Index ${p0}",
  "$MatchedMoreThanOneResult$": "\"${p0}\" stimmte mit mehreren Ergebnissen überein (${p1}).",
  "UnsupportedRegistryScheme$": "Nicht unterstütztes Registrierungsschema \"${p0}\"",
  "TriedToAdd$As$But$IsAlready$": "Es wurde versucht, ${p0} als ${p1} hinzuzufügen, ${p2} ist jedoch bereits ${p3}.",
  "UnknownRegistry$in$TheFollowingAreKnown$": "Unbekannte Registrierung ${p0} (in ${p1}). Folgendes ist bekannt: ${p2}",
  "UpdatingRegistryDataFrom$": "Registrierungsdaten von ${p0} werden aktualisiert.",
  "$MustBeAString": "${p0} muss eine Zeichenfolge sein.",
  "$MustBeABool": "${p0} muss ein boolescher Wert sein.",
  "$MustBeAnArrayOfStringsOrUnset": "${p0} muss ein Array von Zeichenfolgen sein oder die Festlegung aufheben.",
  "FoundAMismatched$In$ForALiteral$Use$$Instead": "Es wurde ein nicht übereinstimmender ${p0} in \"${p1}\" gefunden. Verwenden Sie für ein Literal ${p2} stattdessen ${p3}${p4}.",
  "CouldNotFindAValueFor$In$ToWriteTheLiteralValueUse$Instead": "Es wurde kein Wert für {${p0}} in \"${p1}\" gefunden. Verwenden Sie stattdessen \"{{${p2}}}\", um den Literalwert zu schreiben.",
  "MatchedMoreThanOneInstallBlock$": "Mehrere Installationsblöcke wurden abgeglichen [${p0}]",
  "AcquiresEverythingReferencedByAProjectWithoutActivating": "Ruft alles ab, auf das von einem Projekt verwiesen wird, ohne zu aktivieren",
  "ThisAllowsTheConsumerToPredownloadToolsRequiredForAProject": "Dies ermöglicht dem Consumer das Vorabdownloaden von Tools, die für ein Projekt erforderlich sind.",
  "UnableToFindProjectInFolderorParentFoldersFor$": "Projekt in Ordner (oder übergeordneten Ordnern) für ${p0} nicht gefunden",
  "UnableToAcquireProject": "Das Projekt kann nicht abgerufen werden.",
  "AcquireArtifactsInTheRegistry": "Artefakte in der Registrierung abrufen",
  "ThisAllowsTheConsumerToAcquiredownloadAndUnpackArtifactsArtifactsMustBeActivatedToBeUsed": "Dadurch kann der Consumer Artefakte abrufen (herunterladen und entpacken). Artefakte müssen aktiviert werden, damit sie verwendet werden können.",
  "NoArtifactsSpecified": "Es wurden keine Artefakte angegeben.",
  "MultiplePackagesSpecifiedButNotAnEqualNumberOf$Switches": "Es wurden mehrere Pakete angegeben, aber nicht die gleiche Anzahl von ${p0}-Switches.",
  "NoArtifactsAreAcquired": "Es werden keine Artefakte abgerufen.",
  "AllArtifactsAreAlreadyInstalled": "Alle Artefakte sind bereits installiert.",
  "$ArtifactsInstalledSuccessfully": "${p0} Artefakte erfolgreich installiert",
  "InstallationFailedStopping": "Fehler bei der Installation -- wird beendet",
  "ActivatesTheToolsRequiredForAProject": "Aktiviert die für ein Projekt erforderlichen Tools.",
  "ThisAllowsTheConsumerToActivateTheToolsRequiredForAProjectIfTheToolsAreNotAlreadyInstalledThisWillForceThemToBeDownloadedAndInstalledBeforeActivation": "Dadurch kann der Consumer die für ein Projekt erforderlichen Tools aktivieren. Wenn die Tools noch nicht installiert sind, wird erzwungen, dass sie vor der Aktivierung heruntergeladen und installiert werden.",
  "AddsAnArtifactToTheProject": "Fügt dem Projekt ein Artefakt hinzu.",
  "ThisAllowsTheConsumerToAddAnArtifactToTheProjectThisWillActivateTheProjectAsWell": "Dadurch kann der Consumer dem Projekt ein Artefakt hinzufügen. Dadurch wird auch das Projekt aktiviert.",
  "MultipleArtifactsSpecifiedButNotAnEqualNumberOf$Switches": "Es wurden mehrere Artefakte angegeben, aber nicht die gleiche Anzahl von ${p0}-Schaltern.",
  "TriedToAddAnArtifact$$ButCouldNotDetermineTheRegistryToUse": "Es wurde versucht, [${p0}]:${p1} ein Artefakt hinzuzufügen, die zu verwendende Registrierung konnte jedoch nicht bestimmt werden.",
  "TriedToAddRegistry$As$ButItWasAlready$PleaseAdd$ToThisProjectManuallyAndReattempt": "Es wurde versucht, die Registrierung ${p0} als ${p1} hinzuzufügen, aber es war bereits ${p2}. Fügen Sie ${p3} diesem Projekt manuell hinzu, und versuchen Sie es erneut.",
  "RunvcpkgActivateToApplyToTheCurrentTerminal": "Führen Sie \"vcpkg activate\\\" aus, um es auf das aktuelle Terminal anzuwenden.",
  "ManagesTheDownloadCache": "Verwaltet den Downloadcache.",
  "DownloadsFolderCleared$": "Ordner \"Downloads\" gelöscht (${p0}) ",
  "cleansOutEverythingcacheInstalledArtifacts": "bereinigt alles (Cache, installierte Artefakte)",
  "cleansOutTheDownloadsCache": "bereinigt den Downloadcache.",
  "removesAllTheArtifactsThatAreInstalled": "entfernt alle installierten Artefakte.",
  "cleansUp": "bereinigt",
  "AllowsTheUserToCleanOutTheCacheInstalledArtifactsEtc": "Ermöglicht dem Benutzer das Bereinigen des Caches, der installierten Artefakte usw.",
  "InstalledArtifactFolderCleared$": "Installierter Artefaktordner gelöscht (${p0}) ",
  "CacheFolderCleared$": "Cacheordner gelöscht (${p0}) ",
  "DeactivatesTheCurrentSession": "Deaktiviert die aktuelle Sitzung.",
  "ThisAllowsTheConsumerToRemoveEnvironmentSettingsForTheCurrentlyActiveSession": "Dadurch kann der Consumer Umgebungseinstellungen für die aktuell aktive Sitzung entfernen.",
  "DeletesAnArtifactFromTheArtifactFolder": "Löscht ein Artefakt aus dem Artefaktordner.",
  "ThisAllowsTheConsumerToRemoveAnArtifactFromDisk": "Dadurch kann der Consumer ein Artefakt vom Datenträger entfernen.",
  "DeletingArtifact$From$": "Artefakt ${p0} wird aus ${p1} gelöscht",
  "FindArtifactsInTheRegistry": "Suchen von Artefakten in der Registrierung",
  "ThisAllowsTheUserToFindArtifactsBasedOnSomeCriteria": "Dies ermöglicht dem Benutzer, Artefakte basierend auf einigen Kriterien zu finden.",
  "NoArtifactsFoundMatchingCriteria$": "Es wurden keine Artefakte gefunden, die den Kriterien entsprechen: ${p0}",
  "GeneratesMSBuildPropertiesForAnActivationWithoutDownloadingAnythingForAProject": "Generiert MSBuild-Eigenschaften für eine Aktivierung, ohne etwas für ein Projekt herunterzuladen.",
  "generatemsbuildpropsRequiresmsbuildprops": "generate-msbuild-props erfordert \"--msbuild-props\".",
  "UnableToActivateProject": "Das Projekt kann nicht aktiviert werden.",
  "theNameOfTheCommandForWhichYouWantHelp": "der Name des Befehls, für den Sie Hilfe benötigen",
  "getHelpOn$OrOneOfTheCommands": "Hilfe zu ${p0} oder einem der Befehle erhalten",
  "GetsDetailedHelpOn$OrOneOfTheCommands": "Ruft ausführliche Hilfe zu ${p0} oder einem der Befehle ab.",
  "Arguments": "Argumente:",
  "Use$ToGetTheListOfAvailableCommands": "Verwenden Sie ${p0}, um die Liste der verfügbaren Befehle abzurufen.",
  "Usage": "Verwendung",
  "$COMMANDargumentsswitches": "${p0} BEFEHL <arguments> [--switches]",
  "Available$Commands": "Verfügbare ${p0}-Befehle:",
  "ListsTheArtifacts": "Listet die Artefakte auf.",
  "ThisAllowsTheConsumerToListArtifacts": "Dadurch kann der Consumer Artefakte auflisten.",
  "regenerateTheIndexForARegistry": "Neugenerieren des Index für eine Registrierung",
  "ThisAllowsTheUserToRegenerateThe$FilesForA$Registry": "Dadurch kann der Benutzer die ${p0}-Dateien für eine ${p1}-Registrierung erneut generieren.",
  "RegeneratingIndexFor$": "Der Index für ${p0} wird neu generiert.",
  "RegenerationCompleteIndexContains$MetadataFiles": "Die Erneute Generierung ist abgeschlossen. Der Index enthält ${p0} Metadatendateien.",
  "Registry$ContainsNoArtifacts": "Registrierung: \"${p0}\" enthält keine Artefakte.",
  "error$": "Fehler ${p0}: ",
  "RemovesAnArtifactFromAProject": "Entfernt ein Artefakt aus einem Projekt.",
  "ThisAllowsTheConsumerToRemoveAnArtifactFromTheProjectForcesReactivationInThisWindow": "Dadurch kann der Consumer ein Artefakt aus dem Projekt entfernen. Erzwingt die Reaktivierung in diesem Fenster.",
  "Removing$FromProjectManifest": "${p0} wird aus Projektmanifest entfernt.",
  "unableToFindArtifact$InTheProjectManifest": "Das Artefakt \"${p0}\" wurde im Projektmanifest nicht gefunden.",
  "Updated$ItContains$MetadataFiles": "${p0} aktualisiert. Enthält ${p1}-Metadatendateien.",
  "UnableToDownload$": "${p0} konnte nicht heruntergeladen werden.",
  "$CouldNotBeUpdatedItCouldBeMalformed": "${p0} konnte nicht aktualisiert werden und ist möglicherweise falsch formatiert.",
  "updateTheRegistryFromTheRemote": "Registrierung über die Remoteverbindung aktualisieren",
  "ThisDownloadsTheLatestContentsOfTheRegistryFromTheRemoteService": "Dadurch werden die neuesten Inhalte der Registrierung vom Remotedienst heruntergeladen.",
  "TheXupdateregistryCommandDownloadsNewRegistryInformationAndThusCannotBeUsedWithLocalRegistriesDidYouMeanXregenerate$": "Der Befehl „x-update-registry“ lädt neue Registrierungsinformationen herunter und kann daher nicht mit lokalen Registrierungen verwendet werden. Meinten Sie „x-regenerate ${p0}“?",
  "UnableToFindRegistry$": "Die Registrierung ${p0} wurde nicht gefunden.",
  "InstantlyActivatesAnArtifactOutsideOfTheProject": "Aktiviert sofort ein Artefakt außerhalb des Projekts",
  "ThisWillInstantlyActivateAnArtifact": "Dadurch wird sofort ein Artefakt aktiviert.",
  "NoArtifactsAreBeingAcquired": "Es werden keine Artefakte abgerufen.",
  "UpdateAllKnownArtifactRegistries": "Alle bekannten Artefaktregistrierungen aktualisieren",
  "removesAllFilesInTheLocalCache": "entfernt alle Dateien im lokalen Cache.",
  "enablesDebugModeDisplaysInternalMesssagesAboutHow$Works": "aktiviert den Debugmodus, zeigt interne Fehler zur Funktionsweise von ${p0} an.",
  "proceedsWithThepotentiallyDangerousActionWithoutConfirmation": "fährt ohne Bestätigung mit der (potenziell gefährlichen) Aktion fort.",
  "showsTheinstalledArtifacts": "zeigt die _installed_-Artefakte an.",
  "DumpEnvironmentVariablesAndOtherPropertiesToAJsonFileWithThePathProvidedByTheUser": "Sichern Sie Umgebungsvariablen und andere Eigenschaften in einer JSON-Datei mit dem vom Benutzer angegebenen Pfad.",
  "FullPathToTheFileInWhichMSBuildPropertiesWillBeWritten": "Vollständiger Pfad zu der Datei, in die MSBuild-Eigenschaften geschrieben werden.",
  "ApplyAnyDeprecationFixups": "Reparaturen aller veralteten Funktionen anwenden.",
  "overrideThePathToTheProjectFolder": "Überschreiben des Pfads zum Projektordner",
  "UnableToFindProjectEnvironment$": "Die Projektumgebung \"${p0}\" wurde nicht gefunden.",
  "enablesVerboseModeDisplaysVerboseMesssagesAboutTheProcess": "aktiviert den ausführlichen Modus, zeigt ausführliche Meldungen zum Prozess an.",
  "aVersionOrVersionRangeToMatch": "eine Version oder ein Versionsbereich, der übereinstimmen soll"
}
