{
  "AddArtifactOnlyOne": "'{command_line}' ne pouvez ajouter qu’un seul artefact à la fois.",
  "AddFirstArgument": "Le premier argument de '{command_line}' doit être 'artifact' ou 'port'.\n",
  "AddPortRequiresManifest": "'{command_line}' requiert un fichier manifeste actif.",
  "AddPortSucceded": "L’ajout de ports au fichier vcpkg.json a réussi.",
  "AddTripletExpressionNotAllowed": "Erreur : les expressions triplet ne sont pas autorisées ici. Vous pouvez remplacer '{package_name}:{triplet}' par '{package_name}' à la place.",
  "AllFormatArgsRawArgument": "la chaîne de format \"{value}\" contient un argument de format brut.",
  "AllFormatArgsUnbalancedBraces": "accolade non équilibré dans la chaîne de format \"{value}\"",
  "AwsAttemptingToFetchPackages": "Tentative de récupération des packages {count} à partir d’AWS",
  "AwsFailedToDownload": "aws n’a pas pu être téléchargé avec le code de sortie : {exit_code}.",
  "AwsRestoredPackages": "Packages {count} restaurés à partir de serveurs AWS dans {elapsed}",
  "AwsUploadedPackages": "Fichiers binaires chargés sur {count} serveurs AWS",
  "BothYesAndNoOptionSpecifiedError": "erreur : impossible de spécifier à la fois --no-{option} et --{option}",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "Téléchargé",
  "BuildResultExcluded": "Exclu",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultSucceeded": "OPÉRATION RÉUSSIE",
  "BuildResultSummaryHeader": "RÉSUMÉ DE {triplet}",
  "BuildResultSummaryLine": "    {build_result}: {count}",
  "BuildingPackageFailed": "building {spec} failed with: {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "due to the following missing dependencies:",
  "ChecksFailedCheck": "vcpkg s’est bloqué; aucun détail supplémentaire n’est disponible.",
  "ChecksLineInfo": "{vcpkg_line_info}: ",
  "ChecksUnreachableCode": "code inaccessible atteint",
  "ChecksUpdateVcpkg": "la mise à jour de vcpkg en réexécutant bootstrap-vcpkg peut résoudre cet échec.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing ne peut être utilisé que si une ligne de base est fournie via --ci-baseline.",
  "CiBaselineRegression": "RÉGRESSION : {spec} a échoué avec {build_result}. Si prévu, ajoutez {spec}=échec de la {path}.",
  "CiBaselineRegressionHeader": "RÉGRESSIONS :",
  "CiBaselineUnexpectedPass": "RÉUSSITE, SUPPRESSION DE LA LISTE D’ÉCHEC : {spec} ({path}).",
  "CmakeTargetLinkLibraries": "    target_link_libraries(main PRIVATE {list})",
  "CmakeTargetsExcluded": "    # Remarque : {count} cibles ont été omises.",
  "CouldNotDeduceNugetIdAndVersion": "Impossible de déduire l’ID nuget et la version à partir du nom de fichier : {path}",
  "CurlReportedUnexpectedResults": "curl a signalé des résultats inattendus à vcpkg et vcpkg ne peut pas continuer.\nConsultez le texte suivant pour obtenir des informations sensibles et ouvrez un problème sur Microsoft/vcpkg GitHub pour vous aider à résoudre ce problème !\ncmd : {command_line}\n=== sortie de boucle ===\n{actual}\n=== end curl output ===\n",
  "DownloadingVcpkgCeBundle": "Téléchargement du bundle vcpkg-ce {version}...",
  "DownloadingVcpkgCeBundleLatest": "Téléchargement du dernier bundle vcpkg-ce...",
  "EmptyLicenseExpression": "L’expression de licence SPDX était vide.",
  "ErrorIndividualPackagesUnsupported": "Erreur : En mode manifeste, `vcpkg install` ne supporte pas les arguments individuels des paquets. \nPour installer des paquets supplémentaires, éditez vcpkg.json et exécutez ensuite `vcpkg install` sans aucun argument de paquet.",
  "ErrorInvalidClassicModeOption": "Erreur : l’option --{option} n’est pas prise en charge en mode classique et aucun manifeste n’a été trouvé.",
  "ErrorInvalidManifestModeOption": "Erreur : l’option --{option} n’est pas prise en charge en mode manifeste.",
  "ErrorMessage": "erreur : ",
  "ErrorMissingVcpkgRoot": "Erreur : impossible de détecter vcpkg-root. Si vous essayez d’utiliser une copie de vcpkg que vous avez créée, vous devez définir la variable d’environnement VCPKG_ROOT pour qu’elle pointe vers une copie clonée de {url}.",
  "ErrorNoVSInstance": "Erreur : dans le {triplet} triplet : instance de Visual Studio valide introuvable",
  "ErrorNoVSInstanceAt": "     à \"{path}\"",
  "ErrorNoVSInstanceFullVersion": "    avec le préfixe de version de l’ensemble d’outils {version}",
  "ErrorNoVSInstanceVersion": "    avec {version} de version de l’ensemble d’outils",
  "ErrorRequireBaseline": "Erreur : cette instance de vcpkg nécessite un manifeste avec une ligne de base spécifiée afin d'interagir avec les ports. Veuillez ajouter 'builtin-baseline' au manifeste ou ajouter un fichier 'vcpkg-configuration.json' qui redéfinit le registre par défaut. \n",
  "ErrorRequirePackagesList": "Erreur : « vcpkg install » nécessite une liste de packages à installer en mode classique.",
  "ErrorRequirePackagesToInstall": "Erreur : aucun package n’a été répertorié pour l’installation et aucun manifeste n’a été trouvé.",
  "ErrorVcvarsUnsupported": "Erreur : dans triplet {triplet} : l’utilisation de l’invite développeur de Visual Studio n’est pas prise en charge sur les ordinateurs hôtes non Windows.\nDéfinissez 'VCPKG_CMAKE_SYSTEM_NAME' ou 'VCPKG_CHAINLOAD_TOOLCHAIN_FILE' dans le fichier triplet.",
  "ExpectedCharacterHere": "'{expected}' attendu ici",
  "ExpectedFailOrSkip": "'échec' ou 'ignorer' attendu ici",
  "ExpectedPortName": "nom de port attendu ici",
  "ExpectedTripletName": "nom triplet attendu ici",
  "FailedToProvisionCe": "Échec de l’approvisionnement de vcpkg-ce",
  "ForceSystemBinariesOnWeirdPlatforms": "La variable d'environnement VCPKG_FORCE_SYSTEM_BINARIES doit être définie sur les plateformes arm, s390x, et ppc64le.",
  "FormattedParseMessageExpression": "    sur l’expression : {value}",
  "GenerateMsgErrorParsingFormatArgs": "erreur : analyse de la chaîne de format pour {value} :",
  "GenerateMsgIncorrectComment": "message {value} comporte un commentaire incorrect :",
  "GenerateMsgNoArgumentValue": "    {{{value}}} a été spécifié dans un commentaire, mais n’a pas été utilisé dans le message.",
  "GenerateMsgNoCommentValue": "    {{{value}}} a été utilisé dans le message, mais n’a pas fait de commentaire.",
  "GraphCycleDetected": "Cycle détecté dans le graphique à {package_name} :",
  "GraphCycleDetectedElement": "    {package_name}",
  "HashFileFailureToRead": "impossible de lire le '{path}' du fichier pour le hachage : {error}",
  "IllegalFeatures": "erreur : la liste des fonctionnalités n’est pas autorisée dans ce dossier.",
  "IllegalPlatformSpec": "erreur : le qualificateur de plateforme n’est pas autorisé dans ce contexte.",
  "InternalErrorMessage": "Erreur interne :",
  "InternalErrorMessageContact": "Ouvrez un problème à https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug avec des étapes détaillées pour reproduire le problème.",
  "LicenseExpressionContainsExtraPlus": "L'expression de la licence SPDX contient un '+' supplémentaire. Ceux-ci ne sont autorisés que directement après un identifiant de licence.",
  "LicenseExpressionContainsInvalidCharacter": "L’expression de licence SPDX contient un caractère non valide (0x{value:02X} '{value}').",
  "LicenseExpressionContainsUnicode": "L’expression de licence SPDX contient un caractère Unicode (U+{value:04X} '{pretty_value}'), mais ces expressions sont ascii uniquement.",
  "LicenseExpressionDocumentRefUnsupported": "L'implémentation actuelle ne prend pas en charge les références DocumentRef- SPDX.",
  "LicenseExpressionExpectCompoundFoundParen": "Composé ou fin de chaîne attendu, parenthèse trouvée",
  "LicenseExpressionExpectCompoundFoundWith": "AND ou OR attendu, WITH trouvé (WITH n’est autorisé qu’après les noms de licences, et non les expressions entre parenthèses).",
  "LicenseExpressionExpectCompoundFoundWord": "AND ou OR attendu, une licence ou un nom d’exception a été trouvé : '{value}'.",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "AND, OR ou WITH attendus, une licence ou un nom d’exception a été trouvé : '{value}'.",
  "LicenseExpressionExpectExceptionFoundCompound": "Nom d’exception attendu, le {value} composé a été trouvé.",
  "LicenseExpressionExpectExceptionFoundEof": "Nom d’exception attendu, fin de la chaîne trouvée",
  "LicenseExpressionExpectExceptionFoundParen": "Nom d’exception attendu, parenthèse trouvée",
  "LicenseExpressionExpectLicenseFoundCompound": "Nom de licence attendu, la {value} composée a été trouvée.",
  "LicenseExpressionExpectLicenseFoundEof": "Nom de licence attendu, fin de la chaîne trouvée",
  "LicenseExpressionExpectLicenseFoundParen": "Nom de licence attendu, parenthèse trouvée",
  "LicenseExpressionImbalancedParens": "Il y avait une parenthèse fermante sans parenthèse ouvrante.",
  "LicenseExpressionUnknownException": "Identificateur d’exception de licence inconnu '{value}'. Les valeurs connues sont répertoriées au https://spdx.org/licenses/exceptions-index.html.",
  "LicenseExpressionUnknownLicense": "Identificateur de licence inconnu '{value}'. Les valeurs connues sont répertoriées au https://spdx.org/licenses/.",
  "MsiexecFailedToExtract": "échec de msiexec lors de l’extraction des '{path}' avec le code de lancement ou de sortie {exit_code} et le message :",
  "NoLocalizationForMessages": "Pas de localisation pour les messages suivants :",
  "NoteMessage": "Remarque :",
  "ProcessorArchitectureMalformed": "Échec de l’analyse de %PROCESSOR_ARCHITECTURE% ({arch}) en tant qu’architecture d’UC valide",
  "ProcessorArchitectureMissing": "La variable d’environnement requise %PROCESSOR_ARCHITECTURE% est manquante.",
  "ProcessorArchitectureW6432Malformed": "Échec de l’analyse de %PROCESSOR_ARCHITEW6432% ({arch}) en tant qu’architecture d’UC valide. Retour à %PROCESSOR_ARCHITECTURE%",
  "ResultsHeader": "Résultats",
  "ResultsLine": "    {spec}: {build_result}: {elapsed}",
  "SeeURL": "Consultez {url} pour plus d'informations.",
  "SuggestNewVersionScheme": "Utilisez le schéma de version « {new_scheme} » au lieu de « {old_scheme} » dans le port « {package_name} ».\n Utilisez `--{option}` pour désactiver cette vérification.",
  "UnknownBaselineFileContent": "entrée de base de référence non reconnaissable ; 'port:triplet=(fail|skip)' attendu",
  "UnsupportedSystemName": "Erreur : impossible de mapper VCPKG_CMAKE_SYSTEM_NAME '{system_name}' à une plateforme vcvarsall. Les noms de système pris en charge sont ' '', 'Windows' et 'WindowsStore'.",
  "UnsupportedToolchain": "Erreur : dans le {triplet} triplet : combinaison de chaînes d’outils valide introuvable.\n    L’architecture cible demandée a été {arch}\n    L’instance de Visual Studio sélectionnée est à {path}\n    Les combinaisons de chaînes d’outils disponibles sont {list}\n.",
  "UsingManifestAt": "Utilisation du fichier manifeste au {path}.",
  "Utf8DecoderDereferencedAtEof": "Utf8Decoder déréférencement à la fin d’une chaîne",
  "VSExaminedInstances": "Les instances de Visual Studio suivantes ont été prises en compte :",
  "VSExaminedPaths": "Les chemins d’accès suivants ont été examinés pour Visual Studio instances :",
  "VSNoInstances": "Instance de Visual Studio complète introuvable",
  "VcpkgCeIsExperimental": "vcpkg-ce (« configurer l’environnement ») est expérimental et peut changer à tout moment.",
  "VcpkgDisallowedClassicMode": "Erreur : impossible de localiser un manifeste (vcpkg.json) au-dessus du répertoire de travail actuel.\nCette distribution vcpkg n’a pas d’instance de mode classique.",
  "VcpkgHasCrashed": "vcpkg.exe s’est bloqué.\nEnvoyez un e-mail à :\n    {email}\ncontenant un bref récapitulatif de ce que vous tentiez de faire et de l’objet blob de données suivant :",
  "VcpkgHasCrashedArgument": "{value}|",
  "VcpkgHasCrashedDataBlob": "\nVersion={version}\nEXCEPTION='{error}'\nCMD=",
  "VcpkgInvalidCommand": "commande non valide : {command_name}",
  "VcpkgSendMetricsButDisabled": "Avertissement : réussite de --sendmetrics, mais les métriques sont désactivées.",
  "VersionInvalidDate": "«{version}» n’est pas une version de date valide. Les dates doivent suivre le format AAAA-MM-JJ et les désambiguïsateurs doivent être des valeurs entières positives séparées par des points sans zéros non significatifs.",
  "VersionInvalidRelaxed": "«{version}» n’est pas une version souple valide (semver avec un nombre d’éléments numériques arbitraire).",
  "VersionInvalidSemver": "«{version}» n’est pas une version sémantique valide, consultez <https://semver.org>.",
  "VersionSpecMismatch": "erreur : échec du chargement du port, car les spécifications de version ne correspondent pas\n    Chemin d’accès : {path}\n    Attendu : {expected_version}\n    Réel : {actual_version}",
  "WarningMessage": "avertissement : ",
  "WarningsTreatedAsErrors": "avertissements précédents interprétés comme des erreurs"
}
