{
  "AddArtifactOnlyOne": "'{command_line}' ne pouvez ajouter qu’un seul artefact à la fois.",
  "AddFirstArgument": "Le premier argument de '{command_line}' doit être 'artifact' ou 'port'.",
  "AddPortRequiresManifest": "'{command_line}' requiert un fichier manifeste actif.",
  "AddPortSucceeded": "L’ajout de ports au fichier vcpkg.json a réussi.",
  "AddTripletExpressionNotAllowed": "Les expressions triplet ne sont pas autorisées ici. Vous pouvez remplacer '{package_name}:{triplet}' par '{package_name}'.",
  "AddVersionAddedVersionToFile": "version ajoutée {version} à {path}",
  "AddVersionCommitChangesReminder": "Avez-vous pensé à valider vos modifications ?",
  "AddVersionCommitResultReminder": "N'oubliez pas de valider le résultat !",
  "AddVersionDetectLocalChangesError": "détection des modifications locales ignorée en raison d’un format inattendu dans la sortie d’état git",
  "AddVersionFileNotFound": "Impossible de trouver le fichier requis {path}",
  "AddVersionFormatPortSuggestion": "Exécutez `{command_line}` pour formater le fichier.",
  "AddVersionIgnoringOptionAll": "ignorer --{option} car un argument de nom de port a été fourni.",
  "AddVersionLoadPortFailed": "Impossible de charger le port {package_name}",
  "AddVersionNewFile": "(nouveau fichier)",
  "AddVersionNewShaIs": "nouveau SHA : {value}",
  "AddVersionNoFilesUpdated": "Aucun fichier n'a été mis à jour.",
  "AddVersionNoFilesUpdatedForPort": "Aucun fichier n'a été mis à jour pour {package_name}",
  "AddVersionNoGitSha": "Impossible d'obtenir le SHA pour le port {package_name}",
  "AddVersionOldShaIs": "old SHA: {value}",
  "AddVersionOverwriteOptionSuggestion": "Utilisez --{option} pour contourner cette vérification.",
  "AddVersionPortDoesNotExist": "{package_name} n'existe pas.",
  "AddVersionPortFilesShaChanged": "Les fichiers archivés pour {package_name} ont changé mais la version n'a pas été mise à jour.",
  "AddVersionPortFilesShaUnchanged": "Les fichiers archivés pour {package_name} sont inchangés par rapport à la version {version}.",
  "AddVersionPortHasImproperFormat": "{package_name} n'a pas un format correct.",
  "AddVersionSuggestNewVersionScheme": "Utilisez le schéma de version \"{new_scheme}\" au lieu de \"{old_scheme}\" dans le port \"{package_name}\". \nUtilisez --{option} pour désactiver cette vérification.",
  "AddVersionUnableToParseVersionsFile": "Impossible d'analyser les versions du fichier {path}",
  "AddVersionUncommittedChanges": "il y a des changements non engagés pour {package_name}.",
  "AddVersionUpdateVersionReminder": "Avez-vous pensé à mettre à jour la version ou la version du port ?",
  "AddVersionUseOptionAll": "{command_name} sans arguments nécessite de passer --{option} pour mettre à jour toutes les versions du port en une seule fois.",
  "AddVersionVersionAlreadyInFile": "la version {version} est déjà dans {path}.",
  "AddVersionVersionIs": "Version : {version}",
  "AddingCompletionEntry": "Ajout de l’entrée d’achèvement vcpkg à {path}.",
  "AllFormatArgsRawArgument": "la chaîne de format \"{value}\" contient un argument de format brut.",
  "AllFormatArgsUnbalancedBraces": "accolade non équilibré dans la chaîne de format \"{value}\"",
  "AlreadyInstalled": "{spec} est déjà installé",
  "AlreadyInstalledNotHead": "{spec} est déjà installé - ne pas générer à partir de HEAD",
  "AnotherInstallationInProgress": "Une autre installation est en cours sur l’ordinateur, en veille 6 s avant de réessayer.",
  "AppliedUserIntegration": "Intégration à l’échelle de l’utilisateur appliquée pour cette racine vcpkg.",
  "AssetSourcesArg": "Ajoutez des sources pour la mise en cache des ressources. Consultez « vcpkg help assetcaching ».",
  "AttemptingToFetchPackagesFromVendor": "Tentative de récupération du ou des packages {count} à partir de {vendor}",
  "AuthenticationMayRequireManualAction": "Un ou plusieurs fournisseurs d’informations d’identification {vendor} ont demandé une action manuelle. Ajoutez la source binaire « interactive » pour autoriser l’interactivité.",
  "AutoSettingEnvVar": "-- Définir automatiquement les variables d’environnement {env_var} sur « {url} ».",
  "AutomaticLinkingForMSBuildProjects": "Tous les projets MSBuild C++ peuvent désormais #include toutes les bibliothèques installées. La liaison sera gérée automatiquement. L’installation de nouvelles bibliothèques les rendra instantanément disponibles.",
  "BinarySourcesArg": "Ajoutez des sources pour la mise en cache binaire. Consultez « vcpkg help binarycaching ».",
  "BothYesAndNoOptionSpecifiedError": "Impossible de spécifier à la fois --no-{option} et --{option}",
  "BuildAlreadyInstalled": "{spec} est déjà installé ; supprimez {spec} avant de tenter de le générer.",
  "BuildDependenciesMissing": "La commande build nécessite que toutes les dépendances soient déjà installées.\nLes dépendances suivantes sont manquantes :",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "Téléchargé",
  "BuildResultExcluded": "Exclu",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "SUPPRIMÉ",
  "BuildResultSucceeded": "OPÉRATION RÉUSSIE",
  "BuildResultSummaryHeader": "RÉSUMÉ DE {triplet}",
  "BuildResultSummaryLine": "{build_result} : {count}",
  "BuildTreesRootDir": "(Expérimental) Spécifiez le répertoire racine buildtrees.",
  "BuildTroubleshootingMessage1": "Vérifiez que vous utilisez les derniers fichiers de port avec 'git pull' et 'vcpkg update'.\nRechercher ensuite les problèmes connus sur :",
  "BuildTroubleshootingMessage2": "Vous pouvez soumettre un nouveau problème à l’adresse :",
  "BuildTroubleshootingMessage3": "Incluez « [{package_name}] Erreur de build » dans le titre de votre rapport de bogues, les informations de version suivantes dans votre description de bogue et joignez les journaux des échecs pertinents ci-dessus.",
  "BuildTroubleshootingMessage4": "Vous pouvez également utiliser le modèle prérempli à partir de {path}.",
  "BuildingFromHead": "Génération de {spec} à partir de HEAD...",
  "BuildingPackage": "Génération de {spec}...",
  "BuildingPackageFailed": "échec de la génération de {spec} avec : {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "en raison des dépendances manquantes suivantes :",
  "CMakeTargetsUsage": "{package_name} fournit des cibles CMake :",
  "CMakeTargetsUsageHeuristicMessage": "# ceci est généré de manière heuristique et peut ne pas être correct",
  "CMakeToolChainFile": "Les projets CMake doivent utiliser : « -DCMAKE_TOOLCHAIN_FILE={path} »",
  "ChecksFailedCheck": "vcpkg s’est bloqué; aucun détail supplémentaire n’est disponible.",
  "ChecksUnreachableCode": "code inaccessible atteint",
  "ChecksUpdateVcpkg": "la mise à jour de vcpkg en réexécutant bootstrap-vcpkg peut résoudre cet échec.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing ne peut être utilisé que si une ligne de base est fournie via --ci-baseline.",
  "CiBaselineDisallowedCascade": "RÉGRESSION : {spec} en cascade, mais il est nécessaire de passer. ({path}).",
  "CiBaselineRegression": "RÉGRESSION : {spec} a échoué avec {build_result}. Si prévu, ajoutez {spec}=échec de la {path}.",
  "CiBaselineRegressionHeader": "RÉGRESSIONS :",
  "CiBaselineUnexpectedPass": "RÉUSSITE, SUPPRESSION DE LA LISTE D’ÉCHEC : {spec} ({path}).",
  "CmakeTargetsExcluded": "remarque : {count} cibles supplémentaires ne sont pas affichées.",
  "CommandFailed": "Commande : \n {command_line}\na échoué avec les résultats suivants :",
  "CompressFolderFailed": "Échec de la compression du dossier « {path} » :",
  "ConflictingValuesForOption": "valeurs en conflit spécifiées pour '--{value}'.",
  "CopyrightIsDir": "'{path}' en tant que répertoire est déconseillé.",
  "CouldNotDeduceNugetIdAndVersion": "Impossible de déduire l’ID nuget et la version à partir du nom de fichier : {path}",
  "CreatedNuGetPackage": "Nupkg créé : « {path} »",
  "CurlReportedUnexpectedResults": "curl a signalé des résultats inattendus à vcpkg et vcpkg ne peut pas continuer.\nConsultez le texte suivant pour obtenir des informations sensibles et ouvrez un problème sur Microsoft/vcpkg GitHub pour vous aider à résoudre ce problème !\ncmd : {command_line}\n=== sortie de boucle ===\n{actual}\n=== end curl output ===",
  "DefaultBrowserLaunched": "Navigateur par défaut lancé sur {url}.",
  "DefaultFlag": "La valeur par défaut est --{option} activée.",
  "DefaultPathToBinaries": "En fonction de vos paramètres système, le chemin d’accès par défaut pour stocker les fichiers binaires est '{path}'. Cette opération consulte %LOCALAPPDATA%/%APPDATA% sur Windows et $XDG_CACHE_HOME ou $HOME sur d’autres plateformes.",
  "DetectCompilerHash": "Détection du hachage du compilateur pour le triplet {triplet}...",
  "DownloadAvailable": "Une copie téléchargeable de cet outil est disponible et peut être utilisée en désélérant la variable d’environnement {env_var}.",
  "DownloadRootsDir": "Spécifiez le répertoire racine des téléchargements.\n(par défaut : {env_var})",
  "DownloadedSources": "Sources téléchargées pour {spec}",
  "DownloadingVcpkgCeBundle": "Téléchargement du bundle vcpkg-ce {version}...",
  "DownloadingVcpkgCeBundleLatest": "Téléchargement du dernier bundle vcpkg-ce...",
  "DuplicateCommandOption": "L’option --{option} ne peut être passée qu’une seule fois.",
  "DuplicateOptions": "'--{value}' spécifié plusieurs fois.",
  "ElapsedForPackage": "Temps écoulé pour gérer {spec}: {elapsed}",
  "EmailVcpkgTeam": "Envoyez un e-mail à {url} avec vos commentaires.",
  "EmptyArg": "L’option --{option} doit être passée à un argument non vide.",
  "EmptyLicenseExpression": "L’expression de licence SPDX était vide.",
  "EnvStrFailedToExtract": "impossible de développer la chaîne d’environnement :",
  "ErrorDetectingCompilerInfo": "lors de la détection des informations du compilateur :\nle contenu du fichier journal sur « {path} » est :",
  "ErrorIndividualPackagesUnsupported": "En mode manifeste, `vcpkg install` ne supporte pas les arguments individuels des paquets. \nPour installer des paquets supplémentaires, éditez vcpkg.json et exécutez ensuite `vcpkg install` sans aucun argument de paquet.",
  "ErrorInvalidClassicModeOption": "L’option --{option} n’est pas prise en charge en mode classique et aucun manifeste n’a été trouvé.",
  "ErrorInvalidManifestModeOption": "L’option --{option} n’est pas prise en charge en mode manifeste.",
  "ErrorMessage": "erreur : ",
  "ErrorMessageMustUsePrintError": "Le message nommé {value} commence par erreur : il doit être remplacé par le préfixe ErrorMessage dans le code.",
  "ErrorMissingVcpkgRoot": "Impossible de détecter vcpkg-root. Si vous essayez d’utiliser une copie de vcpkg que vous avez créée, vous devez définir la variable d’environnement VCPKG_ROOT pour qu’elle pointe vers une copie clonée de https://github.com/Microsoft/vcpkg.",
  "ErrorNoVSInstance": "Dans le {triplet} triplet : l’instance de Visual Studio valide est introuvable.",
  "ErrorNoVSInstanceAt": "à \"{path}\"",
  "ErrorNoVSInstanceFullVersion": "avec le préfixe de version de l’ensemble d’outils {version}",
  "ErrorNoVSInstanceVersion": "avec {version} de version de l’ensemble d’outils",
  "ErrorParsingBinaryParagraph": "lors de l’analyse du paragraphe binaire pour {spec}",
  "ErrorRequireBaseline": "Cette instance de vcpkg nécessite un manifeste avec une ligne de base spécifiée afin d'interagir avec les ports. Veuillez ajouter 'builtin-baseline' au manifeste ou ajouter un fichier 'vcpkg-configuration.json' qui redéfinit le registre par défaut.",
  "ErrorRequirePackagesList": "vcpkg install` nécessite une liste de packages à installer en mode classique.",
  "ErrorUnableToDetectCompilerInfo": "vcpkg n’a pas pu détecter les informations du compilateur actif. Voir ci-dessus pour la sortie d’échec CMake.",
  "ErrorVcvarsUnsupported": "Dans triplet {triplet} : l’utilisation de l’invite développeur de Visual Studio n’est pas prise en charge sur les ordinateurs hôtes non Windows.\nDéfinissez 'VCPKG_CMAKE_SYSTEM_NAME' ou 'VCPKG_CHAINLOAD_TOOLCHAIN_FILE' dans le fichier triplet.",
  "ErrorVsCodeNotFound": "Visual Studio Code est introuvable et la variable d’environnement '{env_var}' n’est pas définie ou n’est pas valide.",
  "ErrorVsCodeNotFoundPathExamined": "Les chemins d’accès suivants ont été examinés :",
  "ErrorWhileParsing": "Des erreurs se sont produites lors de l’analyse de {path}.",
  "ErrorWhileWriting": "Une erreur s’est produite lors de l’écriture de {path}",
  "ExceededRecursionDepth": "Recursion depth exceeded.",
  "ExcludedPackage": "{spec} exclus",
  "ExpectedCharacterHere": "'{expected}' attendu ici",
  "ExpectedFailOrSkip": "'échec', 'ignorer' ou 'réussite' attendu ici",
  "ExpectedPortName": "nom de port attendu ici",
  "ExpectedTripletName": "nom triplet attendu ici",
  "ExpectedValueForOption": "valeur attendue après '{value}'.",
  "ExtendedDocumentationAtUrl": "Documentation étendue disponible sur '{url}'",
  "FailedToExtract": "Échec de l’extraction de «{path}» :",
  "FailedToParseBinParagraph": "[vérification de l’intégrité] Échec de l’analyse d’un paragraphe binaire sérialisé.\nOuvrez un problème à https://github.com/microsoft/vcpkg, avec la sortie suivante :\n{error_msg}\nparagraphe binaire sérialisé :",
  "FailedToParseCMakeConsoleOut": "Échec de l’analyse de la sortie de la console CMake pour localiser les marqueurs de début/fin de bloc.",
  "FailedToProvisionCe": "Échec de l’approvisionnement de vcpkg-ce",
  "FailedToRunToolToDetermineVersion": "Impossible d’exécuter {path} pour déterminer la version {tool_name}.",
  "FailedToStoreBackToMirror": "échec du stockage dans le miroir :",
  "FailedToStoreBinaryCache": "Échec du stockage du cache binaire {path}",
  "FailedVendorAuthentication": "Un ou plusieurs fournisseurs d’informations d’identification {vendor} n’ont pas pu s’authentifier. Consultez '{url}' pour plus d’informations sur la façon de fournir des informations d’identification.",
  "FeedbackAppreciated": "Merci pour vos commentaires !",
  "FishCompletion": "La saisie semi-automatique des poissons vcpkg est déjà ajoutée à \"{path}\".",
  "ForceSystemBinariesOnWeirdPlatforms": "La variable d'environnement VCPKG_FORCE_SYSTEM_BINARIES doit être définie sur les plateformes arm, s390x, et ppc64le.",
  "FormattedParseMessageExpression": "sur l’expression : {value}",
  "GenerateMsgErrorParsingFormatArgs": "Analyse de la chaîne de format pour {value} :",
  "GenerateMsgIncorrectComment": "message {value} comporte un commentaire incorrect :",
  "GenerateMsgNoArgumentValue": "{{{value}}} a été spécifié dans un commentaire, mais n’a pas été utilisé dans le message.",
  "GenerateMsgNoCommentValue": "{{{value}}} a été utilisé dans le message, mais n’a pas fait de commentaire.",
  "GitCommandFailed": "échec de l’exécution : {command_line}",
  "GitStatusOutputExpectedFileName": "nom de fichier attendu",
  "GitStatusOutputExpectedNewLine": "nouvelle ligne attendue",
  "GitStatusOutputExpectedRenameOrNewline": "fichier renommé ou nouvelles lignes attendus",
  "GitStatusUnknownFileStatus": "état de fichier inconnu : {value}",
  "GitUnexpectedCommandOutput": "sortie git inattendue",
  "GraphCycleDetected": "Cycle détecté dans le graphique à {package_name} :",
  "HashFileFailureToRead": "échec de la lecture du fichier « {chemin} »pour le hachage : ",
  "HeaderOnlyUsage": "{package_name} est en-tête uniquement et peut être utilisé à partir de CMake via :",
  "HelpContactCommand": "Affichez les informations de contact pour envoyer des commentaires.",
  "HelpCreateCommand": "Créez un port.",
  "HelpDependInfoCommand": "Afficher la liste des dépendances pour les ports.",
  "HelpEditCommand": "Ouvrez un port pour la modification (utilisez la variable d’environnement '{env_var}' pour définir un programme d’éditeur, la valeur par défaut est 'code').",
  "HelpEnvCommand": "Crée un environnement shell propre pour le développement ou la compilation.",
  "HelpExampleCommand": "Pour obtenir de l’aide supplémentaire (notamment des exemples), consultez le dossier des README.md et documents qui l’accompagnent.",
  "HelpExportCommand": "Exporte un package.",
  "HelpFormatManifestCommand": "Met en forme tous les fichiers vcpkg.json. Exécutez ceci avant de valider sur vcpkg.",
  "HelpHashCommand": "Hacher un fichier par algorithme spécifique, SHA512 par défaut.",
  "HelpHistoryCommand": "(Expérimental) Afficher l’historique des versions d’un package.",
  "HelpInitializeRegistryCommand": "Initialise un registre dans le répertoire <path>.",
  "HelpInstallCommand": "Installer un package.",
  "HelpListCommand": "Répertorie les packages installés.",
  "HelpOwnsCommand": "Recherchez des fichiers dans les packages installés.",
  "HelpRemoveCommand": "Désinstallez un package.",
  "HelpRemoveOutdatedCommand": "Désinstallez tous les packages obsolètes.",
  "HelpResponseFileCommand": "Spécifiez un fichier réponse pour fournir des paramètres supplémentaires.",
  "HelpSearchCommand": "Recherchez les packages disponibles pour la génération.",
  "HelpTopicCommand": "Afficher l’aide d’un sujet spécifique.",
  "HelpTopicsCommand": "Affichez la liste des rubriques d’aide.",
  "HelpUpdateCommand": "Répertoriez les packages pouvant être mis à jour.",
  "HelpUpgradeCommand": "Reconstruisez tous les packages obsolètes.",
  "HelpVersionCommand": "Affiche les informations de version.",
  "IllegalFeatures": "La liste des fonctionnalités n’est pas autorisée dans ce contexte.",
  "IllegalPlatformSpec": "Le qualificateur de plateforme n’est pas autorisé dans ce contexte.",
  "IncorrectNumberOfArgs": "'{command_name}' requiert '{expected}' arguments, mais '{actual}' ont été fournis.",
  "InfoSetEnvVar": "Vous pouvez également définir la variable d’environnement '{env_var}' sur l’éditeur de votre choix.",
  "InstallPackageInstruction": "Quand un projet est ouvert, accédez à la console Outils->NuGet Gestionnaire de package->Gestionnaire de package et collez :\n Install-Package \"{value}\" -Source \"{path}\"",
  "InstallRootDir": "(Expérimental) Spécifiez le répertoire racine d’installation.",
  "InstallWithSystemManager": "Vous pouvez peut-être installer cet outil via votre gestionnaire de packages système.",
  "InstallWithSystemManagerMono": "Les utilisateurs d’Ubuntu 18.04 peuvent avoir besoin d’une version plus récente de Mono, disponible sur {url}.",
  "InstallWithSystemManagerPkg": "Vous pouvez peut-être installer cet outil via votre gestionnaire de packages système ({command_line}).",
  "InstallingFromLocation": "-- Installation du port à partir de l’emplacement : {path}",
  "InstallingPackage": "Installation de {action_index}/{count} {spec}...",
  "IntegrationFailed": "L’intégration n’a pas été appliquée.",
  "InternalErrorMessage": "Erreur interne :",
  "InternalErrorMessageContact": "Ouvrez un problème à https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug avec des étapes détaillées pour reproduire le problème.",
  "InvalidArgument": "argument non valide",
  "InvalidArgumentRequiresAbsolutePath": "argument non valide : les arguments de chemin de la configuration binaire '{binary_source}' pour les chaînes de configuration binaires doivent être absolus",
  "InvalidArgumentRequiresBaseUrl": "argument non valide : la configuration binaire '{binary_source}' nécessite une URL de base {base_url} comme premier argument",
  "InvalidArgumentRequiresBaseUrlAndToken": "argument non valide : la configuration binaire '{binary_source}' nécessite au moins une URL de base et un jeton SAS",
  "InvalidArgumentRequiresNoneArguments": "argument invalide : la configuration binaire '{binary_source}' ne prend pas d’arguments",
  "InvalidArgumentRequiresOneOrTwoArguments": "argument non valide : la configuration binaire '{binary_source}' nécessite 1 ou 2 arguments",
  "InvalidArgumentRequiresPathArgument": "argument non valide : la configuration binaire '{binary_source}' nécessite au moins un argument de chemin d’accès.",
  "InvalidArgumentRequiresPrefix": "argument non valide : la configuration binaire '{binary_source}' nécessite au moins un préfixe.",
  "InvalidArgumentRequiresSingleArgument": "argument non valide : la configuration binaire '{binary_source}' ne prend pas plus d’un argument",
  "InvalidArgumentRequiresSingleStringArgument": "argument non valide : la configuration binaire '{binary_source}' attend un seul argument de chaîne",
  "InvalidArgumentRequiresSourceArgument": "argument non valide : la configuration binaire '{binary_source}' nécessite au moins un argument source.",
  "InvalidArgumentRequiresTwoOrThreeArguments": "argument non valide : la configuration binaire '{binary_source}' nécessite 2 ou 3 arguments",
  "InvalidArgumentRequiresValidToken": "argument non valide : la configuration binaire '{binary_source}' nécessite un jeton SAS sans '?' comme deuxième argument",
  "InvalidBuildInfo": "Fichier BUILD_INFO non valide pour le package : {error_msg}",
  "InvalidCommandArgSort": "Value of --sort must be one of 'lexicographical', 'topological', 'reverse'.",
  "InvalidFilename": "Filename cannot contain invalid chars {value}, but was {path}",
  "InvalidFormatString": "format de chaîne non valide : {actual}",
  "InvalidLinkage": "Type de liaison {system_name} non valide : [{value}]",
  "JsonErrorFailedToParse": "échec de l’analyse de {path} :",
  "JsonErrorFailedToRead": "échec de la lecture de {path} : {error_msg}",
  "JsonErrorMustBeAnObject": "Le {path} prévu doit être un objet.",
  "JsonSwitch": "(Expérimental) Sortie JSON de la demande.",
  "LaunchingProgramFailed": "Lancement de {tool_name} :",
  "LicenseExpressionContainsExtraPlus": "L'expression de la licence SPDX contient un '+' supplémentaire. Ceux-ci ne sont autorisés que directement après un identifiant de licence.",
  "LicenseExpressionContainsInvalidCharacter": "L’expression de licence SPDX contient un caractère non valide (0x{value:02X} '{value}').",
  "LicenseExpressionContainsUnicode": "L’expression de licence SPDX contient un caractère Unicode (U+{value:04X} '{pretty_value}'), mais ces expressions sont ascii uniquement.",
  "LicenseExpressionDocumentRefUnsupported": "L'implémentation actuelle ne prend pas en charge les références DocumentRef- SPDX.",
  "LicenseExpressionExpectCompoundFoundParen": "Composé ou fin de chaîne attendu, parenthèse trouvée",
  "LicenseExpressionExpectCompoundFoundWith": "AND ou OR attendu, WITH trouvé (WITH n’est autorisé qu’après les noms de licences, et non les expressions entre parenthèses).",
  "LicenseExpressionExpectCompoundFoundWord": "AND ou OR attendu, une licence ou un nom d’exception a été trouvé : '{value}'.",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "AND, OR ou WITH attendus, une licence ou un nom d’exception a été trouvé : '{value}'.",
  "LicenseExpressionExpectExceptionFoundCompound": "Nom d’exception attendu, le {value} composé a été trouvé.",
  "LicenseExpressionExpectExceptionFoundEof": "Nom d’exception attendu, fin de la chaîne trouvée",
  "LicenseExpressionExpectExceptionFoundParen": "Nom d’exception attendu, parenthèse trouvée",
  "LicenseExpressionExpectLicenseFoundCompound": "Nom de licence attendu, la {value} composée a été trouvée.",
  "LicenseExpressionExpectLicenseFoundEof": "Nom de licence attendu, fin de la chaîne trouvée",
  "LicenseExpressionExpectLicenseFoundParen": "Nom de licence attendu, parenthèse trouvée",
  "LicenseExpressionImbalancedParens": "Il y avait une parenthèse fermante sans parenthèse ouvrante.",
  "LicenseExpressionUnknownException": "Identificateur d’exception de licence inconnu '{value}'. Les valeurs connues sont répertoriées au https://spdx.org/licenses/exceptions-index.html.",
  "LicenseExpressionUnknownLicense": "Identificateur de licence inconnu '{value}'. Les valeurs connues sont répertoriées au https://spdx.org/licenses/.",
  "ListOfValidFieldsForControlFiles": "Liste des champs valides pour les fichiers CONTROL (respectant la casse) :",
  "LoadingCommunityTriplet": "-- [COMMUNITY] Chargement de la configuration triplet à partir de : {path}",
  "LoadingDependencyInformation": "Chargement des informations de dépendance pour {count} packages...",
  "LoadingOverlayTriplet": "-- [OVERLAY] Chargement de la configuration triplet à partir de : {path}",
  "LocalizedMessageMustNotContainIndents": "Le message nommé {value} contient ce qui semble être en retrait qui doit être modifié pour utiliser à la place LocalizedString::append_indent.",
  "LocalizedMessageMustNotEndWithNewline": "Le message nommé {value} se termine par une nouvelle ligne qui doit être ajoutée par mise en forme plutôt que par localisation.",
  "MismatchedBinaryParagraphs": "[sanity check] Le paragraphe binaire sérialisé était différent du paragraphe binaire d’origine.\nOuvrez un problème au {url}, avec la sortie suivante :",
  "Missing7zHeader": "En-tête 7z introuvable.",
  "MissingExtension": "Extension de '{extension}' manquante.",
  "MissmatchedBinParagraphs": "Le paragraphe binaire sérialisé était différent du paragraphe binaire d’origine. Veuillez ouvrir un problème à https://github.com/microsoft/vcpkg avec la sortie suivante :",
  "MonoInstructions": "Cela peut être dû à une installation incomplète de mono. La version complète de mono est disponible sur certains systèmes via `sudo apt install mono-complete`. Les utilisateurs d'Ubuntu 18.04 peuvent avoir besoin d'une version plus récente de mono, disponible à l'adresse https://www.mono-project.com/download/stable/.",
  "MsiexecFailedToExtract": "échec de msiexec lors de l’extraction des '{path}' avec le code de lancement ou de sortie {exit_code} et le message :",
  "MultiArch": "Multi-Arch doit être 'same' mais était {option}",
  "NavigateToNPS": "Accédez à {url} dans votre navigateur préféré.",
  "NewConfigurationAlreadyExists": "La création d’un manifeste remplacerait vcpkg-configuration.json au {path}.",
  "NewManifestAlreadyExists": "Un manifeste est déjà présent dans {path}.",
  "NewNameCannotBeEmpty": "'Nom' ne peut pas être vide.",
  "NewOnlyOneVersionKind": "Seul --version-relaxed, --version-date ou --version-string peut être spécifié.",
  "NewSpecifyNameVersionOrApplication": "Spécifiez --name et --version pour produire un manifeste destiné aux bibliothèques C++, ou spécifiez --application pour indiquer que le manifeste n’est pas destiné à être utilisé en tant que port.",
  "NewVersionCannotBeEmpty": "--version ne peut pas être vide.",
  "NoArgumentsForOption": "L’option --{option} n’accepte pas d’argument.",
  "NoCachedPackages": "Aucun package n’est mis en cache.",
  "NoLocalizationForMessages": "Aucun message localisé pour les éléments suivants : ",
  "NoRegistryForPort": "aucun registre configuré pour le port {package_name}",
  "NoteMessage": "Remarque :",
  "NugetPackageFileSucceededButCreationFailed": "La création du package NuGet a réussi, mais aucun .nupkg n’a été produit. Attendu : \"{path}\"",
  "OptionMustBeInteger": "Value of --{option} must be an integer.",
  "OriginalBinParagraphHeader": "\nParagraphe binaire d’origine",
  "PackageFailedtWhileExtracting": "échec de '{value}' lors de l’extraction de {path}.",
  "PackageRootDir": "(Expérimental) Spécifiez le répertoire racine des packages.",
  "PackingVendorFailed": "Échec de la compression de {vendor}. Utilisez --debug pour plus d’informations.",
  "ParseControlErrorInfoInvalidFields": "Les champs suivants n’étaient pas attendus :",
  "ParseControlErrorInfoMissingFields": "Les champs suivants sont manquants :",
  "ParseControlErrorInfoTypesEntry": "{value} était censé être {expected}.",
  "ParseControlErrorInfoWhileLoading": "lors du chargement {path} :",
  "ParseControlErrorInfoWrongTypeFields": "Les types des champs suivants sont incorrects :",
  "PortDependencyConflict": "Le port {package_name} a les dépendances non prises en charge suivantes :",
  "PortNotInBaseline": "la base de référence ne contient pas d’entrée pour le port {package_name}.",
  "PortSupportsField": "(prend en charge : « {value} »)",
  "PreviousIntegrationFileRemains": "Le fichier d’intégration précédent n’a pas été supprimé.",
  "ProcessorArchitectureMalformed": "Échec de l’analyse de %PROCESSOR_ARCHITECTURE% ({arch}) en tant qu’architecture d’UC valide",
  "ProcessorArchitectureMissing": "La variable d’environnement requise %PROCESSOR_ARCHITECTURE% est manquante.",
  "ProcessorArchitectureW6432Malformed": "Échec de l’analyse de %PROCESSOR_ARCHITEW6432% ({arch}) en tant qu’architecture d’UC valide. Retour à %PROCESSOR_ARCHITECTURE%",
  "ProgramReturnedNonzeroExitCode": "Échec de {tool_name} avec le code de sortie : ({exit_code}).",
  "PushingVendorFailed": "Échec de l’envoi de {vendor} à '{path}'. Utilisez --debug pour plus d’informations.",
  "RemovingPackage": "Suppression de {action_index}/{count} {spec}",
  "ReplaceSecretsError": "Le remplacement des secrets a produit l’erreur suivante : '{error_msg}'",
  "RestoredPackage": "Package restauré à partir de '{path}'",
  "RestoredPackagesFromVendor": "Package(s) {count} restauré(s) à partir de {value} dans {elapsed}. Utilisez --déboguer pour afficher plus de détails.",
  "ResultsHeader": "Résultats",
  "SeeURL": "Consultez {url} pour plus d'informations.",
  "SerializedBinParagraphHeader": "\nparagraphe binaire sérialisé",
  "SettingEnvVar": "-- Définition des variables d’environnement « {env_var} » sur « {url} ».",
  "SourceFieldPortNameMismatch": "Le champ « Source » dans le fichier CONTROL ou le champ « name » dans le fichier vcpkg.json porte le nom {package_name} et ne correspond pas au répertoire de port {path}.",
  "SpecifiedFeatureTurnedOff": "La fonctionnalité '{command_name}' a été spécialement désactivée, mais --{option} a été spécifiée.",
  "SpecifyDirectoriesContaining": "Spécifie les répertoires contenant des fichiers triplets.\n(également : '{env_var}')",
  "SpecifyDirectoriesWhenSearching": "Spécifiez les répertoires à utiliser lors de la recherche de ports.\n(également : '{env_var}')",
  "SpecifyHostArch": "Spécifiez le triplet de l’architecture hôte. Consultez « vcpkg help triplet ».\n(valeur par défaut : '{env_var}')",
  "SpecifyTargetArch": "Spécifiez le triplet de l’architecture cible. Consultez « vcpkg help triplet ».\n(valeur par défaut : '{env_var}')",
  "StoredBinaryCache": "Cache binaire stocké : '{path}'",
  "SuggestStartingBashShell": "Vérifiez que vous avez démarré un nouvel interpréteur de commandes Bash pour que la modification prenne effet.",
  "SuggestUpdateVcpkg": "Vous devrez peut-être mettre à jour le binaire vcpkg ; essayez d’exécuter {command_line} à mettre à jour.",
  "SupportedPort": "Le port {package_name} est pris en charge.",
  "SystemApiErrorMessage": "échec de l’appel {system_api} avec {exit_code} ({error_msg})",
  "ToolFetchFailed": "Impossible de récupérer les {tool_name}.",
  "ToolInWin10": "Cet utilitaire est fourni avec Windows 10 ou une version ultérieure.",
  "TwoFeatureFlagsSpecified": "'{value}' et -'{value}' ont tous les deux été spécifiés en tant qu’indicateurs de fonctionnalité.",
  "UndeterminedToolChainForTriplet": "Impossible de déterminer l’utilisation de la chaîne d’outils pour {triplet} avec CMAKE_SYSTEM_NAME {system_name}. Voulez-vous utiliser VCPKG_CHAINLOAD_TOOLCHAIN_FILE ?",
  "UnexpectedErrorDuringBulkDownload": "une erreur inattendue s’est produite lors du téléchargement en bloc.",
  "UnexpectedExtension": "Extension d’archive inattendue : '{extension}'.",
  "UnexpectedFormat": "Le format attendu est [{expected}], mais était [{actual}].",
  "UnexpectedToolOutput": "{tool_name} ({path}) a produit une sortie inattendue lors de la tentative de détermination de la version :",
  "UnknownBaselineFileContent": "entrée de base de référence non reconnaissable ; 'port:triplet=(fail|skip|pass)' attendu",
  "UnknownBinaryProviderType": "type de fournisseur binaire inconnu : les fournisseurs valides sont 'clear', 'default', 'nuget', 'nugetconfig', 'nugettimeout', 'interactive', 'x-azblob', 'x-gcs', 'x-aws', 'x-aws-config', 'http' et 'files'.",
  "UnknownOptions": "Option(s) inconnue(s) pour la commande '{command_name}' :",
  "UnknownParameterForIntegrate": "Paramètre inconnu '{value}' pour l’intégration.",
  "UnknownPolicySetting": "Paramètre inconnu pour la stratégie '{value}' : {option}",
  "UnknownSettingForBuildType": "Paramètre inconnu pour VCPKG_BUILD_TYPE {option}. Les paramètres valides sont « {0} », « debug » et « release ».",
  "UnknownTool": "vcpkg n’a pas de définition de cet outil pour cette plateforme.",
  "UnknownVariablesInTemplate": "argument non valide : le modèle d’URL « {value} » contient des variables inconnues : {list}",
  "UnsupportedPort": "Le port {package_name} n’est pas pris en charge.",
  "UnsupportedPortDependency": "- la dépendance {value} n’est pas prise en charge.",
  "UnsupportedShortOptions": "les options courtes ne sont pas prises en charge : '{value}'",
  "UnsupportedSystemName": "Impossible de mapper VCPKG_CMAKE_SYSTEM_NAME '{system_name}' à une plateforme vcvarsall. Les noms de système pris en charge sont ' '', 'Windows' et 'WindowsStore'.",
  "UnsupportedToolchain": "Dans le {triplet} triplet : chaînes d’outils valide introuvablepour l’architecture cible demandée {arch}\n. L’instance de Visual Studio sélectionnée est à : {path}\n. Les combinaisons de chaînes d’outils disponibles sont : {list}.",
  "UpdateBaselineAddBaselineNoManifest": "le commutateur --{option} a été passé, mais il n’existe aucun fichier manifeste auquel ajouter un champ `builtin-baseline`.",
  "UpdateBaselineLocalGitError": "git n’a pas pu analyser HEAD pour le registre vcpkg local à '{path}'",
  "UpdateBaselineNoConfiguration": "'vcpkg.json' ou 'vcpkg-configuration.json' n’existent pas pour la mise à jour.",
  "UpdateBaselineNoExistingBuiltinBaseline": "le fichier manifeste ne contient actuellement pas de champ `builtin-baseline` ; pour en ajouter un, passez le commutateur --{option}.",
  "UpdateBaselineNoUpdate": "registre '{url}' pas mis à jour : '{value}'",
  "UpdateBaselineRemoteGitError": "git n’a pas pu récupérer les '{url}' du dépôt distant",
  "UpdateBaselineUpdatedBaseline": "Registre '{url}' mis à jour : base de référence '{old_value}' -> '{new_value}'",
  "UploadedBinaries": "Fichiers binaires chargés sur {count} {vendor}",
  "UploadedPackagesToVendor": "{count} package(s) chargé(s) sur {vendor} dans {elapsed}",
  "UploadingBinariesToVendor": "Chargement des fichiers binaires de '{spec}' vers '{vendor}' '{path}' source.",
  "UploadingBinariesUsingVendor": "Chargement des fichiers binaires pour '{spec}' à l’aide de '{vendor}' '{path}'.",
  "UseEnvVar": "-- Utilisation de {env_var} dans les variables d’environnement.",
  "UserWideIntegrationDeleted": "L’intégration à l’échelle de l’utilisateur n’est pas installée.",
  "UserWideIntegrationRemoved": "L’intégration à l’échelle de l’utilisateur a été supprimée.",
  "UsingCommunityTriplet": "-- Utilisation de la {triplet} triplet de la communauté. La réussite de cette configuration triplet n’est pas garantie.",
  "UsingManifestAt": "Utilisation du fichier manifeste au {path}.",
  "Utf8DecoderDereferencedAtEof": "Utf8Decoder déréférencement à la fin d’une chaîne",
  "VSExaminedInstances": "Les instances de Visual Studio suivantes ont été prises en compte :",
  "VSExaminedPaths": "Les chemins d’accès suivants ont été examinés pour Visual Studio instances :",
  "VSNoInstances": "Instance de Visual Studio complète introuvable",
  "VcpkgCeIsExperimental": "vcpkg-ce (« configurer l’environnement ») est expérimental et peut changer à tout moment.",
  "VcpkgCompletion": "L’achèvement {value} vcpkg est déjà importé dans votre fichier \"{path}\".\nLes entrées suivantes ont été trouvées :",
  "VcpkgDisallowedClassicMode": "Impossible de localiser un manifeste (vcpkg.json) au-dessus du répertoire de travail actuel.\nCette distribution vcpkg n’a pas d’instance de mode classique.",
  "VcpkgHasCrashed": "vcpkg s’est bloqué. Veuillez créer un problème à https://github.com/microsoft/vcpkg contenant un bref résumé de ce que vous tentiez de faire et des informations suivantes.",
  "VcpkgInvalidCommand": "commande non valide : {command_name}",
  "VcpkgRootsDir": "Spécifiez le répertoire racine vcpkg.\n(valeur par défaut : '{env_var}')",
  "VcpkgSendMetricsButDisabled": "Réussite de --sendmetrics, mais les indicateurs de performance sont désactivés.",
  "VersionCommandHeader": "version du programme de gestion de package vcpkg {version}\n\nPour plus d’informations sur la licence, consultez LICENSE.txt.",
  "VersionConstraintViolated": "le {spec} de dépendance était censé être au moins {expected_version} version, mais il est actuellement {actual_version}.",
  "VersionInvalidDate": "«{version}» n’est pas une version de date valide. Les dates doivent suivre le format AAAA-MM-JJ et les désambiguïsateurs doivent être des valeurs entières positives séparées par des points sans zéros non significatifs.",
  "VersionInvalidRelaxed": "«{version}» n’est pas une version souple valide (semver avec un nombre d’éléments numériques arbitraire).",
  "VersionInvalidSemver": "«{version}» n’est pas une version sémantique valide, consultez <https://semver.org>.",
  "VersionSpecMismatch": "Échec du chargement du port, car les versions sont incohérentes. Le fichier \"{path}\" contient la version {actual_version}, mais la base de données de versions indique qu’il doit être {expected_version}.",
  "WaitingForChildrenToExit": "En attente de la fermeture des processus enfants...",
  "WaitingToTakeFilesystemLock": "en attente du verrouillage du système de fichiers sur {path}...",
  "WarningMessage": "avertissement : ",
  "WarningMessageMustUsePrintWarning": "Le message nommé {value} commence par avertissement : il doit être remplacé par le préfixe WarningMessage dans le code.",
  "WarningsTreatedAsErrors": "avertissements précédents interprétés comme des erreurs"
}
