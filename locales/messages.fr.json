{
  "AddArtifactOnlyOne": "'{command_line}' ne pouvez ajouter qu’un seul artefact à la fois.",
  "AddFirstArgument": "Le premier argument de '{command_line}' doit être 'artifact' ou 'port'.",
  "AddPortRequiresManifest": "'{command_line}' requiert un fichier manifeste actif.",
  "AddPortSucceded": "L’ajout de ports au fichier vcpkg.json a réussi.",
  "AddTripletExpressionNotAllowed": "Les expressions triplet ne sont pas autorisées ici. Vous pouvez remplacer '{package_name}:{triplet}' par '{package_name}'.",
  "AddVersionAddedVersionToFile": "version ajoutée {version} à {path}",
  "AddVersionCommitChangesReminder": "Avez-vous pensé à valider vos modifications ?",
  "AddVersionCommitResultReminder": "N'oubliez pas de valider le résultat !",
  "AddVersionDetectLocalChangesError": "détection des modifications locales ignorée en raison d’un format inattendu dans la sortie d’état git",
  "AddVersionFileNotFound": "Impossible de trouver le fichier requis {path}",
  "AddVersionFormatPortSuggestion": "Exécutez `{command_line}` pour formater le fichier.",
  "AddVersionIgnoringOptionAll": "ignorer --{option} car un argument de nom de port a été fourni.",
  "AddVersionLoadPortFailed": "Impossible de charger le port {package_name}",
  "AddVersionNewFile": "(nouveau fichier)",
  "AddVersionNewShaIs": "nouveau SHA : {value}",
  "AddVersionNoFilesUpdated": "Aucun fichier n'a été mis à jour.",
  "AddVersionNoFilesUpdatedForPort": "Aucun fichier n'a été mis à jour pour {package_name}",
  "AddVersionNoGitSha": "Impossible d'obtenir le SHA pour le port {package_name}",
  "AddVersionOldShaIs": "old SHA: {value}",
  "AddVersionOverwriteOptionSuggestion": "Utilisez --{option} pour contourner cette vérification.",
  "AddVersionPortDoesNotExist": "{package_name} n'existe pas.",
  "AddVersionPortFilesShaChanged": "Les fichiers archivés pour {package_name} ont changé mais la version n'a pas été mise à jour.",
  "AddVersionPortFilesShaUnchanged": "Les fichiers archivés pour {package_name} sont inchangés par rapport à la version {version}.",
  "AddVersionPortHasImproperFormat": "{package_name} n'a pas un format correct.",
  "AddVersionSuggestNewVersionScheme": "Utilisez le schéma de version \"{new_scheme}\" au lieu de \"{old_scheme}\" dans le port \"{package_name}\". \nUtilisez --{option} pour désactiver cette vérification.",
  "AddVersionUnableToParseVersionsFile": "Impossible d'analyser les versions du fichier {path}",
  "AddVersionUncommittedChanges": "il y a des changements non engagés pour {package_name}.",
  "AddVersionUpdateVersionReminder": "Avez-vous pensé à mettre à jour la version ou la version du port ?",
  "AddVersionUseOptionAll": "{command_name} sans arguments nécessite de passer --{option} pour mettre à jour toutes les versions du port en une seule fois.",
  "AddVersionVersionAlreadyInFile": "la version {version} est déjà dans {path}.",
  "AddVersionVersionIs": "Version : {version}",
  "AllFormatArgsRawArgument": "la chaîne de format \"{value}\" contient un argument de format brut.",
  "AllFormatArgsUnbalancedBraces": "accolade non équilibré dans la chaîne de format \"{value}\"",
  "AlreadyInstalled": "{spec} est déjà installé",
  "AlreadyInstalledNotHead": "{spec} est déjà installé - ne pas générer à partir de HEAD",
  "AttemptingToFetchPackagesFromVendor": "Tentative de récupération du ou des packages {count} à partir de {vendor}",
  "AutoSettingEnvVar": "-- Définir automatiquement les variables d’environnement {env_var} sur « {url} ».",
  "BothYesAndNoOptionSpecifiedError": "Impossible de spécifier à la fois --no-{option} et --{option}",
  "BuildAlreadyInstalled": "{spec} est déjà installé ; supprimez {spec} avant de tenter de le générer.",
  "BuildDependenciesMissing": "La commande build nécessite que toutes les dépendances soient déjà installées.\nLes dépendances suivantes sont manquantes :",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "Téléchargé",
  "BuildResultExcluded": "Exclu",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "SUPPRIMÉ",
  "BuildResultSucceeded": "OPÉRATION RÉUSSIE",
  "BuildResultSummaryHeader": "RÉSUMÉ DE {triplet}",
  "BuildResultSummaryLine": "{build_result} : {count}",
  "BuildTroubleshootingMessage1": "Vérifiez que vous utilisez les derniers fichiers de port avec 'git pull' et 'vcpkg update'.\nRechercher ensuite les problèmes connus sur :",
  "BuildTroubleshootingMessage2": "Vous pouvez soumettre un nouveau problème à l’adresse :",
  "BuildTroubleshootingMessage3": "Incluez « [{package_name}] Erreur de build » dans le titre de votre rapport de bogues, les informations de version suivantes dans votre description de bogue et joignez les journaux des échecs pertinents ci-dessus.",
  "BuildTroubleshootingMessage4": "Vous pouvez également utiliser le modèle prérempli à partir de {path}.",
  "BuildingFromHead": "Génération de {spec} à partir de HEAD...",
  "BuildingPackage": "Génération de {spec}...",
  "BuildingPackageFailed": "échec de la génération de {spec} avec : {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "en raison des dépendances manquantes suivantes :",
  "CMakeTargetsUsage": "{package_name} fournit des cibles CMake :",
  "CMakeTargetsUsageHeuristicMessage": "# ceci est généré de manière heuristique et peut ne pas être correct",
  "ChecksFailedCheck": "vcpkg s’est bloqué; aucun détail supplémentaire n’est disponible.",
  "ChecksUnreachableCode": "code inaccessible atteint",
  "ChecksUpdateVcpkg": "la mise à jour de vcpkg en réexécutant bootstrap-vcpkg peut résoudre cet échec.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing ne peut être utilisé que si une ligne de base est fournie via --ci-baseline.",
  "CiBaselineDisallowedCascade": "RÉGRESSION : {spec} en cascade, mais il est nécessaire de passer. ({path}).",
  "CiBaselineRegression": "RÉGRESSION : {spec} a échoué avec {build_result}. Si prévu, ajoutez {spec}=échec de la {path}.",
  "CiBaselineRegressionHeader": "RÉGRESSIONS :",
  "CiBaselineUnexpectedPass": "RÉUSSITE, SUPPRESSION DE LA LISTE D’ÉCHEC : {spec} ({path}).",
  "CmakeTargetsExcluded": "remarque : {count} cibles supplémentaires ne sont pas affichées.",
  "CommandFailed": "Commande : \n {command_line}\na échoué avec les résultats suivants :",
  "CompressFolderFailed": "Échec de la compression du dossier « {path} » :",
  "CouldNotDeduceNugetIdAndVersion": "Impossible de déduire l’ID nuget et la version à partir du nom de fichier : {path}",
  "CurlReportedUnexpectedResults": "curl a signalé des résultats inattendus à vcpkg et vcpkg ne peut pas continuer.\nConsultez le texte suivant pour obtenir des informations sensibles et ouvrez un problème sur Microsoft/vcpkg GitHub pour vous aider à résoudre ce problème !\ncmd : {command_line}\n=== sortie de boucle ===\n{actual}\n=== end curl output ===",
  "DetectCompilerHash": "Détection du hachage du compilateur pour le triplet « {triplet} »...",
  "DownloadAvailable": "Une copie téléchargeable de cet outil est disponible et peut être utilisée en désépinglant {env_var}.",
  "DownloadedSources": "Sources téléchargées pour {spec}",
  "DownloadingVcpkgCeBundle": "Téléchargement du bundle vcpkg-ce {version}...",
  "DownloadingVcpkgCeBundleLatest": "Téléchargement du dernier bundle vcpkg-ce...",
  "ElapsedForPackage": "Temps écoulé pour gérer {spec}: {elapsed}",
  "EmptyLicenseExpression": "L’expression de licence SPDX était vide.",
  "EnvStrFailedToExtract": "impossible de développer la chaîne d’environnement :",
  "ErrorDetectingCompilerInfo": "lors de la détection des informations du compilateur :\nle contenu du fichier journal sur « {path} » est :",
  "ErrorIndividualPackagesUnsupported": "En mode manifeste, `vcpkg install` ne supporte pas les arguments individuels des paquets. \nPour installer des paquets supplémentaires, éditez vcpkg.json et exécutez ensuite `vcpkg install` sans aucun argument de paquet.",
  "ErrorInvalidClassicModeOption": "L’option --{option} n’est pas prise en charge en mode classique et aucun manifeste n’a été trouvé.",
  "ErrorInvalidManifestModeOption": "L’option --{option} n’est pas prise en charge en mode manifeste.",
  "ErrorMessage": "erreur : ",
  "ErrorMessageMustUsePrintError": "Le message nommé {value} commence par erreur : il doit être remplacé par le préfixe ErrorMessage dans le code.",
  "ErrorMissingVcpkgRoot": "Impossible de détecter vcpkg-root. Si vous essayez d’utiliser une copie de vcpkg que vous avez créée, vous devez définir la variable d’environnement VCPKG_ROOT pour qu’elle pointe vers une copie clonée de https://github.com/Microsoft/vcpkg.",
  "ErrorNoVSInstance": "Dans le {triplet} triplet : l’instance de Visual Studio valide est introuvable.",
  "ErrorNoVSInstanceAt": "à \"{path}\"",
  "ErrorNoVSInstanceFullVersion": "avec le préfixe de version de l’ensemble d’outils {version}",
  "ErrorNoVSInstanceVersion": "avec {version} de version de l’ensemble d’outils",
  "ErrorRequireBaseline": "Cette instance de vcpkg nécessite un manifeste avec une ligne de base spécifiée afin d'interagir avec les ports. Veuillez ajouter 'builtin-baseline' au manifeste ou ajouter un fichier 'vcpkg-configuration.json' qui redéfinit le registre par défaut.",
  "ErrorRequirePackagesList": "vcpkg install` nécessite une liste de packages à installer en mode classique.",
  "ErrorUnableToDetectCompilerInfo": "vcpkg n’a pas pu détecter les informations du compilateur actif. Voir ci-dessus pour la sortie d’échec CMake.",
  "ErrorVcvarsUnsupported": "Dans triplet {triplet} : l’utilisation de l’invite développeur de Visual Studio n’est pas prise en charge sur les ordinateurs hôtes non Windows.\nDéfinissez 'VCPKG_CMAKE_SYSTEM_NAME' ou 'VCPKG_CHAINLOAD_TOOLCHAIN_FILE' dans le fichier triplet.",
  "ErrorVsCodeNotFound": "Visual Studio Code est introuvable et la variable d’environnement '{env_var}' n’est pas définie ou n’est pas valide.",
  "ErrorVsCodeNotFoundPathExamined": "Les chemins d’accès suivants ont été examinés :",
  "ExcludedPackage": "{spec} exclus",
  "ExpectedCharacterHere": "'{expected}' attendu ici",
  "ExpectedFailOrSkip": "'échec', 'ignorer' ou 'réussite' attendu ici",
  "ExpectedPortName": "nom de port attendu ici",
  "ExpectedTripletName": "nom triplet attendu ici",
  "FailedToProvisionCe": "Échec de l’approvisionnement de vcpkg-ce",
  "FailedToRunToolToDetermineVersion": "Impossible d’exécuter {path} pour déterminer la version {tool_name}.",
  "FailedToStoreBackToMirror": "échec du stockage dans le miroir :",
  "ForceSystemBinariesOnWeirdPlatforms": "La variable d'environnement VCPKG_FORCE_SYSTEM_BINARIES doit être définie sur les plateformes arm, s390x, et ppc64le.",
  "FormattedParseMessageExpression": "sur l’expression : {value}",
  "GenerateMsgErrorParsingFormatArgs": "Analyse de la chaîne de format pour {value} :",
  "GenerateMsgIncorrectComment": "message {value} comporte un commentaire incorrect :",
  "GenerateMsgNoArgumentValue": "{{{value}}} a été spécifié dans un commentaire, mais n’a pas été utilisé dans le message.",
  "GenerateMsgNoCommentValue": "{{{value}}} a été utilisé dans le message, mais n’a pas fait de commentaire.",
  "GitCommandFailed": "échec de l’exécution : {command_line}",
  "GitStatusOutputExpectedFileName": "nom de fichier attendu",
  "GitStatusOutputExpectedNewLine": "nouvelle ligne attendue",
  "GitStatusOutputExpectedRenameOrNewline": "fichier renommé ou nouvelles lignes attendus",
  "GitStatusUnknownFileStatus": "état de fichier inconnu : {value}",
  "GitUnexpectedCommandOutput": "sortie git inattendue",
  "GraphCycleDetected": "Cycle détecté dans le graphique à {package_name} :",
  "HashFileFailureToRead": "échec de lecture du fichier '{path}' pour le hachage : ",
  "HeaderOnlyUsage": "{package_name} est en-tête uniquement et peut être utilisé à partir de CMake via :",
  "IllegalFeatures": "La liste des fonctionnalités n’est pas autorisée dans ce contexte.",
  "IllegalPlatformSpec": "Le qualificateur de plateforme n’est pas autorisé dans ce contexte.",
  "InfoSetEnvVar": "Vous pouvez également définir la variable d’environnement '{env_var}' sur l’éditeur de votre choix.",
  "InstallWithSystemManager": "Vous pouvez peut-être installer cet outil via votre gestionnaire de packages système.",
  "InstallWithSystemManagerMono": "Les utilisateurs d’Ubuntu 18.04 peuvent avoir besoin d’une version plus récente de Mono, disponible sur {url}.",
  "InstallWithSystemManagerPkg": "Vous pouvez peut-être installer cet outil via votre gestionnaire de packages système ({command_line}).",
  "InstallingFromLocation": "-- Installation du port à partir de l’emplacement : {path}",
  "InstallingPackage": "Installation de {action_index}/{count} {spec}...",
  "InternalErrorMessage": "Erreur interne :",
  "InternalErrorMessageContact": "Ouvrez un problème à https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug avec des étapes détaillées pour reproduire le problème.",
  "InvalidArgument": "argument non valide",
  "InvalidArgumentRequiresAbsolutePath": "argument non valide : les arguments de chemin de la configuration binaire '{binary_source}' pour les chaînes de configuration binaires doivent être absolus",
  "InvalidArgumentRequiresBaseUrl": "argument non valide : la configuration binaire '{binary_source}' nécessite une URL de base {base_url} comme premier argument",
  "InvalidArgumentRequiresBaseUrlAndToken": "argument non valide : la configuration binaire '{binary_source}' nécessite au moins une URL de base et un jeton SAS",
  "InvalidArgumentRequiresNoneArguments": "argument invalide : la configuration binaire '{binary_source}' ne prend pas d’arguments",
  "InvalidArgumentRequiresOneOrTwoArguments": "argument non valide : la configuration binaire '{binary_source}' nécessite 1 ou 2 arguments",
  "InvalidArgumentRequiresPathArgument": "argument non valide : la configuration binaire '{binary_source}' nécessite au moins un argument de chemin",
  "InvalidArgumentRequiresPrefix": "argument non valide : la configuration binaire '{binary_source}' nécessite au moins un préfixe",
  "InvalidArgumentRequiresSingleArgument": "argument non valide : la configuration binaire '{binary_source}' ne prend pas plus d’un argument",
  "InvalidArgumentRequiresSingleStringArgument": "argument non valide : la configuration binaire '{binary_source}' attend un seul argument de chaîne",
  "InvalidArgumentRequiresSource": "argument non valide : la configuration binaire '{binary_source}' nécessite une source non vide",
  "InvalidArgumentRequiresSourceArgument": "argument non valide : la configuration binaire '{binary_source}' nécessite au moins un argument source",
  "InvalidArgumentRequiresTwoOrThreeArguments": "argument non valide : la configuration binaire '{binary_source}' nécessite 2 ou 3 arguments",
  "InvalidArgumentRequiresValidToken": "argument non valide : la configuration binaire '{binary_source}' nécessite un jeton SAS sans '?' comme deuxième argument",
  "InvalidFormatString": "format de chaîne non valide : {actual}",
  "JsonErrorFailedToParse": "échec de l’analyse de {path} :",
  "JsonErrorFailedToRead": "échec de la lecture de {path} : {error_msg}",
  "LaunchingProgramFailed": "Lancement de {tool_name} :",
  "LicenseExpressionContainsExtraPlus": "L'expression de la licence SPDX contient un '+' supplémentaire. Ceux-ci ne sont autorisés que directement après un identifiant de licence.",
  "LicenseExpressionContainsInvalidCharacter": "L’expression de licence SPDX contient un caractère non valide (0x{value:02X} '{value}').",
  "LicenseExpressionContainsUnicode": "L’expression de licence SPDX contient un caractère Unicode (U+{value:04X} '{pretty_value}'), mais ces expressions sont ascii uniquement.",
  "LicenseExpressionDocumentRefUnsupported": "L'implémentation actuelle ne prend pas en charge les références DocumentRef- SPDX.",
  "LicenseExpressionExpectCompoundFoundParen": "Composé ou fin de chaîne attendu, parenthèse trouvée",
  "LicenseExpressionExpectCompoundFoundWith": "AND ou OR attendu, WITH trouvé (WITH n’est autorisé qu’après les noms de licences, et non les expressions entre parenthèses).",
  "LicenseExpressionExpectCompoundFoundWord": "AND ou OR attendu, une licence ou un nom d’exception a été trouvé : '{value}'.",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "AND, OR ou WITH attendus, une licence ou un nom d’exception a été trouvé : '{value}'.",
  "LicenseExpressionExpectExceptionFoundCompound": "Nom d’exception attendu, le {value} composé a été trouvé.",
  "LicenseExpressionExpectExceptionFoundEof": "Nom d’exception attendu, fin de la chaîne trouvée",
  "LicenseExpressionExpectExceptionFoundParen": "Nom d’exception attendu, parenthèse trouvée",
  "LicenseExpressionExpectLicenseFoundCompound": "Nom de licence attendu, la {value} composée a été trouvée.",
  "LicenseExpressionExpectLicenseFoundEof": "Nom de licence attendu, fin de la chaîne trouvée",
  "LicenseExpressionExpectLicenseFoundParen": "Nom de licence attendu, parenthèse trouvée",
  "LicenseExpressionImbalancedParens": "Il y avait une parenthèse fermante sans parenthèse ouvrante.",
  "LicenseExpressionUnknownException": "Identificateur d’exception de licence inconnu '{value}'. Les valeurs connues sont répertoriées au https://spdx.org/licenses/exceptions-index.html.",
  "LicenseExpressionUnknownLicense": "Identificateur de licence inconnu '{value}'. Les valeurs connues sont répertoriées au https://spdx.org/licenses/.",
  "LoadingCommunityTriplet": "-- [COMMUNITY] Chargement de la configuration triplet à partir de : {path}",
  "LoadingOverlayTriplet": "-- [OVERLAY] Chargement de la configuration triplet à partir de : {path}",
  "LocalizedMessageMustNotContainIndents": "Le message nommé {value} contient ce qui semble être en retrait qui doit être modifié pour utiliser à la place LocalizedString::append_indent.",
  "LocalizedMessageMustNotEndWithNewline": "Le message nommé {value} se termine par une nouvelle ligne qui doit être ajoutée par mise en forme plutôt que par localisation.",
  "MonoInstructions": "Cela peut être dû à une installation incomplète de mono. La version complète de mono est disponible sur certains systèmes via `sudo apt install mono-complete`. Les utilisateurs d'Ubuntu 18.04 peuvent avoir besoin d'une version plus récente de mono, disponible à l'adresse https://www.mono-project.com/download/stable/.",
  "MsiexecFailedToExtract": "échec de msiexec lors de l’extraction des '{path}' avec le code de lancement ou de sortie {exit_code} et le message :",
  "NoLocalizationForMessages": "Pas de localisation pour les messages suivants :",
  "NoRegistryForPort": "aucun registre configuré pour le port {package_name}",
  "NoteMessage": "Remarque :",
  "ParseControlErrorInfoInvalidFields": "Les champs suivants n’étaient pas attendus :",
  "ParseControlErrorInfoMissingFields": "Les champs suivants sont manquants :",
  "ParseControlErrorInfoTypesEntry": "{value} était censé être {expected}.",
  "ParseControlErrorInfoWhileLoading": "lors du chargement {path} :",
  "ParseControlErrorInfoWrongTypeFields": "Les types des champs suivants sont incorrects :",
  "PortNotInBaseline": "la base de référence ne contient pas d’entrée pour le port {package_name}.",
  "ProcessorArchitectureMalformed": "Échec de l’analyse de %PROCESSOR_ARCHITECTURE% ({arch}) en tant qu’architecture d’UC valide",
  "ProcessorArchitectureMissing": "La variable d’environnement requise %PROCESSOR_ARCHITECTURE% est manquante.",
  "ProcessorArchitectureW6432Malformed": "Échec de l’analyse de %PROCESSOR_ARCHITEW6432% ({arch}) en tant qu’architecture d’UC valide. Retour à %PROCESSOR_ARCHITECTURE%",
  "ProgramReturnedNonzeroExitCode": "Échec de {tool_name} avec le code de sortie : ({exit_code}).",
  "RemovingPackage": "Suppression de {action_index}/{count} {spec}",
  "RestoredPackagesFromVendor": "{count} package(s) restauré(s) à partir de {vendor} dans {elapsed}",
  "ResultsHeader": "Résultats",
  "SeeURL": "Consultez {url} pour plus d'informations.",
  "SettingEnvVar": "-- Définition des variables d’environnement « {env_var} » sur « {url} ».",
  "SourceFieldPortNameMismatch": "Le champ « Source » dans le fichier CONTROL ou le champ « name » dans le fichier vcpkg.json porte le nom {package_name} et ne correspond pas au répertoire de port {path}.",
  "SystemApiErrorMessage": "échec de l’appel {system_api} avec {exit_code} ({error_msg})",
  "ToolFetchFailed": "Impossible de récupérer les {tool_name}.",
  "ToolInWin10": "Cet utilitaire est fourni avec Windows 10 ou une version ultérieure.",
  "UnexpectedErrorDuringBulkDownload": "une erreur inattendue s’est produite lors du téléchargement en bloc.",
  "UnexpectedToolOutput": "{tool_name} ({path}) a produit une sortie inattendue lors de la tentative de détermination de la version :",
  "UnknownBaselineFileContent": "entrée de base de référence non reconnaissable ; 'port:triplet=(fail|skip|pass)' attendu",
  "UnknownBinaryProviderType": "type de fournisseur binaire inconnu : les fournisseurs valides sont 'clear', 'default', 'nuget', 'nugetconfig', 'interactive' et 'files'",
  "UnknownTool": "vcpkg n’a pas de définition de cet outil pour cette plateforme.",
  "UnknownVariablesInTemplate": "argument non valide : le modèle d’URL « {value} » contient des variables inconnues : {list}",
  "UnsupportedSystemName": "Impossible de mapper VCPKG_CMAKE_SYSTEM_NAME '{system_name}' à une plateforme vcvarsall. Les noms de système pris en charge sont ' '', 'Windows' et 'WindowsStore'.",
  "UnsupportedToolchain": "Dans le {triplet} triplet : chaînes d’outils valide introuvablepour l’architecture cible demandée {arch}\n. L’instance de Visual Studio sélectionnée est à : {path}\n. Les combinaisons de chaînes d’outils disponibles sont : {list}.",
  "UpdateBaselineAddBaselineNoManifest": "le commutateur --{option} a été passé, mais il n’existe aucun fichier manifeste auquel ajouter un champ `builtin-baseline`.",
  "UpdateBaselineLocalGitError": "git n’a pas pu analyser HEAD pour le registre vcpkg local à '{path}'",
  "UpdateBaselineNoConfiguration": "'vcpkg.json' ou 'vcpkg-configuration.json' n’existent pas pour la mise à jour.",
  "UpdateBaselineNoExistingBuiltinBaseline": "le fichier manifeste ne contient actuellement pas de champ `builtin-baseline` ; pour en ajouter un, passez le commutateur --{option}.",
  "UpdateBaselineNoUpdate": "registre '{url}' pas mis à jour : '{value}'",
  "UpdateBaselineRemoteGitError": "git n’a pas pu récupérer les '{url}' du dépôt distant",
  "UpdateBaselineUpdatedBaseline": "Registre '{url}' mis à jour : base de référence '{old_value}' -> '{new_value}'",
  "UploadedPackagesToVendor": "{count} package(s) chargé(s) sur {vendor} dans {elapsed}",
  "UseEnvVar": "-- Utilisation de {env_var} dans les variables d’environnement.",
  "UsingCommunityTriplet": "-- Utilisation de la {triplet} triplet de la communauté. La réussite de cette configuration triplet n’est pas garantie.",
  "UsingManifestAt": "Utilisation du fichier manifeste au {path}.",
  "Utf8DecoderDereferencedAtEof": "Utf8Decoder déréférencement à la fin d’une chaîne",
  "VSExaminedInstances": "Les instances de Visual Studio suivantes ont été prises en compte :",
  "VSExaminedPaths": "Les chemins d’accès suivants ont été examinés pour Visual Studio instances :",
  "VSNoInstances": "Instance de Visual Studio complète introuvable",
  "VcpkgCeIsExperimental": "vcpkg-ce (« configurer l’environnement ») est expérimental et peut changer à tout moment.",
  "VcpkgDisallowedClassicMode": "Impossible de localiser un manifeste (vcpkg.json) au-dessus du répertoire de travail actuel.\nCette distribution vcpkg n’a pas d’instance de mode classique.",
  "VcpkgHasCrashed": "vcpkg s’est bloqué. Veuillez créer un problème à https://github.com/microsoft/vcpkg contenant un bref résumé de ce que vous tentiez de faire et des informations suivantes.",
  "VcpkgInvalidCommand": "commande non valide : {command_name}",
  "VcpkgSendMetricsButDisabled": "Réussite de --sendmetrics, mais les indicateurs de performance sont désactivés.",
  "VersionCommandHeader": "version du programme de gestion de package vcpkg {version}\n\nPour plus d’informations sur la licence, consultez LICENSE.txt.",
  "VersionConstraintViolated": "le {spec} de dépendance était censé être au moins {expected_version} version, mais il est actuellement {actual_version}.",
  "VersionInvalidDate": "«{version}» n’est pas une version de date valide. Les dates doivent suivre le format AAAA-MM-JJ et les désambiguïsateurs doivent être des valeurs entières positives séparées par des points sans zéros non significatifs.",
  "VersionInvalidRelaxed": "«{version}» n’est pas une version souple valide (semver avec un nombre d’éléments numériques arbitraire).",
  "VersionInvalidSemver": "«{version}» n’est pas une version sémantique valide, consultez <https://semver.org>.",
  "VersionSpecMismatch": "Échec du chargement du port, car les versions sont incohérentes. Le fichier \"{path}\" contient la version {actual_version}, mais la base de données de versions indique qu’il doit être {expected_version}.",
  "WaitingForChildrenToExit": "En attente de la fermeture des processus enfants...",
  "WaitingToTakeFilesystemLock": "en attente du verrouillage du système de fichiers sur {path}...",
  "WarningMessage": "avertissement : ",
  "WarningMessageMustUsePrintWarning": "Le message nommé {value} commence par avertissement : il doit être remplacé par le préfixe WarningMessage dans le code.",
  "WarningsTreatedAsErrors": "avertissements précédents interprétés comme des erreurs"
}
