{
  "AddArtifactOnlyOne": "'{command_line}' は一度に 1 つの成果物のみを追加できます。",
  "AddFirstArgument": "「{command_line}」の最初の引数は「artifact」または「port」である必要があります。",
  "AddPortRequiresManifest": "'{command_line}' にはアクティブなマニフェスト ファイルが必要です。",
  "AddPortSucceded": "vcpkg.json ファイルへのポートの追加に成功しました。",
  "AddTripletExpressionNotAllowed": "ここではトリプレット式は使用できません。代わりに、「{package_name}:{triplet}」を「{package_name}」に変更することができます。",
  "AddVersionAddedVersionToFile": "バージョン {version} を {path} に追加しました",
  "AddVersionCommitChangesReminder": "変更をコミットしたことを覚えていますか?",
  "AddVersionCommitResultReminder": "結果をコミットすることを忘れないでください。",
  "AddVersionDetectLocalChangesError": "Git 状態出力で予期しない形式が存在するため、ローカルの変更の検出をスキップしています",
  "AddVersionFileNotFound": "必要なファイル {path} が見つかりませんでした",
  "AddVersionFormatPortSuggestion": "'{command_line}' を実行してファイルをフォーマットします",
  "AddVersionIgnoringOptionAll": "ポート名引数が指定されたため、--{option} を無視しています",
  "AddVersionLoadPortFailed": "ポート {package_name} を読み込めません",
  "AddVersionNewFile": "(新しいファイル)",
  "AddVersionNewShaIs": "新しい SHA: {value}",
  "AddVersionNoFilesUpdated": "更新されたファイルはありません",
  "AddVersionNoFilesUpdatedForPort": "{package_name} のファイルが更新されませんでした",
  "AddVersionNoGitSha": "ポート {package_name} の SHA を取得できません",
  "AddVersionOldShaIs": "古い SHA: {value}",
  "AddVersionOverwriteOptionSuggestion": "--{option} を使用してこのチェックをバイパスする",
  "AddVersionPortDoesNotExist": "{package_name} は存在しません",
  "AddVersionPortFilesShaChanged": "{package_name} のチェックイン ファイルが変更されましたが、バージョンは更新されませんでした",
  "AddVersionPortFilesShaUnchanged": "{package_name} のチェックイン ファイルはバージョン {version} から変更されていません",
  "AddVersionPortHasImproperFormat": "{package_name} が正しく書式設定されていません",
  "AddVersionSuggestNewVersionScheme": "ポート \"{new_scheme package_name}\" の \"{old_scheme}\" ではなく、バージョン スキーム \"{package_name}\" を使用します。\n--{option} を使用してこのチェックを無効にします。",
  "AddVersionUnableToParseVersionsFile": "バージョン ファイル {path} を解析できません",
  "AddVersionUncommittedChanges": "{package_name} にコミットされていない変更があります",
  "AddVersionUpdateVersionReminder": "バージョンまたはポートのバージョンを更新したことを覚えていますか?",
  "AddVersionUseOptionAll": "引数のない {command_name} では、すべてのポート バージョンを一度に更新するために --{option} を渡す必要があります",
  "AddVersionVersionAlreadyInFile": "バージョン {version} は既に {path} にあります",
  "AddVersionVersionIs": "バージョン: {version}",
  "AllFormatArgsRawArgument": "書式指定文字列 \"{value}\" に未加工の書式引数が含まれています",
  "AllFormatArgsUnbalancedBraces": "書式指定文字列 \"{value}\" の大かっこが対応していません",
  "AlreadyInstalled": "{spec} は既にインストールされています",
  "AlreadyInstalledNotHead": "{spec} は既にインストールされています -- HEAD からビルドしていません",
  "AttemptingToFetchPackagesFromVendor": "{vendor} から {count} 個のパッケージをフェッチしようとしています",
  "AutoSettingEnvVar": "-- \"{env_var}\"環境変数を自動的に \"{url}\"に設定しています。",
  "BothYesAndNoOptionSpecifiedError": "--no-{option} と --{option} の両方を指定できません。",
  "BuildAlreadyInstalled": "{spec} は既にインストールされています。ビルドする前に {spec} を削除してください。",
  "BuildDependenciesMissing": "ビルド コマンドには、すべての依存関係が既にインストールされている必要があります。\n次の依存関係がありません:",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "ダウンロード済み",
  "BuildResultExcluded": "除外",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "削除済み",
  "BuildResultSucceeded": "成功",
  "BuildResultSummaryHeader": "{triplet} の概要",
  "BuildResultSummaryLine": "{build_result}: {count}",
  "BuildTroubleshootingMessage1": "'git pull' と 'vcpkg update' で最新のポート ファイルを使用していることを確認してください。\nその後、次の場所で既知の問題を確認します:",
  "BuildTroubleshootingMessage2": "次の場所で新しい問題を送信できます:",
  "BuildTroubleshootingMessage3": "バグ報告のタイトルに「[{package_name}] ビルド エラー」を含め、バグの説明に次のバージョン情報を含め、関連する失敗ログを上記から添付します。",
  "BuildTroubleshootingMessage4": "{path} から事前入力されたテンプレートを使用することもできます。",
  "BuildingFromHead": "HEAD から {spec} をビルドしています...",
  "BuildingPackage": "{spec} をビルドしています...",
  "BuildingPackageFailed": "{spec} のビルドに失敗しました: {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "次の依存関係がないためです。",
  "CMakeTargetsUsage": "{package_name} は CMake ターゲットを提供します:",
  "CMakeTargetsUsageHeuristicMessage": "# これはヒューリスティックに生成され、正しくない可能性があります",
  "ChecksFailedCheck": "vcpkg がクラッシュしました。その他の詳細はありません。",
  "ChecksUnreachableCode": "到達できないコードに達しました",
  "ChecksUpdateVcpkg": "bootstrap-vcpkg を再実行して vcpkg を更新すると、このエラーが解決される可能性があります。",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing は、--ci-baseline を介してベースラインが指定されている場合にのみ使用できます。",
  "CiBaselineDisallowedCascade": "回帰: {spec} がカスケードされましたが、渡す必要があります。({path})。",
  "CiBaselineRegression": "回帰: {spec} は {build_result} で失敗しました。必要な場合は、{spec}=fail を {path} に追加します。",
  "CiBaselineRegressionHeader": "回帰:",
  "CiBaselineUnexpectedPass": "成功、失敗リストから削除: {spec} ({path})。",
  "CmakeTargetsExcluded": "注: 追加の {count} 件のターゲットは表示されません。",
  "CommandFailed": "コマンド: \n{command_line}\nに失敗しました。次の結果が返されました:",
  "CompressFolderFailed": "データを圧縮できませんでした",
  "CouldNotDeduceNugetIdAndVersion": "ファイル名 {path} から nuget ID とバージョンを推測できませんでした",
  "CurlReportedUnexpectedResults": "curl から vcpkg に対して予期しない結果が報告されました。vcpkg を続行できません。\n次のテキストに機密情報がないか確認して、Microsoft/vcpkg GitHub で問題を作成し解決に役立ててください。\ncmd: {command_line}\n=== curl の出力 ===\n{actual}\n=== curl の出力の終わり ===",
  "DetectCompilerHash": "トリプレット \"{triplet}\" のコンパイラ ハッシュを検出しています...",
  "DownloadAvailable": "このツールのダウンロード可能なコピーを使用でき、{env_var} の設定を解除すると使用できます。",
  "DownloadedSources": "{spec} 用にダウンロードされたソース",
  "DownloadingVcpkgCeBundle": "vcpkg-ce バンドル {version} をダウンロードしています...",
  "DownloadingVcpkgCeBundleLatest": "最新の vcpkg-ce バンドルをダウンロードしています...",
  "ElapsedForPackage": "{spec} の処理の経過時間: {elapsed}",
  "EmptyLicenseExpression": "SPDX ライセンス式が空でした。",
  "EnvStrFailedToExtract": "次の環境文字列を展開できませんでした:",
  "ErrorDetectingCompilerInfo": "コンパイラ情報の検出中:\n\"{path}\"のログ ファイルの内容は次のとおりです:",
  "ErrorIndividualPackagesUnsupported": "マニフェスト モードでは、「vcpkg install」は個々のパッケージ引数をサポートしていません。\n追加のパッケージをインストールするには、vcpkg.json を編集し、パッケージ引数を指定せずに「vcpkg install」を実行してください。",
  "ErrorInvalidClassicModeOption": "オプション --{option}はクラシック モードではサポートされていません。マニフェストが見つかりませんでした。",
  "ErrorInvalidManifestModeOption": "オプション --{option}はマニフェスト モードではサポートされていません。",
  "ErrorMessage": "エラー: ",
  "ErrorMessageMustUsePrintError": "{value}という名前のメッセージは「error:」で始まります。代わりに、コードの先頭に「ErrorMessage」を追加するように変更する必要があります。",
  "ErrorMissingVcpkgRoot": "vcpkg-root を検出できませんでした。作成した vcpkg のコピーを使用する場合は、VCPKG_ROOT 環境変数を定義して、https://github.com/Microsoft/vcpkg の複製されたコピーを指すようにする必要があります。",
  "ErrorNoVSInstance": "トリプレット内 {triplet}: 有効な Visual Studio インスタンスが見つかりません",
  "ErrorNoVSInstanceAt": "「{path}」で",
  "ErrorNoVSInstanceFullVersion": "ツールセットのバージョン プレフィックス {version} で",
  "ErrorNoVSInstanceVersion": "ツールセット バージョン {version} で",
  "ErrorRequireBaseline": "この vcpkg インスタンスでは、ポートと対話するために指定されたベースラインを持つマニフェストが必要です。マニフェストに「builtin-baseline」を追加するか、既定のレジストリを再定義する「vcpkg-configuration.json」を追加してください。",
  "ErrorRequirePackagesList": "「vcpkg install」には、クラシック モードでインストールするパッケージのリストが必要です。",
  "ErrorUnableToDetectCompilerInfo": "vcpkg はアクティブなコンパイラの情報を検出できませんでした。CMake エラーの出力については、上記を参照してください。",
  "ErrorVcvarsUnsupported": "トリプレット内 {triplet}: Visual Studio の開発者プロンプトの使用は、Windows 以外のホストではサポートされていません。\nトリプレット ファイルに「VCPKG_CMAKE_SYSTEM_NAME」または「VCPKG_CHAINLOAD_TOOLCHAIN_FILE」を定義してください。",
  "ErrorVsCodeNotFound": "Visual Studio Code が見つかりませんでした。環境変数「{env_var}」が設定されていないか、設定された値が無効です。",
  "ErrorVsCodeNotFoundPathExamined": "次のパスが調査されました:",
  "ExcludedPackage": "{spec} を除外しました",
  "ExpectedCharacterHere": "ここには '{expected}' が必要です",
  "ExpectedFailOrSkip": "'fail'、'skip'、または 'pass' が必要です",
  "ExpectedPortName": "ここにはポート名が必要です",
  "ExpectedTripletName": "ここにはトリプレット名が必要です",
  "FailedToProvisionCe": "vcpkg-ce をプロビジョニングできませんでした。",
  "FailedToRunToolToDetermineVersion": "{tool_name} バージョンを判断するために {path} を実行できませんでした。",
  "FailedToStoreBackToMirror": "ミラーに保存できませんでした:",
  "ForceSystemBinariesOnWeirdPlatforms": "環境変数 VCPKG_FORCE_SYSTEM_BINARIES を arm、s390x、および ppc64le プラットフォームで設定する必要があります。",
  "FormattedParseMessageExpression": "式: {value}",
  "GenerateMsgErrorParsingFormatArgs": "{value} の書式指定文字列を解析しています:",
  "GenerateMsgIncorrectComment": "メッセージ {value} のコメントが正しくありません:",
  "GenerateMsgNoArgumentValue": "コメントで指定されている{{{value}}}がメッセージ内にありません。",
  "GenerateMsgNoCommentValue": "{{{value}}} がメッセージ内で使用されていますが、コメントに含まれていません。",
  "GitCommandFailed": "{command_line} を実行できませんでした",
  "GitStatusOutputExpectedFileName": "ファイル名が必要です",
  "GitStatusOutputExpectedNewLine": "改行が必要です",
  "GitStatusOutputExpectedRenameOrNewline": "名前が変更されたファイルまたは改行が必要です",
  "GitStatusUnknownFileStatus": "不明なファイルの状態: {value}",
  "GitUnexpectedCommandOutput": "予期しない Git 出力",
  "GraphCycleDetected": "{package_name} のグラフ内で循環が検出されました:",
  "HashFileFailureToRead": "ハッシュのためにファイル '{path}' を読み取れませんでした: ",
  "HeaderOnlyUsage": "{package_name} はヘッダーのみであり、CMake から次の方法で使用できます:",
  "IllegalFeatures": "このコンテキストでは機能のリストは許可されていません",
  "IllegalPlatformSpec": "プラットフォーム修飾子はこのコンテキストでは許可されていません",
  "InfoSetEnvVar": "環境変数「{env_var}」を選択したエディターに設定することもできます。",
  "InstallWithSystemManager": "このツールは、システム パッケージ マネージャーを使用してインストールできる場合があります。",
  "InstallWithSystemManagerMono": "Ubuntu 18.04 のユーザーは、{url} で入手可能な、新しいバージョンの mono が必要な場合があります。",
  "InstallWithSystemManagerPkg": "このツールは、システム パッケージ マネージャー ({command_line}) を使用してインストールできる場合があります。",
  "InstallingFromLocation": "-- 次の場所からポートをインストールしています: {path}",
  "InstallingPackage": "{action_index}/{count} {spec} をインストールしています...",
  "InternalErrorMessage": "内部エラー: ",
  "InternalErrorMessageContact": "https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug で問題を開き、問題を再現するための詳細な手順を確認してください。",
  "InvalidArgument": "無効な引数です",
  "InvalidArgumentRequiresAbsolutePath": "無効な引数: バイナリ構成文字列のバイナリ構成 '{binary_source}' パス引数は絶対である必要があります",
  "InvalidArgumentRequiresBaseUrl": "無効な引数: バイナリ構成 '{binary_source}' には、最初の引数として {base_url} ベース URL が必要です",
  "InvalidArgumentRequiresBaseUrlAndToken": "無効な引数: バイナリ構成 '{binary_source}' には、少なくともベース URL と SAS トークンが必要です",
  "InvalidArgumentRequiresNoneArguments": "無効な引数: バイナリ構成 '{binary_source}' は引数を受け取りません",
  "InvalidArgumentRequiresOneOrTwoArguments": "無効な引数: バイナリ構成 '{binary_source}' には 1 つまたは 2 つの引数が必要です",
  "InvalidArgumentRequiresPathArgument": "無効な引数: バイナリ構成 '{binary_source}' には少なくともパス引数が必要です",
  "InvalidArgumentRequiresPrefix": "無効な引数: バイナリ構成 '{binary_source}' には少なくともプレフィックスが必要です",
  "InvalidArgumentRequiresSingleArgument": "無効な引数: バイナリ構成 '{binary_source}' は 1 個を超える引数を受け取りません",
  "InvalidArgumentRequiresSingleStringArgument": "無効な引数: バイナリ構成 '{binary_source}' には 1 つの文字列引数が必要です",
  "InvalidArgumentRequiresSource": "無効な引数: バイナリ構成 '{binary_source}' には空でないソースが必要です",
  "InvalidArgumentRequiresSourceArgument": "無効な引数: バイナリ構成 '{binary_source}' には少なくともソース引数が必要です",
  "InvalidArgumentRequiresTwoOrThreeArguments": "無効な引数: バイナリ構成 '{binary_source}' には 2 つまたは 3 つの引数が必要です",
  "InvalidArgumentRequiresValidToken": "無効な引数: バイナリ構成 '{binary_source}' には、2 番目の引数として先頭に '?' がない SAS トークンが必要です",
  "InvalidFormatString": "無効な形式の文字列: {actual}",
  "JsonErrorFailedToParse": "{path} を解析できませんでした:",
  "JsonErrorFailedToRead": "{path} を読み取ることができませんでした: {error_msg}",
  "LaunchingProgramFailed": "{tool_name} を起動しています:",
  "LicenseExpressionContainsExtraPlus": "SPDX ライセンス式に追加の `+` が含まれています。これらは、ライセンス識別子の直後にのみ許可されます。",
  "LicenseExpressionContainsInvalidCharacter": "SPDX ライセンス式に無効な文字が含まれています (0x{value:02X} `{value}`)。",
  "LicenseExpressionContainsUnicode": "SPDX ライセンス式には Unicode 文字 (U+{value:04X} `{pretty_value}`) が含まれていますが、これらの式は ASCII のみです。",
  "LicenseExpressionDocumentRefUnsupported": "現在の実装では、DocumentRef- SPDX 参照はサポートされていません。",
  "LicenseExpressionExpectCompoundFoundParen": "複合または文字列の末尾が必要です。かっこが 1 つ見つかりました。",
  "LicenseExpressionExpectCompoundFoundWith": "AND または OR のいずれかが必要です。WITH が見つかりました (WITH は、かっこで囲まれた式ではなく、ライセンス名の後にのみ許可されます)。",
  "LicenseExpressionExpectCompoundFoundWord": "AND または OR が必要ですが、ライセンス名または例外名が見つかりました: `{value}`。",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "AND、OR、または WITH のいずれかが必要です。ライセンス名または例外名が見つかりました: `{value}`。",
  "LicenseExpressionExpectExceptionFoundCompound": "例外名が必要です。複合 {value} が見つかりました。",
  "LicenseExpressionExpectExceptionFoundEof": "例外名が必要です。文字列の末尾が見つかりました。",
  "LicenseExpressionExpectExceptionFoundParen": "例外名が必要です。かっこが 1 つ見つかりました。",
  "LicenseExpressionExpectLicenseFoundCompound": "ライセンス名が必要です。複合 {value} が見つかりました。",
  "LicenseExpressionExpectLicenseFoundEof": "ライセンス名が必要です。文字列の末尾が見つかりました。",
  "LicenseExpressionExpectLicenseFoundParen": "ライセンス名が必要です。かっこが 1 つ見つかりました。",
  "LicenseExpressionImbalancedParens": "右かっこがあるのに左かっこがありません。",
  "LicenseExpressionUnknownException": "不明なライセンス例外識別子 `{value}` です。既知の値は https://spdx.org/licenses/exceptions-index.html に一覧表示されます",
  "LicenseExpressionUnknownLicense": "不明なライセンス識別子 `{value}`。既知の値は https://spdx.org/licenses/ に一覧表示されます",
  "LoadingCommunityTriplet": "-- [COMMUNITY] 以下からトリプレット構成を読み込んでいます: {path}",
  "LoadingOverlayTriplet": "-- [OVERLAY] 以下からトリプレット構成を読み込んでいます: {path}",
  "LocalizedMessageMustNotContainIndents": "{value}という名前のメッセージにインデントが含まれているようです。このインデントは、LocalizedString::append_indent に変更する必要があります。",
  "LocalizedMessageMustNotEndWithNewline": "{value}という名前のメッセージは改行で終わり、ローカライズではなく書式設定によって追加される必要があります。",
  "MonoInstructions": "Mono のインストールが不完全であることが原因である可能性があります。'sudo apt install mono-complete' を使用して、一部のシステムで Mono をフルで使用できます。Ubuntu 18.04 ユーザーについては、https://www.mono-project.com/download/stable/ で利用可能な新しいバージョンの Mono が必要な場合があります",
  "MsiexecFailedToExtract": "起動または終了コード {exit_code} とメッセージで '{path}' を抽出中に msiexec が失敗しました:",
  "NoLocalizationForMessages": "次のメッセージのローカライズはありません:",
  "NoRegistryForPort": "ポート {package_name} に対してレジストリが構成されていません",
  "NoteMessage": "メモ: ",
  "ParseControlErrorInfoInvalidFields": "次のフィールドが想定外でした:",
  "ParseControlErrorInfoMissingFields": "次のフィールドが見つかりませんでした:",
  "ParseControlErrorInfoTypesEntry": "{value}は{expected}である必要があります",
  "ParseControlErrorInfoWhileLoading": "{path}の読み込み中:",
  "ParseControlErrorInfoWrongTypeFields": "次のフィールドの型が正しくありません:",
  "PortNotInBaseline": "ベースラインにポート {package_name} のエントリが含まれていません",
  "ProcessorArchitectureMalformed": "%PROCESSOR_ARCHITECTURE% ({arch}) を有効な CPU アーキテクチャとして解析できませんでした。",
  "ProcessorArchitectureMissing": "必要な環境変数 %PROCESSOR_ARCHITECTURE% がありません。",
  "ProcessorArchitectureW6432Malformed": "%PROCESSOR_ARCHITEW6432% ({arch}) を有効な CPU アーキテクチャとして解析できませんでした。%PROCESSOR_ARCHITECTURE% にフォールバックしています。",
  "ProgramReturnedNonzeroExitCode": "{tool_name} が終了コード: ({exit_code}) で失敗しました。",
  "RemovingPackage": "{action_index}/{count} {spec} を削除しています",
  "RestoredPackagesFromVendor": "{elapsed} の {vendor} から {count} 個のパッケージを復元しました",
  "ResultsHeader": "結果",
  "SeeURL": "詳細については、{url} を参照してください。",
  "SettingEnvVar": "-- \"{env_var}\"環境変数を\"{url}\"に設定しています。",
  "SourceFieldPortNameMismatch": "CONTROL ファイル内の 'Source' フィールド、または vcpkg.json ファイル内の \"name\" フィールドに名前 {package_name} があり、ポート ディレクトリ {path} と一致しません。",
  "SystemApiErrorMessage": "呼び出し {system_api} が {exit_code} ({error_msg}) で失敗しました",
  "ToolFetchFailed": "{tool_name} をフェッチできませんでした。",
  "ToolInWin10": "このユーティリティは、Windows 10 以降にバンドルされています。",
  "UnexpectedErrorDuringBulkDownload": "一括ダウンロード中に予期しないエラーが発生しました。",
  "UnexpectedToolOutput": "{tool_name} ({path}) は、バージョンを特定しようとしたときに予期しない出力を生成しました:",
  "UnknownBaselineFileContent": "認識できないベースライン エントリ;'port:triplet=(fail|skip|pass)' が必要です",
  "UnknownBinaryProviderType": "不明なバイナリ プロバイダーの種類: 有効なプロバイダーは 'clear'、'default'、'nuget'、'nugetconfig'、'interactive'、'files' です",
  "UnknownTool": "vcpkg に、このプラットフォーム用のこのツールの定義がありません。",
  "UnknownVariablesInTemplate": "無効な引数: URL テンプレー `'{value}` に不明な変数が含まれています: {list}",
  "UnsupportedSystemName": "VCPKG_CMAKE_SYSTEM_NAME「{system_name}」を vcvarsall プラットフォームにマップできませんでした。サポートされているシステム名は、「」、「Windows」、および「WindowsStore」です。",
  "UnsupportedToolchain": "トリプレット内 {triplet}: 要求されたターゲットアーキテクチャ {arch} に対して有効なツールチェーンが見つかりません。\n選択された Visual Studio インスタンスは {path} にあり、\n利用可能なツールチェインの組み合わせは以下の通りです: {list}",
  "UpdateBaselineAddBaselineNoManifest": "--{option} スイッチが渡されましたが、'組み込みベースライン' フィールドを追加するマニフェスト ファイルがありません。",
  "UpdateBaselineLocalGitError": "git は '{path}' のローカル vcpkg レジストリの HEAD を解析できませんでした",
  "UpdateBaselineNoConfiguration": "更新する 'vcpkg.json' も 'vcpkg-configuration.json' も存在しません。",
  "UpdateBaselineNoExistingBuiltinBaseline": "マニフェスト ファイルには現在、'組み込みベースライン' フィールドが含まれていません。追加するには、--{option} スイッチを渡してください。",
  "UpdateBaselineNoUpdate": "レジストリ '{url}' は更新されませんでした: '{value}'",
  "UpdateBaselineRemoteGitError": "git はリモートリポジトリ '{url}' の取り込みに失敗しました",
  "UpdateBaselineUpdatedBaseline": "レジストリ '{url}' を更新しました。ベースライン '{old_value}' -> '{new_value}'",
  "UploadedPackagesToVendor": "{count} 個のパッケージを {elapsed} の {vendor} にアップロードしました",
  "UseEnvVar": "-- 環境変数で {env_var} を使用しています。",
  "UsingCommunityTriplet": "-- コミュニティ トリプレット {triplet} を使用しています。このトリプレット構成の成功は保証されていません。",
  "UsingManifestAt": "{path} でマニフェスト ファイルを使用しています。",
  "Utf8DecoderDereferencedAtEof": "文字列の末尾に逆参照された Utf8Decoder。",
  "VSExaminedInstances": "次の Visual Studio インスタンスが考慮されました。",
  "VSExaminedPaths": "Visual Studio インスタンスについて、次のパスが調べられました。",
  "VSNoInstances": "完全な Visual Studio インスタンスが見つかりませんでした",
  "VcpkgCeIsExperimental": "vcpkg-ce ('環境の構成') は試験段階であり、いつでも変更される可能性があります。",
  "VcpkgDisallowedClassicMode": "現在の作業ディレクトリの上にマニフェスト (vcpkg.json) が見つかりませんでした。\nこの vcpkg ディストリビューションにはクラシック モード インスタンスがありません。",
  "VcpkgHasCrashed": "vcpkg がクラッシュしました。https://github.com/microsoft/vcpkg で問題を作成してください。問題には、実行しようとした作業の簡単な概要と次の情報を記載してください。",
  "VcpkgInvalidCommand": "無効なコマンド: {command_name}",
  "VcpkgSendMetricsButDisabled": "sendmetrics が渡されましたが、メトリクスは無効になっています。",
  "VersionCommandHeader": "vcpkg パッケージ管理プログラムのバージョン {version}\n\nライセンス情報については、LICENSE.txt を参照してください。",
  "VersionConstraintViolated": "依存関係 {spec} が少なくともバージョン {expected_version} であることが必要でしたが、現在は {actual_version} です。",
  "VersionInvalidDate": "'{version}' は有効な日付バージョンではありません。日付は YYYY-MM-DD の形式に従う必要があり、disambiguator は先頭にゼロを付けずにドット区切りの正の整数値にする必要があります。",
  "VersionInvalidRelaxed": "'{version}' は有効な緩やかなバージョンではありません (任意の数値要素数を持つ semver)。",
  "VersionInvalidSemver": "'{version}' は有効なセマンティック バージョンではありません。<https://semver.org> を参照してください。",
  "VersionSpecMismatch": "バージョンに一貫性がないため、ポートを読み込めませんでした。ファイル「{path}」にはバージョン {actual_version} が含まれていますが、バージョン データベースは {expected_version} であることを示しています。",
  "WaitingForChildrenToExit": "子プロセスの終了を待機しています...",
  "WaitingToTakeFilesystemLock": "{path} でファイルシステムのロックを取得するのを待機しています...",
  "WarningMessage": "警告: ",
  "WarningMessageMustUsePrintWarning": "{value}という名前のメッセージは「warning:」で始まります。代わりに、コードの先頭に「WarningMessage」を追加するように変更する必要があります。",
  "WarningsTreatedAsErrors": "以前の警告がエラーとして解釈される"
}
