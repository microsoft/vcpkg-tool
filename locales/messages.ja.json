{
  "AddArtifactOnlyOne": "'{command_line}' は一度に 1 つの成果物のみを追加できます。",
  "AddFirstArgument": "'{command_line}' の最初の引数は 'artifact' または 'port' である必要があります。\n",
  "AddPortRequiresManifest": "'{command_line}' にはアクティブなマニフェスト ファイルが必要です。",
  "AddPortSucceded": "vcpkg.json ファイルへのポートの追加に成功しました。",
  "AddTripletExpressionNotAllowed": "エラー: ここではトリプレット式は使用できません。代わりに、`{package_name}:{triplet}` を `{package_name}` に変更することもできます。",
  "AllFormatArgsRawArgument": "書式指定文字列 \"{value}\" に未加工の書式引数が含まれています",
  "AllFormatArgsUnbalancedBraces": "書式指定文字列 \"{value}\" の大かっこが対応していません",
  "AwsAttemptingToFetchPackages": "AWS から {count} 個のパッケージをフェッチしようとしています",
  "AwsFailedToDownload": "aws をダウンロードできませんでした。終了コード: {exit_code}",
  "AwsRestoredPackages": "{elapsed} の AWS サーバーから {count} 個のパッケージを復元しました",
  "AwsUploadedPackages": "{count} AWS サーバーにバイナリをアップロードしました",
  "BothYesAndNoOptionSpecifiedError": "エラー: --no-{option} と --{option} の両方を指定できません。",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "ダウンロード済み",
  "BuildResultExcluded": "除外",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultSucceeded": "成功",
  "BuildResultSummaryHeader": "{triplet} の概要",
  "BuildResultSummaryLine": "    {build_result}: {count}",
  "BuildingPackageFailed": "building {spec} failed with: {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "due to the following missing dependencies:",
  "ChecksFailedCheck": "vcpkg がクラッシュしました。その他の詳細はありません。",
  "ChecksLineInfo": "{vcpkg_line_info}: ",
  "ChecksUnreachableCode": "到達できないコードに達しました",
  "ChecksUpdateVcpkg": "bootstrap-vcpkg を再実行して vcpkg を更新すると、このエラーが解決される可能性があります。",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing は、--ci-baseline を介してベースラインが指定されている場合にのみ使用できます。",
  "CiBaselineRegression": "回帰: {spec} は {build_result} で失敗しました。必要な場合は、{spec}=fail を {path} に追加します。",
  "CiBaselineRegressionHeader": "回帰:",
  "CiBaselineUnexpectedPass": "成功、失敗リストから削除: {spec} ({path})。",
  "CmakeTargetLinkLibraries": "    target_link_libraries(main PRIVATE {list})",
  "CmakeTargetsExcluded": "    # 注: {count} 個のターゲットが省略されました。",
  "CouldNotDeduceNugetIdAndVersion": "ファイル名 {path} から nuget ID とバージョンを推測できませんでした",
  "CurlReportedUnexpectedResults": "curl から vcpkg に対して予期しない結果が報告され、vcpkg が続行できません。\n次のテキストに機密情報がないか確認して、この問題を修正する助けとして Microsoft/vcpkg GitHub でイシューを作成してください。\ncmd: {command_line}\n=== curl の出力 ===\n{actual}\n=== curl の出力の終わり ===\n",
  "DownloadingVcpkgCeBundle": "vcpkg-ce バンドル {version} をダウンロードしています...",
  "DownloadingVcpkgCeBundleLatest": "最新の vcpkg-ce バンドルをダウンロードしています...",
  "EmptyLicenseExpression": "SPDX ライセンス式が空でした。",
  "ErrorIndividualPackagesUnsupported": "エラー: マニフェスト モードでは、`vcpkg install` は個々のパッケージ引数をサポートしていません。\n追加のパッケージをインストールするには、vcpkg.json を編集し、パッケージ引数を指定せずに `vcpkg install` を実行してください。",
  "ErrorInvalidClassicModeOption": "エラー: オプション --{option} はクラシック モードではサポートされていないため、マニフェストが見つかりませんでした。",
  "ErrorInvalidManifestModeOption": "エラー: オプション --{option} はマニフェスト モードではサポートされていません。",
  "ErrorMessage": "エラー: ",
  "ErrorMissingVcpkgRoot": "エラー: vcpkg-root を検出できませんでした。作成した vcpkg のコピーを使用する場合は、{url} の複製されたコピーを指すように VCPKG_ROOT 環境変数を定義する必要があります。",
  "ErrorNoVSInstance": "エラー: トリプレット {triplet}: 有効な Visual Studio インスタンスが見つかりません",
  "ErrorNoVSInstanceAt": "     \"{path}\" で",
  "ErrorNoVSInstanceFullVersion": "    ツールセットのバージョン プレフィックス {version} で",
  "ErrorNoVSInstanceVersion": "    ツールセット バージョン {version} を使って",
  "ErrorRequireBaseline": "エラー: この vcpkg インスタンスでは、ポートと対話するために指定されたベースラインを持つマニフェストが必要です。マニフェストに `builtin-baseline` を追加するか、既定のレジストリを再定義する `vcpkg-configuration.json` を追加してください。\n",
  "ErrorRequirePackagesList": "エラー: `vcpkg install` には、クラシック モードでインストールするパッケージのリストが必要です。",
  "ErrorRequirePackagesToInstall": "エラー: インストール用のパッケージが一覧表示されておらず、マニフェストが見つかりませんでした。",
  "ErrorVcvarsUnsupported": "エラー: トリプレット {triplet}: Visual Studio の開発者プロンプトの使用は、Windows 以外のホストではサポートされていません。\nトリプレット ファイルに `VCPKG_CMAKE_SYSTEM_NAME` または `VCPKG_CHAINLOAD_TOOLCHAIN_FILE`を定義します。",
  "ExpectedCharacterHere": "ここには '{expected}' が必要です",
  "ExpectedFailOrSkip": "ここには 'fail' または 'skip' が必要です",
  "ExpectedPortName": "ここにはポート名が必要です",
  "ExpectedTripletName": "ここにはトリプレット名が必要です",
  "FailedToProvisionCe": "vcpkg-ce をプロビジョニングできませんでした。",
  "ForceSystemBinariesOnWeirdPlatforms": "環境変数 VCPKG_FORCE_SYSTEM_BINARIES を arm、s390x、および ppc64le プラットフォームで設定する必要があります。",
  "FormattedParseMessageExpression": "    式: {value}",
  "GenerateMsgErrorParsingFormatArgs": "エラー: {value} の書式指定文字列を解析しています:",
  "GenerateMsgIncorrectComment": "メッセージ {value} のコメントが正しくありません:",
  "GenerateMsgNoArgumentValue": "    {{{value}}} がコメントで指定されましたが、メッセージで使用されませんでした。",
  "GenerateMsgNoCommentValue": "    メッセージで {{{value}}} が使用されましたが、コメントされていません。",
  "GraphCycleDetected": "{package_name} のグラフ内で循環が検出されました:",
  "GraphCycleDetectedElement": "    {package_name}",
  "HashFileFailureToRead": "ハッシュのためにファイル '{path}' を読み取れませんでした: {error}",
  "IllegalFeatures": "エラー: このコンテキストでは機能のリストは許可されていません",
  "IllegalPlatformSpec": "エラー: プラットフォーム修飾子はこのコンテキストでは許可されていません",
  "InternalErrorMessage": "内部エラー: ",
  "InternalErrorMessageContact": "https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug で問題を開き、問題を再現するための詳細な手順を確認してください。",
  "LicenseExpressionContainsExtraPlus": "SPDX ライセンス式に追加の `+` が含まれています。これらは、ライセンス識別子の直後にのみ許可されます。",
  "LicenseExpressionContainsInvalidCharacter": "SPDX ライセンス式に無効な文字が含まれています (0x{value:02X} `{value}`)。",
  "LicenseExpressionContainsUnicode": "SPDX ライセンス式には Unicode 文字 (U+{value:04X} `{pretty_value}`) が含まれていますが、これらの式は ASCII のみです。",
  "LicenseExpressionDocumentRefUnsupported": "現在の実装では、DocumentRef- SPDX 参照はサポートされていません。",
  "LicenseExpressionExpectCompoundFoundParen": "複合または文字列の末尾が必要です。かっこが 1 つ見つかりました。",
  "LicenseExpressionExpectCompoundFoundWith": "AND または OR のいずれかが必要です。WITH が見つかりました (WITH は、かっこで囲まれた式ではなく、ライセンス名の後にのみ許可されます)。",
  "LicenseExpressionExpectCompoundFoundWord": "AND または OR が必要ですが、ライセンス名または例外名が見つかりました: `{value}`。",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "AND、OR、または WITH のいずれかが必要です。ライセンス名または例外名が見つかりました: `{value}`。",
  "LicenseExpressionExpectExceptionFoundCompound": "例外名が必要です。複合 {value} が見つかりました。",
  "LicenseExpressionExpectExceptionFoundEof": "例外名が必要です。文字列の末尾が見つかりました。",
  "LicenseExpressionExpectExceptionFoundParen": "例外名が必要です。かっこが 1 つ見つかりました。",
  "LicenseExpressionExpectLicenseFoundCompound": "ライセンス名が必要です。複合 {value} が見つかりました。",
  "LicenseExpressionExpectLicenseFoundEof": "ライセンス名が必要です。文字列の末尾が見つかりました。",
  "LicenseExpressionExpectLicenseFoundParen": "ライセンス名が必要です。かっこが 1 つ見つかりました。",
  "LicenseExpressionImbalancedParens": "右かっこがあるのに左かっこがありません。",
  "LicenseExpressionUnknownException": "不明なライセンス例外識別子 `{value}` です。既知の値は https://spdx.org/licenses/exceptions-index.html に一覧表示されます",
  "LicenseExpressionUnknownLicense": "不明なライセンス識別子 `{value}`。既知の値は https://spdx.org/licenses/ に一覧表示されます",
  "MsiexecFailedToExtract": "起動または終了コード {exit_code} とメッセージで '{path}' を抽出中に msiexec が失敗しました:",
  "NoLocalizationForMessages": "次のメッセージのローカライズはありません:",
  "NoteMessage": "メモ: ",
  "ProcessorArchitectureMalformed": "%PROCESSOR_ARCHITECTURE% ({arch}) を有効な CPU アーキテクチャとして解析できませんでした。",
  "ProcessorArchitectureMissing": "必要な環境変数 %PROCESSOR_ARCHITECTURE% がありません。",
  "ProcessorArchitectureW6432Malformed": "%PROCESSOR_ARCHITEW6432% ({arch}) を有効な CPU アーキテクチャとして解析できませんでした。%PROCESSOR_ARCHITECTURE% にフォールバックしています。",
  "ResultsHeader": "結果",
  "ResultsLine": "    {spec}: {build_result}: {elapsed}",
  "SeeURL": "詳細については、{url} を参照してください。",
  "SuggestNewVersionScheme": "ポート \"{new_scheme package_name}\" の \"{old_scheme}\" ではなく、バージョン スキーム \"{package_name}\" を使用します。\n`--{option}` を使用してこのチェックを無効にします。",
  "UnknownBaselineFileContent": "認識できないベースライン エントリ; 'port:triplet=(fail|skip)' が必要です",
  "UnsupportedSystemName": "エラー: VCPKG_CMAKE_SYSTEM_NAME `{system_name}` を vcvarsall プラットフォームにマップできませんでした。サポートされているシステム名は、\"、`Windows`、および `WindowsStore` です。",
  "UnsupportedToolchain": "エラー: トリプレット {triplet}: 有効なツールチェーンの組み合わせが見つかりません。\n    要求されたターゲット アーキテクチャは {arch}\n    選択した Visual Studio インスタンスは {path}\n    使用可能なツールチェーンの組み合わせは {list}\n",
  "UsingManifestAt": "{path} でマニフェスト ファイルを使用しています。",
  "Utf8DecoderDereferencedAtEof": "文字列の末尾に逆参照された Utf8Decoder。",
  "VSExaminedInstances": "次の Visual Studio インスタンスが考慮されました。",
  "VSExaminedPaths": "Visual Studio インスタンスについて、次のパスが調べられました。",
  "VSNoInstances": "完全な Visual Studio インスタンスが見つかりませんでした",
  "VcpkgCeIsExperimental": "vcpkg-ce ('環境の構成') は試験段階であり、いつでも変更される可能性があります。",
  "VcpkgDisallowedClassicMode": "エラー: 現在の作業ディレクトリの上にマニフェスト (vcpkg.json) が見つかりませんでした。\nこの vcpkg 配布にはクラシック モード インスタンスがありません。",
  "VcpkgHasCrashed": "vcpkg.exe がクラッシュしました。\n次に電子メールを送信してください:\n    {email}\n実行しようとした作業の概要と次のデータ BLOB を含めます:",
  "VcpkgHasCrashedArgument": "{value}|",
  "VcpkgHasCrashedDataBlob": "\nVersion={version}\nEXCEPTION='{error}'\nCMD=",
  "VcpkgInvalidCommand": "無効なコマンド: {command_name}",
  "VcpkgSendMetricsButDisabled": "警告: --sendmetrics が渡されましたが、メトリックは無効になっています。",
  "VersionInvalidDate": "'{version}' は有効な日付バージョンではありません。日付は YYYY-MM-DD の形式に従う必要があり、disambiguator は先頭にゼロを付けずにドット区切りの正の整数値にする必要があります。",
  "VersionInvalidRelaxed": "'{version}' は有効な緩やかなバージョンではありません (任意の数値要素数を持つ semver)。",
  "VersionInvalidSemver": "'{version}' は有効なセマンティック バージョンではありません。<https://semver.org> を参照してください。",
  "VersionSpecMismatch": "エラー: バージョン指定が\n    Path: {path}\n    と一致しなかったため、ポートを読み込めませんでした: {expected_version}\n    実績: {actual_version}",
  "WarningMessage": "警告: ",
  "WarningsTreatedAsErrors": "以前の警告がエラーとして解釈される"
}
