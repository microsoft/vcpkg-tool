{
  "ABaseline": "기준선",
  "ABaselineObject": "기준 개체",
  "ABoolean": "부울",
  "ABuiltinRegistry": "기본 제공 레지스트리",
  "AConfigurationObject": "구성 개체",
  "ADateVersionString": "날짜 버전 문자열",
  "ADefaultFeature": "기본 기능",
  "ADemandObject": "수요 대상",
  "ADependency": "종속성",
  "ADependencyFeature": "종속성의 기능",
  "ADictionaryOfContacts": "연락처 사전",
  "AFeature": "기능",
  "AFeatureName": "기능 이름",
  "AFilesystemRegistry": "파일 시스템 레지스트리",
  "AGitObjectSha": "Git 개체 SHA",
  "AGitReference": "Git 참조(예: 분기)",
  "AGitRegistry": "Git 레지스트리",
  "AGitRepositoryUrl": "Git 리포지토리 URL",
  "AManifest": "매니페스트",
  "AMaximumOfOneAssetReadUrlCanBeSpecified": "최대 하나의 자산 읽기 URL을 지정할 수 있습니다.",
  "AMaximumOfOneAssetWriteUrlCanBeSpecified": "최대 하나의 자산 쓰기 URL을 지정할 수 있습니다.",
  "ANonNegativeInteger": "음이 아닌 정수",
  "APackageName": "패키지 이름",
  "APackagePattern": "패키지 패턴",
  "APackagePatternArray": "패키지 패턴 배열",
  "APath": "경로",
  "APlatformExpression": "플랫폼 표현",
  "ARegistry": "레지스트리",
  "ARegistryImplementationKind": "레지스트리 구현 종류",
  "ARegistryPath": "레지스트리 경로",
  "ARegistryPathMustBeDelimitedWithForwardSlashes": "레지스트리 경로는 단일 슬래시를 경로 구분 기호로 사용해야 합니다.",
  "ARegistryPathMustNotHaveDots": "레지스트리 경로에 'dot' 또는 'dot dot' 경로 요소가 없어야 합니다.",
  "ARegistryPathMustStartWithDollar": "레지스트리 루트임을 나타내려면 레지스트리 경로가 '$'로 시작해야 합니다. 예: '$/foo/bar'.",
  "ARelaxedVersionString": "편안한 버전 문자열",
  "ASemanticVersionString": "의미론적 버전 문자열",
  "ASetOfFeatures": "일련의 기능",
  "AString": "문자열",
  "AStringOrArrayOfStrings": "문자열 또는 문자열 배열",
  "AStringStringDictionary": "\"string\": \"string\" 사전",
  "AUrl": "URL",
  "AVcpkgRepositoryCommit": "vcpkg 리포지토리 커밋",
  "AVersionConstraint": "버전 제약 조건",
  "AVersionDatabaseEntry": "버전 데이터베이스 항목",
  "AVersionObject": "버전 개체",
  "AVersionOfAnyType": "모든 유형의 버전",
  "AddArtifactOnlyOne": "'{command_line}'은(는) 한 번에 하나의 아티팩트만 추가할 수 있습니다.",
  "AddCommandFirstArg": "추가할 첫 번째 매개 변수는 'artifact' 또는 'port'여야 합니다.",
  "AddFirstArgument": "'{command_line}'에 대한 첫 번째 인수는 'artifact' 또는 'port'여야 합니다.",
  "AddPortRequiresManifest": "'{command_line}'에는 활성 매니페스트 파일이 필요합니다.",
  "AddPortSucceeded": "vcpkg.json 파일에 포트 추가에 성공했습니다.",
  "AddRecurseOption": "제거하려는 경우 --recurse 옵션을 사용하여 명령을 실행합니다.",
  "AddTripletExpressionNotAllowed": "삼중항 표현은 여기에서 허용되지 않습니다. 대신 `{package_name}:{triplet}`을 `{package_name}`으로 변경할 수 있습니다.",
  "AddVersionAddedVersionToFile": "버전{version}을(를) {path}에 추가했습니다.",
  "AddVersionArtifactsOnly": "--version은 아티팩트 전용이며 vcpkg add port와 함께 사용할 수 없습니다.",
  "AddVersionCommitChangesReminder": "변경 내용을 커밋하기로 하셨나요?",
  "AddVersionCommitResultReminder": "잊지 말고 결과를 커밋하세요.",
  "AddVersionDetectLocalChangesError": "git 상태 출력에서 예기치 않은 형식으로 인해 로컬 변경 탐지를 건너뜁니다.",
  "AddVersionFileNotFound": "필요한 파일 {path}을(를) 찾을 수 없음",
  "AddVersionFormatPortSuggestion": "'{command_line}'을(를) 실행하여 파일 서식 지정",
  "AddVersionIgnoringOptionAll": "포트 이름 인수가 제공되었으므로 --{option}을(를) 무시합니다.",
  "AddVersionLoadPortFailed": "{package_name} 포트를 로드할 수 없습니다.",
  "AddVersionNewFile": "(새 파일)",
  "AddVersionNewShaIs": "새 SHA: {commit_sha}",
  "AddVersionNoFilesUpdated": "업데이트된 파일이 없습니다.",
  "AddVersionNoFilesUpdatedForPort": "{package_name}에 대해 업데이트된 파일이 없음",
  "AddVersionNoGitSha": "포트 {package_name}에 대한 SHA를 가져올 수 없습니다.",
  "AddVersionOldShaIs": "이전 SHA: {commit_sha}",
  "AddVersionOverwriteOptionSuggestion": "--{option}을(를) 사용하여 이 검사를 바이패스합니다.",
  "AddVersionPortFilesShaChanged": "{package_name}에 대해 체크 인된 파일이 변경되었지만 버전이 업데이트되지 않았습니다.",
  "AddVersionPortFilesShaUnchanged": "{package_name}에 대한 체크 인 파일이 버전 {version}에서 변경되지 않았습니다.",
  "AddVersionPortHasImproperFormat": "{package_name}의 형식이 잘못되었음",
  "AddVersionSuggestVersionDate": "\"{package_name}\"의 버전 형식은 \"version-string\"을 사용하지만 형식은 \"version-date\"로 허용됩니다. 이 형식이 실제로 ISO 8601 날짜인 경우 형식을 \"version-date\"로 변경하고 이 명령을 다시 실행합니다. 그렇지 않으면 이 명령을 다시 실행하고 --skip-version-format-check를 추가하여 이 검사를 사용하지 않도록 설정합니다.",
  "AddVersionSuggestVersionRelaxed": "\"{package_name}\"의 버전 형식은 \"version-string\"을 사용하지만 형식은 \"version\"으로 허용됩니다. 이 포트의 버전이 완화 버전 규칙을 사용하여 정렬 가능한 경우 형식을 \"version\"으로 변경하고 이 명령을 다시 실행합니다. 완화된 버전 규칙은 각 숫자 구성 요소별로 버전을 정렬합니다. 그런 다음 대시 접미사가 있는 버전은 먼저 어휘순으로 정렬됩니다. 더하기 빌드 태그는 무시됩니다. 예:\n1.0 < 1.1-alpha < 1.1-b < 1.1 < 1.1.1 < 1.2+build = 1.2 < 2.0\n특히 대시 접미사는 이후가 아니라 *먼저* 정렬됩니다. 1.0-anything < 1.0\n실제로 의미 체계 부분이 적용되지 않더라도 이 정렬 순서는 의미 체계 버전 관리에서 선택한 순서와 동일합니다(https://semver.org 참조).\n이 포트의 버전이 이러한 규칙에 따라 정렬되지 않은 경우 이 명령을 다시 실행하고 --skip-version-format-check를 추가하여 이 검사를 사용하지 않도록 설정합니다.",
  "AddVersionUnableToParseVersionsFile": "버전 파일 {path}을(를) 구문 분석할 수 없음",
  "AddVersionUncommittedChanges": "{package_name}에 대해 커밋되지 않은 변경 내용이 있습니다.",
  "AddVersionUpdateVersionReminder": "버전이나 포트 버전을 업데이트 하셨나요?",
  "AddVersionUseOptionAll": "인수가 없는 {command_name}에서 모든 포트 버전을 한 번에 업데이트하려면 --{option}을(를) 전달해야 합니다.",
  "AddVersionVersionAlreadyInFile": "버전{version}이(가) 이미 {path}에 있습니다.",
  "AddVersionVersionIs": "버전: {version}",
  "AddingCompletionEntry": "{path}에 vcpkg 완료 항목을 추가하는 중입니다.",
  "AdditionalPackagesToExport": "이 작업을 완료하려면 추가 패키지(*)를 내보내야 합니다.",
  "AdditionalPackagesToRemove": "이 작업을 완료하려면 추가 패키지(*)를 제거해야 합니다.",
  "AllFormatArgsRawArgument": "형식 문자열 \"{value}\"에는 원시 형식 인수가 포함되어 있습니다.",
  "AllFormatArgsUnbalancedBraces": "형식 문자열 \"{value}\"의 불균형 중괄호",
  "AllPackagesAreUpdated": "설치된 모든 패키지는 로컬 포트 파일을 사용하여 최신 상태입니다.",
  "AlreadyInstalled": "{spec}이(가) 이미 설치되어 있습니다.",
  "AlreadyInstalledNotHead": "{spec}은(는) 이미 설치되어 있습니다 -- HEAD에서 빌드하지 않음",
  "AmbiguousConfigDeleteConfigFile": "매니페스트 및 구성 파일 모두에서 제공하는 모호한 vcpkg 구성입니다.\n-- 구성 파일 {path} 삭제",
  "AnArrayOfDefaultFeatures": "기본 기능 배열",
  "AnArrayOfDependencies": "종속성 배열",
  "AnArrayOfDependencyOverrides": "종속성 재정의 배열",
  "AnArrayOfFeatures": "기능 배열",
  "AnArrayOfIdentifers": "식별자 배열",
  "AnArrayOfOverlayPaths": "오버레이 경로의 배열",
  "AnArrayOfOverlayTripletsPaths": "오버레이 삼중 경로의 배열",
  "AnArrayOfRegistries": "레지스트리 배열",
  "AnArrayOfVersions": "버전의 배열",
  "AnArtifactsGitRegistryUrl": "아티팩트 Git 레지스트리 URL",
  "AnArtifactsRegistry": "아티팩트 레지스트리",
  "AnExactVersionString": "정확한 버전 문자열",
  "AnIdentifer": "식별자",
  "AnObjectContainingVcpkgArtifactsMetadata": "vcpkg-artifacts 메타데이터를 포함하는 개체",
  "AnOverlayPath": "오버레이 경로",
  "AnOverlayTripletsPath": "삼중 경로",
  "AnOverride": "재정의",
  "AnSpdxLicenseExpression": "SPDX 라이선스 식",
  "AndroidHomeDirMissingProps": "{env_var} 디렉터리에 누락된 source.properties: {path}",
  "AnotherInstallationInProgress": "시스템에서 다른 설치가 진행 중이며 다시 시도하기 전에 6초 동안 절전 모드로 전환됩니다.",
  "AppliedUserIntegration": "이 vcpkg 루트에 대한 사용자 차원의 통합을 적용했습니다.",
  "ApplocalProcessing": "종속성을 배포하는 중",
  "ArtifactsBootstrapFailed": "vcpkg-artifacts가 설치되어 있지 않으며 부트스트랩할 수 없습니다.",
  "ArtifactsNotInstalledReadonlyRoot": "vcpkg-artifacts가 설치되어 있지 않으며, VCPKG_ROOT가 읽기 전용으로 간주되어 vcpkg-artifacts를 설치할 수 없습니다. 'one liner'를 사용하여 vcpkg를 다시 설치하여 이 문제를 해결할 수 있습니다.",
  "ArtifactsOptionIncompatibility": "--{option}은(는) 아티팩트 찾기에 영향을 주지 않습니다.",
  "ArtifactsOptionJson": "환경 변수 및 기타 속성이 기록되는 JSON 파일의 전체 경로",
  "ArtifactsOptionMSBuildProps": "MSBuild 속성이 기록될 파일의 전체 경로",
  "ArtifactsOptionVersion": "일치시킬 버전 또는 버전 범위입니다. 아티팩트에 대해서만 유효합니다.",
  "ArtifactsOptionVersionMismatch": "--version 스위치의 수는 명명된 아티팩트의 수와 일치해야 합니다.",
  "ArtifactsSwitchARM": "아티팩트 획득 시 ARM에 호스트 감지 강제 적용",
  "ArtifactsSwitchARM64": "아티팩트 획득 시 ARM64에 호스트 감지 강제 적용",
  "ArtifactsSwitchAllLanguages": "아티팩트 획득 시 모든 언어 파일 획득",
  "ArtifactsSwitchForce": "아티팩트가 이미 획득된 경우 다시 획득 강제 적용",
  "ArtifactsSwitchFreebsd": "아티팩트 획득 시 FreeBSD에 호스트 감지 강제 적용",
  "ArtifactsSwitchLinux": "아티팩트 획득 시 Linux에 호스트 감지 강제 적용",
  "ArtifactsSwitchOnlyOneHostPlatform": "하나의 호스트 플랫폼(--x64, --x86, --arm, --arm64)만 설정할 수 있습니다.",
  "ArtifactsSwitchOnlyOneOperatingSystem": "하나의 운영 체제(--windows, --osx, --linux, --freebsd)만 설정할 수 있습니다.",
  "ArtifactsSwitchOnlyOneTargetPlatform": "하나의 대상 플랫폼(--target:x64, --target:x86, --target:arm, --target:arm64)만 설정할 수 있습니다.",
  "ArtifactsSwitchOsx": "아티팩트 획득 시 MacOS에 호스트 감지 강제 적용",
  "ArtifactsSwitchTargetARM": "아티팩트 획득 시 대상 감지를 ARM으로 설정",
  "ArtifactsSwitchTargetARM64": "아티팩트 획득 시 대상 감지를 ARM64로 설정",
  "ArtifactsSwitchTargetX64": "아티팩트 획득 시 대상 감지를 x64로 설정",
  "ArtifactsSwitchTargetX86": "아티팩트 획득 시 대상을 x86으로 설정",
  "ArtifactsSwitchWindows": "아티팩트 획득 시 Windows에 호스트 감지 강제 적용",
  "ArtifactsSwitchX64": "아티팩트 획득 시 x64에 호스트 감지 강제 적용",
  "ArtifactsSwitchX86": "아티팩트 획득 시 x86에 호스트 감지 강제 적용",
  "AssetCacheProviderAcceptsNoArguments": "예기치 않은 인수: '{value}'에는 인수가 허용되지 않음",
  "AssetSourcesArg": "자산 캐싱 원본. 'vcpkg help assetcaching' 참조",
  "AttemptingToSetBuiltInBaseline": "vcpkg-configuration.json.에서 기본 레지스트리를 재정의하는 동안 vcpkg.json에서 기본 제공 기준을 설정하려고 합니다.\nvcpkg-configuration.json의 기본 레지스트리가 사용됩니다.",
  "AuthenticationMayRequireManualAction": "하나 이상의 {vendor} 자격 증명 제공자가 직접 조치를 요청했습니다. 상호 작용을 허용하려면 이진 파일 원본 'interactive'를 추가하세요.",
  "AutoSettingEnvVar": "-- 자동으로 {env_var} 환경 변수를 \"{url}\"로 설정합니다.",
  "AutomaticLinkingForMSBuildProjects": "이제 모든 MSBuild C++ 프로젝트에 설치된 라이브러리를 #include할 수 있습니다. 연결은 자동으로 처리됩니다. 새 라이브러리를 설치하면 즉시 사용할 수 있습니다.",
  "AutomaticLinkingForVS2017AndLater": "이제 Visual Studio 2017 이상에서 설치된 라이브러리를 #포함할 수 있습니다. 연결은 자동으로 처리됩니다. 새 라이브러리를 설치하면 즉시 사용할 수 있습니다.",
  "AvailableHelpTopics": "사용 가능한 도움말 항목:",
  "AzUrlAssetCacheRequiresBaseUrl": "예기치 않은 인수: 자산 구성 'azurl'에는 기본 URL이 필요",
  "AzUrlAssetCacheRequiresLessThanFour": "예기치 않은 인수: 자산 구성 'azurl'에는 4개 미만의 인수가 필요",
  "BaselineConflict": "매니페스트 파일에서 vcpkg-configuration.default-registry를 지정하면 기본 제공 기준과 충돌합니다.\n충돌하는 설정 중 하나를 제거하세요.",
  "BaselineGitShowFailed": "'{commit_sha}' 커밋에서 기준을 체크 아웃하는 동안 `git show` versions/baseline.json에 실패했습니다. 이 문제는 'git fetch'로 커밋을 페치하여 해결할 수 있습니다.",
  "BaselineMissing": "기준 버전을 찾을 수 없습니다. 실행:\nvcpkg x-add-version {package_name}\ngit add versions\ngit commit -m \"Update version database\"\n{version}을(를) 기본 버전으로 설정합니다.",
  "BinarySourcesArg": "이진 캐싱 소스. 'vcpkg help binarycaching' 참조",
  "BinaryWithInvalidArchitecture": "{path}\n 필요한 항목: {expected}, 실제 항목: {actual}",
  "BuildAlreadyInstalled": "{spec}이(가) 이미 설치되어 있습니다. 빌드를 시도하기 전에 {spec}을(를) 제거하세요.",
  "BuildDependenciesMissing": "빌드 명령어를 사용하려면 모든 종속 항목이 이미 설치되어 있어야 합니다.\n다음 종속 항목이 누락되었습니다.",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "다운로드함",
  "BuildResultExcluded": "제외됨",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "제거됨",
  "BuildResultSucceeded": "성공",
  "BuildResultSummaryHeader": "{triplet}에 대한 요약",
  "BuildResultSummaryLine": "{build_result}: {count}",
  "BuildTreesRootDir": "Buildtrees 디렉터리(실험적)",
  "BuildTroubleshootingMessage1": "'git pull' 및 'vcpkg update'와 함께 최신 포트 파일을 사용하고 있는지 확인하세요.\n그런 후 다음에서 알려진 문제를 확인합니다.",
  "BuildTroubleshootingMessage2": "다음 위치에서 새 문제를 제출할 수 있습니다.",
  "BuildTroubleshootingMessage3": "버그 보고서 제목에 '[{package_name}] 빌드 오류'를 포함하고, 버그 설명에 다음 버전 정보를 포함하고, 위의 관련 오류 로그를 첨부합니다.",
  "BuildTroubleshootingMessageGH": "실행하여 문제를 제출할 수도 있습니다(GitHub CLI를 설치해야 합니다):",
  "BuildingFromHead": "HEAD에서 {spec} 빌드 중...",
  "BuildingPackage": "{spec} 구축 중...",
  "BuildingPackageFailed": "{build_result}(으)로 {spec}을(를) 빌드하지 못했습니다.",
  "BuildingPackageFailedDueToMissingDeps": "다음과 같은 누락된 종속성 때문에",
  "BuiltInTriplets": "vcpkg 기본 제공 Triplets:",
  "BuiltWithIncorrectArchitecture": "다음 파일은 잘못된 아키텍처로 빌드되었습니다.",
  "CISettingsExclude": "건너뛸 포트를 쉼표로 구분한 목록",
  "CISettingsOptCIBase": "ci.baseline.txt 파일의 경로입니다. 포트를 건너뛰고 회귀를 검색하는 데 사용됩니다.",
  "CISettingsOptExclude": "건너뛸 포트를 쉼표로 구분한 목록",
  "CISettingsOptFailureLogs": "오류 로그를 복사할 디렉터리",
  "CISettingsOptHostExclude": "호스트 3자리 ID에 대해 건너뛸 포트를 쉼표로 구분한 목록",
  "CISettingsOptOutputHashes": "결정된 모든 패키지 해시를 출력할 파일",
  "CISettingsOptParentHashes": "변경된 패키지 집합을 줄이기 위해 부모 CI 상태에 대한 패키지 해시를 읽는 파일",
  "CISettingsOptXUnit": "XUnit 형식으로 결과를 출력하는 파일",
  "CISettingsVerifyGitTree": "각 Git 트리 개체가 선언된 버전과 일치하는지 확인합니다(매우 느림).",
  "CISettingsVerifyVersion": "오류만 아니라 각 포트의 결과를 인쇄합니다.",
  "CISkipInstallation": "다음 패키지는 이미 설치되어 있으며 다시 빌드되지 않습니다.",
  "CISwitchOptAllowUnexpectedPassing": "'통과, 실패 목록에서 제거' 결과를 표시하지 않습니다.",
  "CISwitchOptDryRun": "실행하지 않고 계획 출력",
  "CISwitchOptRandomize": "설치 순서를 임의로 지정합니다.",
  "CISwitchOptSkipFailures": "ci.baseline.txt에서 '=fail'로 표시된 포트를 건너뜁니다.",
  "CISwitchOptXUnitAll": "XUnit 출력에서 변경되지 않은 포트를 보고합니다.",
  "CMakePkgConfigTargetsUsage": "{package_name}은(는) pkg-config 모듈을 제공합니다.",
  "CMakeTargetsUsage": "{package_name}은 CMake 대상을 제공합니다.",
  "CMakeTargetsUsageHeuristicMessage": "# 이 값은 추론적으로 생성되며 올바르지 않을 수 있습니다.",
  "CMakeToolChainFile": "CMake 프로젝트는 \"-DCMAKE_TOOLCHAIN_FILE={path}\"를 사용해야 합니다.",
  "CMakeUsingExportedLibs": "CMake 프로젝트에서 내보낸 라이브러리를 사용하려면 CMake 명령줄에 {value}을(를) 추가하세요.",
  "CheckedOutGitSha": "Git SHA: {commit_sha} 체크 아웃됨",
  "CheckedOutObjectMissingManifest": "체크 아웃된 개체에 CONTROL 파일 또는 vcpkg.json 파일이 없습니다.",
  "ChecksFailedCheck": "vcpkg가 충돌했습니다. 추가 정보가 없습니다.",
  "ChecksUnreachableCode": "연결할 수 없는 코드에 도달했습니다",
  "ChecksUpdateVcpkg": "bootstrap-vcpkg를 다시 실행하여 vcpkg를 업데이트하면 이 오류가 해결될 수 있습니다.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing은 --ci-baseline을 통해 기준선을 제공하는 경우에만 사용할 수 있습니다.",
  "CiBaselineDisallowedCascade": "회귀: {spec} 단계식이지만 통과해야 합니다. ({path}).",
  "CiBaselineIndependentRegression": "회귀: {build_result}(으)로 독립 {spec}이(가) 실패했습니다.",
  "CiBaselineRegression": "회귀: {spec}이(가) {build_result}(으)로 실패했습니다. 필요한 경우 {spec}=fail를 {path}에 추가합니다.",
  "CiBaselineRegressionHeader": "회귀:",
  "CiBaselineUnexpectedFail": "회귀: {spec}이(가) 실패로 표시되었지만 {triplet}에는 지원되지 않습니다.",
  "CiBaselineUnexpectedFailCascade": "회귀: {spec}이(가) 실패로 표시되었지만 {triplet}에 대해 하나의 종속성이 지원되지 않습니다.",
  "CiBaselineUnexpectedPass": "통과, FAIL LIST에서 제거: {spec}({path}).",
  "ClearingContents": "{path} 내용을 지우는 중",
  "CmakeTargetsExcluded": "{count}개의 추가 대상이 표시되지 않습니다.",
  "CmdAcquireExample1": "vcpkg acquire <아티팩트>",
  "CmdAcquireProjectSynopsis": "매니페스트에서 참조하는 모든 아티팩트 가져오기",
  "CmdAcquireSynopsis": "명명된 아티팩트 획득",
  "CmdActivateSynopsis": "매니페스트에서 아티팩트 활성화",
  "CmdAddExample1": "vcpkg add port <포트 이름>",
  "CmdAddExample2": "vcpkg add artifact <아티팩트 이름>",
  "CmdAddSynopsis": "매니페스트에 종속성 추가",
  "CmdAddVersionExample1": "vcpkg x-add-version <포트 이름>",
  "CmdAddVersionOptAll": "모든 포트의 버전을 처리합니다.",
  "CmdAddVersionOptOverwriteVersion": "기존 버전의 'git-tree'를 덮어씁니다.",
  "CmdAddVersionOptSkipFormatChk": "vcpkg.json 파일의 서식 검사를 건너뜁니다.",
  "CmdAddVersionOptSkipVersionFormatChk": "버전 형식 검사를 건너뜁니다.",
  "CmdAddVersionOptVerbose": "오류만이 아니라 성공 메시지를 인쇄합니다.",
  "CmdAddVersionSynopsis": "버전 데이터베이스에 버전 추가",
  "CmdBootstrapStandaloneSynopsis": "vcpkg 이진 파일에서만 vcpkg 루트를 부트스트랩합니다.",
  "CmdBuildExample1": "vcpkg build <포트 사양>",
  "CmdBuildExternalExample1": "vcpkg build-external <포트 이름> <원본 경로>",
  "CmdBuildExternalExample2": "vcpkg build-external zlib2 C:\\path\\to\\dir\\with\\vcpkg.json",
  "CmdBuildExternalSynopsis": "경로에서 포트를 빌드합니다.",
  "CmdBuildSynopsis": "포트 빌드",
  "CmdCheckSupportExample1": "vcpkg x-check-support <포트 이름>",
  "CmdCheckSupportSynopsis": "포트를 빌드하지 않고도 지원되는지 테스트",
  "CmdCiCleanSynopsis": "CI 실행을 준비하기 위해 모든 파일 지우기",
  "CmdCiSynopsis": "CI 테스트를 위해 모든 포트 빌드 시도",
  "CmdCiVerifyVersionsSynopsis": "버전 데이터베이스의 무결성 확인",
  "CmdCreateExample1": "vcpkg create <포트 이름> <uri>",
  "CmdCreateExample2": "vcpkg create my-fancy-port https://example.com/sources.zip",
  "CmdCreateExample3": "vcpkg create <포트 이름> <uri> <다운로드된 파일이름>",
  "CmdDeactivateSynopsis": "현재 셸에서 모든 아티팩트 활성화 제거",
  "CmdDependInfoExample1": "vcpkg depend-info <포트 이름>",
  "CmdDependInfoFormatConflict": "충돌하는 형식이 지정되었습니다. --format, --dgml 또는 --dot 중 하나만 허용됩니다.",
  "CmdDependInfoFormatHelp": "출력 형식, `list', `tree`, `mermaid`, `dot` 또는 `dgml` 중 하나 선택",
  "CmdDependInfoFormatInvalid": "--format={value}은(는) 인식할 수 있는 형식이 아닙니다. --format은 `list`, `tree`, `mermaid`, `dot` 또는 `dgml` 중 하나여야 합니다.",
  "CmdDependInfoOptDepth": "`list` 출력에 재귀 깊이를 표시합니다.",
  "CmdDependInfoOptMaxRecurse": "최대 재귀 깊이를 설정합니다. 기본값은 제한이 없습니다.",
  "CmdDependInfoOptSort": "`list` 형식, `lexicographical`, `topological`(기본값), `reverse` 중 하나에 대한 정렬 순서를 선택합니다.",
  "CmdDependInfoShowDepthFormatMismatch": "--show-depth는 `list` 및 `tree` 형식에서만 사용할 수 있습니다.",
  "CmdDependInfoXtreeTree": "--sort=x-tree는 트리 이외의 형식과 함께 사용할 수 없습니다.",
  "CmdDownloadExample1": "vcpkg x-download <filepath> <sha512> --url=https://...",
  "CmdDownloadExample2": "vcpkg x-download <파일경로> --sha512=<sha512> --url=https://...",
  "CmdDownloadExample3": "vcpkg x-download <filepath> --skip-sha512 --url=https://...",
  "CmdDownloadSynopsis": "파일 다운로드",
  "CmdEditExample1": "vcpkg edit <포트 이름>",
  "CmdEditOptAll": "포트별 빌드 트리 하위 폴더뿐만 아니라 포트로 편집기를 엽니다.",
  "CmdEditOptBuildTrees": "포트별 빌드 트리 하위 폴더로 편집기 열기",
  "CmdEnvOptions": "설치된 {path}을(를) {env_var}에 추가합니다.",
  "CmdExportEmptyPlan": "제로 패키지 내보내기 생성을 거부합니다. 내보내기 전에 패키지를 설치하세요.",
  "CmdExportExample1": "vcpkg export <port names> [--nuget] [--directory=out_dir]",
  "CmdExportOpt7Zip": "7zip(.7z) 파일로 내보냅니다.",
  "CmdExportOptChocolatey": "Chocolatey 패키지를 내보냅니다(실험적).",
  "CmdExportOptDebug": "프리팹 디버그 사용",
  "CmdExportOptDryRun": "실제로 내보내지 않습니다.",
  "CmdExportOptIFW": "IFW 기반 설치 관리자로 내보냅니다.",
  "CmdExportOptInstalled": "설치된 모든 패키지를 내보냅니다.",
  "CmdExportOptMaven": "Maven 사용 설정",
  "CmdExportOptNuget": "NuGet 패키지를 내보냅니다.",
  "CmdExportOptPrefab": "Prefab 형식으로 내보냅니다.",
  "CmdExportOptRaw": "압축되지 않은 디렉터리로 내보냅니다.",
  "CmdExportOptZip": "Zip 파일로 내보냅니다.",
  "CmdExportSettingChocolateyMaint": "내보낸 Chocolatey 패키지의 관리자(실험적)",
  "CmdExportSettingChocolateyVersion": "내보낸 Chocolatey 패키지에 추가할 버전 접미사(실험적)",
  "CmdExportSettingConfigFile": "설치 관리자 구성의 임시 파일 경로",
  "CmdExportSettingInstallerPath": "내보낸 설치 관리자의 파일 경로",
  "CmdExportSettingNugetDesc": "내보낸 NuGet 패키지에 대한 설명",
  "CmdExportSettingNugetID": "내보낸 NuGet 패키지의 ID(재정의 --output)",
  "CmdExportSettingNugetVersion": "내보낸 NuGet 패키지의 버전",
  "CmdExportSettingOutput": "출력 이름(파일 이름을 구성하는 데 사용)",
  "CmdExportSettingOutputDir": "생성된 아티팩트용 출력 디렉터리",
  "CmdExportSettingPkgDir": "다시 압축한 패키지의 임시 디렉터리 경로",
  "CmdExportSettingPrefabArtifactID": "아티팩트 ID는 Maven 사양에 따른 프로젝트의 이름임",
  "CmdExportSettingPrefabGroupID": "GroupId는 Maven 사양에 따라 프로젝트를 고유하게 식별",
  "CmdExportSettingPrefabVersion": "버전은 Maven 사양에 따른 프로젝트의 이름임",
  "CmdExportSettingRepoDir": "내보낸 리포지토리의 디렉터리 경로",
  "CmdExportSettingRepoURL": "온라인 설치 관리자의 원격 리포지토리 URL",
  "CmdExportSettingSDKMinVersion": "Android 최소 지원 SDK 버전",
  "CmdExportSettingSDKTargetVersion": "Android 대상 SDK 버전",
  "CmdExportSynopsis": "설치된 포트의 독립 실행형 배포를 만듭니다.",
  "CmdFetchOptXStderrStatus": "상태/다운로드 메시지를 stdout이 아닌 stderr로 보냅니다(오류/실패는 여전히 stdout으로 이동).",
  "CmdFetchSynopsis": "시스템 또는 인터넷에서 항목을 가져옵니다.",
  "CmdFindExample1": "vcpkg find port <포트 이름>",
  "CmdFindExample2": "vcpkg find artifact <아티팩트 이름>",
  "CmdFindSynopsis": "설치 또는 활성화될 수 있는 포트 또는 아티팩트 찾습니다.",
  "CmdFormatManifestExample1": "vcpkg format-manifest <vcpkg.json 경로>",
  "CmdFormatManifestOptAll": "모든 포트의 매니페스트 파일에 서식을 지정합니다.",
  "CmdFormatManifestOptConvertControl": "CONTROL 파일을 매니페스트 파일로 변환합니다.",
  "CmdFormatManifestSynopsis": "vcpkg.json 정리",
  "CmdGenerateMSBuildPropsExample1": "vcpkg generate-msbuild-props --msbuild-props <경로>",
  "CmdGenerateMSBuildPropsExample2": "vcpkg generate-msbuild-props --msbuild-props out.props",
  "CmdGenerateMSBuildPropsSynopsis": "msbuild .props 파일을 가져오지 않고 매니페스트의 아티팩트 종속성을 활성화하는 것처럼 생성",
  "CmdGenerateMessageMapOptNoOutputComments": "메시지 맵을 생성할 때 주석을 제외합니다(영어 지역화 파일을 생성하는 데 유용).",
  "CmdHashExample1": "vcpkg hash <경로>",
  "CmdHashExample2": "vcpkg hash <경로> SHA256",
  "CmdHashSynopsis": "파일의 SHA256 또는 SHA512 가져오기",
  "CmdHelpCommandSynopsis": "Displays help detail for <명령>",
  "CmdHelpCommands": "help <명령>",
  "CmdHelpCommandsSynopsis": "여기에 나열되지 않은 드문 명령을 포함하여 명령의 전체 목록 표시",
  "CmdHelpTopic": "help <토픽>",
  "CmdInfoOptInstalled": "(실험적) 사용 가능한 패키지가 아닌 설치된 패키지를 보고합니다.",
  "CmdInfoOptTransitive": "(실험적) 설치된 패키지의 종속성도 보고합니다.",
  "CmdInitRegistryExample1": "vcpkg x-init-registry <경로>",
  "CmdInitRegistrySynopsis": "빈 Git 레지스트리 만들기",
  "CmdInstallExample1": "vcpkg install <포트 이름> <포트 이름>...",
  "CmdIntegrateSynopsis": "vcpkg를 컴퓨터, 프로젝트 또는 셸과 통합합니다.",
  "CmdListExample2": "vcpkg list <필터>",
  "CmdNewExample1": "vcpkg new --name=example --version=1.0",
  "CmdNewOptApplication": "애플리케이션 매니페스트를 만듭니다(이름 또는 버전이 필요하지 않음).",
  "CmdNewOptSingleFile": "vcpkg-configuration.json을 vcpkg.json에 포함",
  "CmdNewOptVersionDate": "--version을 ISO 8601 날짜로 해석합니다. (YYYY-MM-DD)",
  "CmdNewOptVersionRelaxed": "--version을 완화 숫자 버전(점으로 구분된 음수가 아닌 수)으로 해석합니다.",
  "CmdNewOptVersionString": "--version을 순서 지정 동작이 없는 문자열로 해석합니다.",
  "CmdNewSettingName": "새 매니페스트의 이름",
  "CmdNewSettingVersion": "새 매니페스트의 버전",
  "CmdNewSynposis": "새 매니페스트를 만듭니다.",
  "CmdOwnsExample1": "vcpkg owns <패턴>",
  "CmdPackageInfoExample1": "vcpkg x-package-info <패키지 이름>...",
  "CmdPortsdiffExample1": "vcpkg portsdiff <분기 이름>",
  "CmdPortsdiffExample2": "vcpkg portsdiff <원본> <대상>",
  "CmdPortsdiffSynopsis": "커밋 간 포트 버전의 변경 내용 차이",
  "CmdRegenerateOptDryRun": "실제로 작업을 수행하지 않고, 수행할 작업을 표시만 합니다.",
  "CmdRegenerateOptForce": "확인 없이 (잠재적으로 위험한) 작업을 진행합니다.",
  "CmdRegenerateOptNormalize": "사용 중단 수정을 적용합니다.",
  "CmdRemoveExample1": "vcpkg remove <패키지 이름>...",
  "CmdRemoveOptDryRun": "제거할 패키지를 인쇄하지만 제거하지는 않습니다.",
  "CmdRemoveOptOutdated": "기본 제공 레지스트리와 일치하지 않는 버전이 있는 모든 패키지를 제거합니다.",
  "CmdRemoveOptRecurse": "명시적으로 지정되지 않은 종속 패키지를 제거할 수 있습니다.",
  "CmdSearchExample1": "vcpkg search <패턴>",
  "CmdSetInstalledExample1": "vcpkg x-set-installed <패키지 이름> <패키지 이름>...",
  "CmdSetInstalledOptDryRun": "실제로 빌드하거나 설치하지 않습니다.",
  "CmdSetInstalledOptNoUsage": "설치 후 CMake 사용 정보를 인쇄하지 않습니다.",
  "CmdSetInstalledOptWritePkgConfig": "외부 이진 캐싱에 사용할 NuGet packages.config 형식 파일을 작성합니다. 자세한 내용은 `vcpkg help binarycaching` 참조",
  "CmdSetInstalledSynopsis": "설치된 패키지가 제공된 것과 정확하게 일치하게 패키지를 설치, 업그레이드 또는 제거합니다.",
  "CmdSettingCopiedFilesLog": "만들 복사된 파일 로그의 경로",
  "CmdSettingInstalledDir": "사용할 설치된 트리의 경로",
  "CmdSettingTLogFile": "만들 tlog 파일의 경로",
  "CmdSettingTargetBin": "분석할 이진 파일의 경로",
  "CmdUpdateBaselineOptDryRun": "실행하지 않고 계획 출력",
  "CmdUpdateBaselineOptInitial": "이미 없는 vcpkg.json에 'builtin-baseline' 추가",
  "CmdUpdateBaselineSynopsis": "매니페스트의 git 레지스트리 기준을 해당 레지스트리의 HEAD 커밋으로 업데이트합니다.",
  "CmdUpdateRegistryAll": "알려진 모든 아티팩트 레지스트리 업데이트",
  "CmdUpdateRegistryAllExcludesTargets": "레지스트리 업데이트 --all은 아티팩트 레지스트리 목록과 함께 사용할 수 없습니다.",
  "CmdUpdateRegistryAllOrTargets": "레지스트리를 업데이트하려면 아티팩트 레지스트리 이름 또는 업데이트할 URI 목록 또는 --all이 필요합니다.",
  "CmdUpdateRegistryExample3": "vcpkg x-update-registry <아티팩트 레지스트리 이름>",
  "CmdUpdateRegistrySynopsis": "아티팩트 레지스트리를 다시 다운로드합니다.",
  "CmdUpgradeOptNoDryRun": "실제로 업그레이드",
  "CmdUpgradeOptNoKeepGoing": "실패 시 패키지 설치 중지",
  "CmdUseExample1": "vcpkg use <아티팩트 이름>",
  "CmdUseSynopsis": "이 셸에서 단일 아티팩트 활성화",
  "CmdVSInstancesSynopsis": "검색된 Visual Studio 인스턴스 나열",
  "CmdXDownloadOptHeader": "URL에서 가져올 때 사용할 추가 헤더",
  "CmdXDownloadOptSha": "다운로드할 파일의 해시",
  "CmdXDownloadOptSkipSha": "다운로드한 파일의 SHA512 검사를 건너뜁니다.",
  "CmdXDownloadOptStore": "파일을 페치하는 것보다 부가해야 하는 파일을 저장합니다.",
  "CmdXDownloadOptUrl": "캐시에서 누락된 경우 다운로드 및 저장할 URL",
  "CmdZApplocalSynopsis": "설치된 트리에서 앱-로컬 배포를 위한 이진의 위치로 이진 파일의 종속성을 복사합니다.",
  "CmdZExtractExample1": "vcpkg z-extract <보관 경로> <출력 디렉터리>",
  "CmdZExtractExample2": "vcpkg z-extract source.zip source_dir --strip 2",
  "CmdZExtractOptStrip": "모든 경로에서 제거할 선행 디렉터리 수",
  "CommandEnvExample2": "vcpkg env \"ninja -C <경로>\" --triplet x64-windows",
  "CommandFailed": "명령:\n{command_line}\n다음 출력으로 실패했습니다.",
  "CommandFailedCode": "명령:\n{command_line}\n종료 코드 {exit_code} 및 다음 출력으로 실패했습니다.",
  "CommunityTriplets": "커뮤니티 Triplets:",
  "CompilerPath": "컴파일러 찾음: {path}",
  "CompressFolderFailed": "폴더 \"{path}\"을(를) 압축하지 못했습니다.",
  "ComputingInstallPlan": "설치 계획을 계산하는 중...",
  "ConfigurationErrorRegistriesWithoutBaseline": "{path}에 정의된 구성이 잘못되었습니다.\n\n레지스트리를 사용하려면 기본 레지스트리에 대한 기준이 설정되어 있거나 기본 레지스트리가 null여야 합니다.\n\n자세한 내용은 {url}을(를) 참조하세요.",
  "ConfigurationNestedDemands": "[\"{json_field}\"]에 중첩된 'demands' 개체가 포함되어 있습니다(중첩된 'demands'는 효과가 없음).",
  "ConflictingFiles": "다음 파일은 {path}에 이미 설치되어 있으며 {spec}과(와) 충돌합니다.",
  "ConsideredVersions": "{version}의 버전 요구 사항으로 인해 다음 실행 파일이 고려되었지만 삭제되었습니다.",
  "ConstraintViolation": "제약 조건 위반 발견:",
  "ContinueCodeUnitInStart": "시작 위치에서 계속 코드 단위를 찾음",
  "ControlAndManifestFilesPresent": "매니페스트 파일과 CONTROL 파일이 모두 포트 디렉터리에 있습니다. {path}",
  "ControlCharacterInString": "문자열의 제어 문자",
  "ControlSupportsMustBeAPlatformExpression": "\"Supports\"는 반드시 플랫폼 식이어야 합니다.",
  "CopyrightIsDir": "디렉터리인 `{path}`은(는) 더 이상 사용되지 않습니다.",
  "CorruptedDatabase": "vcpkg의 설치 데이터베이스가 손상되었습니다. 이는 vcpkg의 버그이거나 예기치 않은 방식으로 '설치된' 디렉터리의 콘텐츠를 수정한 것입니다. '설치된' 디렉터리를 삭제하고 사용하려는 디렉터리를 다시 설치하여 이 문제를 해결할 수 있습니다. 이 문제가 지속적으로 발생하면 https://github.com/microsoft/vcpkg에서 버그를 제출하세요.",
  "CorruptedInstallTree": "vcpkg '설치된' 트리가 손상되었습니다.",
  "CouldNotDeduceNugetIdAndVersion": "파일 이름에서 nuget ID 및 버전을 추론할 수 없음: {path}",
  "CouldNotFindBaselineInCommit": "{package_name} 관련 {commit_sha}의 {url}에서 기준을 찾을 수 없습니다.",
  "CouldNotFindGitTreeAtCommit": "{commit_sha} 커밋의 리포지토리 {package_name}에서 '버전'에 대한 git 트리를 찾을 수 없습니다.",
  "CouldNotFindToolVersion": "{path}에서 <tools version=\"{version}\">을(를) 찾을 수 없습니다.",
  "CouldNotFindVersionDatabaseFile": "버전 데이터베이스 파일을 찾을 수 없습니다. {path}",
  "CreateFailureLogsDir": "오류 로그 출력 디렉터리 {path}을(를) 만드는 중입니다.",
  "CreatedNuGetPackage": "생성된 nupkg: {path}",
  "Creating7ZipArchive": "7zip 보관함 생성 중...",
  "CreatingNugetPackage": "NuGet 패키지 생성 중...",
  "CreatingZipArchive": "zip 보관함 생성 중...",
  "CreationFailed": "{path} 생성에 실패했습니다.",
  "CurlFailedToPut": "curl이 종료 코드 {exit_code}(으)로 파일을 {url}에 넣지 못했습니다.",
  "CurlFailedToPutHttp": "curl이 종료 코드 {exit_code} 및 http 코드 {value}(으)로 파일을 {url}에 넣지 못했습니다.",
  "CurlResponseTruncatedRetrying": "curl이 부분 응답을 반환했습니다. {value}밀리초를 기다린 후 다시 시도",
  "CurlTimeout": "시간 제한 및 다시 시도 후에도 curl에서 요청된 모든 HTTP 작업을 수행할 수 없습니다. 마지막 명령줄은 {command_line}입니다.",
  "CurrentCommitBaseline": "현재 커밋을 기준으로 사용할 수 있음:\n\t\"builtin-baseline\": \"{commit_sha}\"",
  "CycleDetectedDuring": "{spec} 동안 검색된 주기:",
  "DefaultBinaryCachePlatformCacheRequiresAbsolutePath": "환경 변수 VCPKG_DEFAULT_BINARY_CACHE는 디렉터리여야 함(이전: {path})",
  "DefaultBinaryCacheRequiresAbsolutePath": "환경 변수 VCPKG_DEFAULT_BINARY_CACHE는 절대 변수여야 함(이전: {path})",
  "DefaultBinaryCacheRequiresDirectory": "환경 변수 VCPKG_DEFAULT_BINARY_CACHE는 디렉터리여야 함(이전: {path})",
  "DefaultFeatureCore": "\"core\" 기능은 기본 기능을 해제하므로 기본 기능 목록에 있을 수 없습니다.",
  "DefaultFeatureDefault": "\"default\" 기능은 기본 기능 집합을 참조하므로 기본 기능 목록에 있을 수 없습니다.",
  "DefaultFeatureIdentifier": "기본 기능의 이름은 반드시 식별자여야 합니다.",
  "DefaultFlag": "기본적으로 --{option}이 켜져 있습니다.",
  "DefaultRegistryIsArtifact": "기본 레지스트리는 아티팩트 레지스트리일 수 없습니다.",
  "DeleteVcpkgConfigFromManifest": "-- 또는 매니페스트 파일 {path}에서 \"vcpkg-configuration\"을 제거합니다.",
  "DependencyFeatureCore": "\"core\" 기능은 종속성의 기능 목록에 있을 수 없습니다. 기본 기능을 해제하려면 대신 \"default-features\": false를 추가합니다.",
  "DependencyFeatureDefault": "\"default\" 기능은 종속성의 기능 목록에 있을 수 없습니다. 기본 기능을 켜려면 대신 \"default-features\": true를 추가합니다.",
  "DependencyGraphCalculation": "종속성 그래프 제출을 활성화했습니다.",
  "DependencyGraphFailure": "종속성 그래프 제출에 실패했습니다.",
  "DependencyGraphSuccess": "종속성 그래프 제출에 성공했습니다.",
  "DeprecatedPrefabDebugOption": "--prefab-debug는 이제 더 이상 사용되지 않습니다.",
  "DetectCompilerHash": "삼중항 {triplet}에 대한 컴파일러 해시 감지 중...",
  "DocumentedFieldsSuggestUpdate": "인식되어야 하는 문서화된 필드인 경우 vcpkg 도구를 업데이트해 보세요.",
  "DownloadAvailable": "이 도구의 다운로드 가능한 사본을 사용할 수 있으며 {env_var} 설정을 해제하여 사용할 수 있습니다.",
  "DownloadFailedCurl": "{url}: curl이 종료 코드 {exit_code}(으)로 다운로드하지 못함",
  "DownloadFailedHashMismatch": "파일에 필요한 해시가 없습니다.\nURL: {url}\n파일: {path}\n필요한 해시: {expected}\n실제 해시: {actual}",
  "DownloadFailedRetrying": "다운로드 실패 -- {value}ms 후에 다시 시도 중",
  "DownloadFailedStatusCode": "{url}: 실패: 상태 코드 {value}",
  "DownloadRootsDir": "디렉터리 다운로드(기본값: {env_var})",
  "DownloadWinHttpError": "{url}: 종료 코드 {exit_code}(으)로 {system_api}이(가) 실패했습니다.",
  "DownloadedSources": "{spec}에 대한 다운로드 소스",
  "DownloadingPortableToolVersionX": "적합한 버전의 {tool_name}을(를) 찾을 수 없습니다(v{version} 필요). 이식 가능한 {tool_name} {version}을(를) 다운로드하는 중...",
  "DownloadingTool": "{tool_name}을(를) 다운로드하는 중... \n{url}->{path}",
  "DownloadingUrl": "{url} 다운로드 중",
  "DownloadingVcpkgStandaloneBundle": "독립 실행형 번들 {version}을(를) 다운로드하는 중입니다.",
  "DownloadingVcpkgStandaloneBundleLatest": "최신 독립 실행형 번들을 다운로드하는 중입니다.",
  "DuplicatePackagePattern": "패키지 \"{package_name}\"이(가) 중복되었습니다.",
  "DuplicatePackagePatternFirstOcurrence": "첫 번째 선언 위치:",
  "DuplicatePackagePatternIgnoredLocations": "다음 다시 선언은 무시됩니다.",
  "DuplicatePackagePatternLocation": "위치: {path}",
  "DuplicatePackagePatternRegistry": "레지스트리: {url}",
  "DuplicatedKeyInObj": "개체에 중복 키 \"{value}\"이(가) 있습니다.",
  "ElapsedForPackage": "{spec} 처리 경과 시간: {elapsed}",
  "ElapsedTimeForChecks": "통과/실패를 확인할 시간: {elapsed}",
  "EmailVcpkgTeam": "의견이 있으면 {url}(으)로 이메일을 보내주세요.",
  "EmbeddingVcpkgConfigInManifest": "매니페스트 파일에 'vcpkg-configuration'을 포함하는 것은 실험적 기능입니다.",
  "EmptyLicenseExpression": "SPDX 라이선스 식이 비어 있습니다.",
  "EndOfStringInCodeUnit": "코드 포인트 중간에서 문자열의 끝을 찾았습니다.",
  "EnvInvalidMaxConcurrency": "{env_var}이(가) {value}입니다. 0보다 커야 합니다.",
  "EnvPlatformNotSupported": "이 플랫폼에서는 빌드 환경 명령이 지원되지 않습니다.",
  "EnvStrFailedToExtract": "환경 문자열을 확장할 수 없습니다.",
  "EnvVarMustBeAbsolutePath": "{env_var}({path})은(는) 절대 경로가 아님",
  "ErrorDetectingCompilerInfo": "컴파일러 정보를 감지하는 동안:\n\"{path}\"의 로그 파일 콘텐츠는 다음과 같습니다.",
  "ErrorIndividualPackagesUnsupported": "매니페스트 모드에서 `vcpkg install`은 개별 패키지 인수를 지원하지 않습니다.\n추가 패키지를 설치하려면 vcpkg.json을 편집한 다음 패키지 인수 없이 `vcpkg install`을 실행하세요.",
  "ErrorInvalidClassicModeOption": "--{option} 옵션은 클래식 모드에서 지원되지 않으며 매니페스트를 찾을 수 없습니다.",
  "ErrorInvalidExtractOption": "--{option}은(는) 음이 아닌 정수 또는 'AUTO'로 설정해야 합니다.",
  "ErrorInvalidManifestModeOption": "--{option} 옵션은 매니페스트 모드에서 지원되지 않습니다.",
  "ErrorMissingVcpkgRoot": "vcpkg-root를 감지할 수 없습니다. 빌드한 vcpkg 복사본을 사용하려는 경우 https://github.com/Microsoft/vcpkg의 복제된 복사본을 가리키도록 VCPKG_ROOT 환경 변수를 정의해야 합니다.",
  "ErrorNoVSInstance": "삼중항 {triplet}에서: 유효한 Visual Studio 인스턴스를 찾을 수 없습니다.",
  "ErrorNoVSInstanceAt": "\"{path}\"에서",
  "ErrorNoVSInstanceFullVersion": "도구 세트 버전 접두사 {version} 포함",
  "ErrorNoVSInstanceVersion": "도구 세트 버전 {version} 사용",
  "ErrorParsingBinaryParagraph": "{spec}에 대한 이진 단락을 구문 분석하는 동안",
  "ErrorRequireBaseline": "이 vcpkg 인스턴스는 포트와 상호 작용하기 위해 지정된 기준선이 있는 매니페스트가 필요합니다. 매니페스트에 'builtin-baseline'을 추가하거나 기본 레지스트리를 재정의하는 'vcpkg-configuration.json'을 추가하세요.",
  "ErrorRequirePackagesList": "`vcpkg install`을 사용하려면 클래식 모드에서 설치할 패키지 목록이 필요합니다.",
  "ErrorUnableToDetectCompilerInfo": "vcpkg가 활성 컴파일러 정보를 감지할 수 없습니다. CMake 실패 출력은 위를 참조하세요.",
  "ErrorVcvarsUnsupported": "삼중항 {triplet}에서: Visual Studio의 개발자 프롬프트 사용은 Windows가 아닌 호스트에서 지원되지 않습니다.\n삼중항 파일에서 'VCPKG_CMAKE_SYSTEM_NAME' 또는 'VCPKG_CHAINLOAD_TOOLCHAIN_FILE'을 정의하세요.",
  "ErrorVsCodeNotFound": "Visual Studio Code를 찾을 수 없으며 환경 변수 {env_var}이(가) 설정되지 않았거나 잘못되었습니다.",
  "ErrorVsCodeNotFoundPathExamined": "다음 경로를 조사했습니다.",
  "ErrorWhileFetchingBaseline": "리포지토리 {package_name}에서 기준 '{value}\"'을(를) 가져오는 동안:",
  "ErrorWhileParsing": "{path}을(를) 구문 분석하는 동안 오류가 발생했습니다.",
  "ErrorWhileWriting": "{path}을(를) 쓰는 동안 오류가 발생했습니다.",
  "ErrorsFound": "다음 오류를 발견했습니다.",
  "ExamplesHeader": "예:",
  "ExceededRecursionDepth": "재귀 수준이 초과되었습니다.",
  "ExcludedPackage": "제외된 {spec}",
  "ExcludedPackages": "제외되는 패키지:",
  "ExpectedAnObject": "개체가 필요합니다.",
  "ExpectedAtMostOneSetOfTags": "{old_value}.*{new_value}의 {count} 세트를 찾았지만 블록에서 최대 1이 필요함:\n{value}",
  "ExpectedCharacterHere": "여기에 '{expected}'이(가) 필요합니다.",
  "ExpectedDefaultFeaturesList": "기본 기능 목록에 ',' 또는 텍스트의 끝이 필요합니다.",
  "ExpectedDependenciesList": "종속성 목록에 ',' 또는 텍스트의 끝이 필요합니다.",
  "ExpectedDigitsAfterDecimal": "소수점 뒤에 숫자가 필요합니다.",
  "ExpectedExplicitTriplet": "명시적 트리플렛이 필요합니다.",
  "ExpectedFailOrSkip": "여기에는 'fail', 'skip' 또는 'pass'가 필요합니다.",
  "ExpectedFeatureListTerminal": "기능 목록에 ',' 또는 ']'가 필요합니다.",
  "ExpectedFeatureName": "기능 이름이 필요합니다(소문자, 숫자, '-'여야 함).",
  "ExpectedOneSetOfTags": "{old_value}.*{new_value}의 {count} 세트를 찾았지만 블록에서 정확히 1이 필요함:\n{value}",
  "ExpectedOneVersioningField": "버전 관리 필드가 하나만 필요합니다.",
  "ExpectedPathToExist": "페치 후 {path}이(가) 있어야 합니다.",
  "ExpectedPortName": "여기에 포트 이름이 필요합니다(소문자, 숫자, '-'여야 함).",
  "ExpectedReadWriteReadWrite": "예기치 않은 인수: 'read', readwrite' 또는 'write' 필요",
  "ExpectedStatusField": "상태 단락에 'status' 필드가 필요합니다.",
  "ExpectedTripletName": "여기에 트리플렛 이름이 필요합니다(소문자, 숫자, '-'여야 함).",
  "ExportArchitectureReq": "내보내기 프리팹은 다음 아키텍처 arm64-v8a, armeabi-v7a, x86_64, x86 중 하나 이상을 대상으로 지정해야 합니다.",
  "ExportPrefabRequiresAndroidTriplet": "내보내기 프리팹에는 Android 삼중항이 필요합니다.",
  "Exported7zipArchive": "7zip 보관함을 내보낸 위치: {path}",
  "ExportedZipArchive": "{path}에서 내보낸 Zip 아카이브",
  "ExportingAlreadyBuiltPackages": "다음 패키지는 이미 빌드되었으며 내보낼 예정입니다.",
  "ExportingMaintenanceTool": "유지 관리 도구를 내보내는 중...",
  "ExportingPackage": "{package_name} 내보내는 중...",
  "ExtendedDocumentationAtUrl": "확장 문서는 '{url}'에서 사용할 수 있습니다.",
  "ExtractHelp": "보관 파일을 추출합니다.",
  "ExtractingTool": "{tool_name}을(를) 추출하는 중...",
  "FailedPostBuildChecks": "빌드 후 검사 문제를 {count}개 발견했습니다. 큐레이팅된 카탈로그에 포트를 제출하려면 먼저 포트 파일을 수정하세요. {path}",
  "FailedToAcquireMutant": "변이 {path}을(를) 가져오지 못했습니다.",
  "FailedToCheckoutRepo": "{package_name} 리포지토리에서 '버전'을 체크 아웃하지 못했습니다.",
  "FailedToDeleteDueToFile": "다음 {path}(으)로 인해 remove_all({value}) 실패: ",
  "FailedToDeleteInsideDueToFile": "다음 {path}(으)로 인해 remove_all_inside({value}) 실패: ",
  "FailedToDetermineCurrentCommit": "현재 커밋을 확인하지 못했습니다.",
  "FailedToDownloadFromMirrorSet": "미러 세트에서 다운로드하지 못함",
  "FailedToExtract": "\"{path}\"을(를) 추출하지 못했습니다.",
  "FailedToFetchRepo": "{url}을(를) 가져오지 못했습니다.",
  "FailedToFindPortFeature": "{package_name}에는 {feature}라는 기능이 없습니다.",
  "FailedToFormatMissingFile": "형식을 지정할 파일이 없습니다.\n형식을 지정하거나 변환하려면 --all 또는 명시적 파일을 전달하세요.",
  "FailedToLoadInstalledManifest": "다음 오류로 인해 {package_name}의 컨트롤 또는 매니페스트 파일을 로드할 수 없습니다. {package_name}을(를) 제거하고 다시 시도하세요.",
  "FailedToLoadManifest": "{path} 디렉터리에서 매니페스트를 로드하지 못했습니다.",
  "FailedToLocateSpec": "그래프에서 사양을 찾지 못했습니다({spec}).",
  "FailedToObtainDependencyVersion": "원하는 종속성 버전을 찾을 수 없습니다.",
  "FailedToObtainLocalPortGitSha": "로컬 포트에 대한 git SHA를 가져오지 못했습니다.",
  "FailedToObtainPackageVersion": "원하는 패키지 버전을 찾을 수 없습니다.",
  "FailedToOpenAlgorithm": "{value}을(를) 열지 못했습니다.",
  "FailedToParseBaseline": "기준을 구문 분석하지 못했습니다. {path}",
  "FailedToParseCMakeConsoleOut": "CMake 콘솔 출력을 구문 분석하여 블록 시작/끝 마커를 찾지 못했습니다.",
  "FailedToParseConfig": "구성 {path}을(를) 구문 분석하지 못했습니다.",
  "FailedToParseControl": "제어 파일 {path}을(를) 구문 분석하지 못했습니다.",
  "FailedToParseManifest": "매니페스트 파일을 구문 분석하지 못했습니다. {path}",
  "FailedToParseNoTopLevelObj": "{path}을(를) 구문 분석하지 못했습니다. 최상위 개체가 필요합니다.",
  "FailedToParseNoVersionsArray": "{path}을(를) 구문 분석하지 못했습니다. 'version' 배열이 필요합니다.",
  "FailedToParseSerializedBinParagraph": "[정상 검사] 직렬화된 이진 단락을 구문 분석하지 못했습니다.\nhttps://github.com/microsoft/vcpkg에서 다음 출력과 함께 문제를 여세요.\n{error_msg}\n직렬화된 이진 단락:",
  "FailedToParseVersionXML": "{tool_name} 도구의 버전을 구문 분석할 수 없습니다. 버전 문자열: {version}",
  "FailedToParseVersionsFile": "버전 파일 {path}을(를) 구문 분석하지 못했습니다.",
  "FailedToReadParagraph": "{path}에서 단락을 읽지 못했습니다.",
  "FailedToRemoveControl": "제어 파일 {path}을(를) 제거하지 못했습니다.",
  "FailedToRunToolToDetermineVersion": "{tool_name} 버전을 확인하기 위해 “{path}:을(를) 실행하지 못했습니다.",
  "FailedToStoreBackToMirror": "미러에 다시 저장하지 못했습니다:",
  "FailedToStoreBinaryCache": "이진 캐시 {path}을(를) 저장하지 못함",
  "FailedToTakeFileSystemLock": "파일 시스템 잠금을 가져오지 못함",
  "FailedToWriteManifest": "매니페스트 파일 {path}을(를) 쓰지 못함",
  "FailedVendorAuthentication": "하나 이상의 {vendor} 자격 증명 공급자가 인증에 실패했습니다. 자격 증명을 제공하는 방법에 대한 자세한 내용은 '{url}'을(를) 참조하세요.",
  "FetchingBaselineInfo": "{package_name}에서 기준 정보를 가져오는 중...",
  "FetchingRegistryInfo": "{url}({value})에서 레지스트리 정보를 가져오는 중...",
  "FieldKindDidNotHaveExpectedValue": "\"kind\"에 필요한 값이 없습니다(필요한 값: {expected} 중 하나, 찾은 값 {actual})",
  "FileIsNotExecutable": "이 파일은 실행 파일이 아닌 것 같습니다.",
  "FileNotFound": "{path}: 파일을 찾을 수 없습니다.",
  "FileReadFailed": "오프셋 {byte_offset}의 {path}에서 {count}바이트를 읽지 못했습니다.",
  "FileSeekFailed": "{path}에서 {byte_offset} 위치를 찾지 못했습니다.",
  "FilesContainAbsolutePath1": "설치된 패키지에는 다음과 같은 절대 경로가 없어야 합니다.",
  "FilesContainAbsolutePath2": "다음 파일에서 절대 경로를 찾았습니다.",
  "FilesExported": "내보낸 파일: {path}",
  "FindVersionArtifactsOnly": "--version은 vcpkg 검색 또는 vcpkg 찾기 포트와 함께 사용할 수 없습니다.",
  "FishCompletion": "vcpkg 물고기 완성은 이미 \"{path}\"에 추가되었습니다.",
  "FloatingPointConstTooBig": "부동 소수점 상수가 너무 큼: {count}",
  "FollowingPackagesMissingControl": "다음 패키지에는 유효한 CONTROL 또는 vcpkg.json이 없습니다.",
  "FollowingPackagesNotInstalled": "다음 패키지가 설치되지 않았습니다.",
  "FollowingPackagesUpgraded": "다음 패키지는 최신 상태입니다.",
  "ForMoreHelp": "추가 도움말",
  "ForceSystemBinariesOnWeirdPlatforms": "arm, s390x, ppc64le 및 riscv 플랫폼에서 환경 변수 VCPKG_FORCE_SYSTEM_BINARIES를 설정해야 합니다.",
  "FormattedParseMessageExpressionPrefix": "on 식:",
  "GHAParametersMissing": "GHA 이진 원본을 사용하려면 ACTIONS_RUNTIME_TOKEN 및 ACTIONS_CACHE_URL 환경 변수를 설정해야 합니다. 자세한 내용은 {url}을(를) 참조하세요.",
  "GeneratedConfiguration": "생성된 구성 {path}입니다.",
  "GeneratedInstaller": "{path} 설치 프로그램이 생성되었습니다.",
  "GeneratingConfiguration": "구성 {path} 생성 중...",
  "GeneratingInstaller": "설치 프로그램 {path} 생성 중...",
  "GeneratingRepo": "{path} 리포지토리 생성 중...",
  "GetParseFailureInfo": "'--debug'를 사용하여 구문 분석 실패에 대한 자세한 정보를 가져옵니다.",
  "GitCommandFailed": "명령을 실행하지 못했습니다: {command_line}",
  "GitFailedToFetch": "리포지토리 {url}에서 참조 {value}을(를) 가져오지 못함",
  "GitFailedToInitializeLocalRepository": "로컬 리포지토리 {path}을(를) 초기화하지 못함",
  "GitRegistryMustHaveBaseline": "Git 레지스트리 \"{url}\"에는 유효한 Git 커밋 SHA(16진수 문자 40개)인 \"기준\" 필드가 있어야 합니다.\n현재 최신 버전을 사용하려면 해당 리포지토리의 HEAD인 \"{commit_sha}\"로 기준을 설정합니다.",
  "GitStatusOutputExpectedFileName": "파일 이름이 필요합니다.",
  "GitStatusOutputExpectedNewLine": "새 줄이 필요합니다.",
  "GitStatusOutputExpectedRenameOrNewline": "이름이 바뀐 파일 또는 새 줄이 필요합니다.",
  "GitStatusUnknownFileStatus": "알 수 없는 파일 상태: {value}",
  "GitUnexpectedCommandOutputCmd": "{command_line}을(를) 실행할 때 git에서 예기치 않은 출력이 생성되었음",
  "GraphCycleDetected": "{package_name}의 그래프 내에서 감지된 주기:",
  "HashFileFailureToRead": "해시에 대한 파일 \"{path}\"을(를) 읽지 못했습니다. ",
  "HashPortManyFiles": "{package_name}에 {count}개의 파일이 포함되어 있습니다. 이진 캐싱에 대한 ABI 해시를 확인할 때 이러한 콘텐츠를 해시하는 데 시간이 오래 걸릴 수 있습니다. 파일 수를 줄이는 것이 좋습니다. 일반적인 원인은 포트의 디렉터리에 소스 또는 빌드 파일을 실수로 체크 아웃하는 것입니다.",
  "HeaderOnlyUsage": "{package_name}은 헤더 전용이며 다음을 통해 CMake에서 사용할 수 있습니다.",
  "HelpAssetCaching": "**실험적 기능: 이 기능은 언제든지 변경되거나 제거될 수 있습니다**\n\nvcpkg는 미러를 사용하여 다운로드한 자산을 캐시할 수 있으므로 원본 원본이 변경되거나 사라지더라도 계속 작동할 수 있습니다.\n\n자산 캐싱은 환경 변수 X_VCPKG_ASSET_SOURCES를 세미콜론으로 구분된 원본 목록으로 설정하거나 일련의 --x-asset-sources=<source> 명령줄 옵션을 전달하여 구성할 수 있습니다. 명령줄 원본은 환경 원본 다음에 해석됩니다. 쉼표, 세미콜론 및 백틱은 백틱(`)을 사용하여 이스케이프 처리할 수 있습니다.\n\n특정 문자열에 대한 <rw> 선택적 매개 변수는 액세스 방법을 제어합니다. \"읽기\", \"쓰기\" 또는 \"읽기쓰기\"로 지정할 수 있으며 기본값은 \"읽기\"입니다.\n\n유효한 원본:",
  "HelpAssetCachingAzUrl": "선택적으로 공유 액세스 서명 유효성 검사를 사용하여 Azure Blob Storage 원본을 추가합니다. URL은 컨테이너 경로를 포함해야 하며 후행 \"/\"로 종료되어야 합니다. <sas>는 정의된 경우 접두사로 \"?\"를 붙여야 합니다. 비 Azure 서버는 \"<url><sha512><sas>\" 형식의 GET 및 PUT 요청에 응답하는 경우에도 작동합니다.",
  "HelpAssetCachingBlockOrigin": "미러에 사용 가능한 파일이 없는 경우 원래 URL에 대한 폴백을 비활성화합니다.",
  "HelpAssetCachingScript": "자산을 가져오기 위해 외부 도구로 디스패치합니다. 템플릿 내에서 \"{{url}}\"은 원래 URL로, \"{{sha512}}\"는 SHA512 값으로, \"{{dst}}\"는 다음의 출력 경로로 대체됩니다. 저장합니다. 이러한 대체는 모두 적절하게 쉘 이스케이프되므로 예제 템플릿은 \"curl -L {{url}} --output {{dst}}\"입니다. 확장을 피하기 위해 \"{{{{\"는 \"}}\"로 대체되고 \"}}}}\"는 \"}}\"로 대체됩니다. 이것은 빌드 환경 내에서 실행되므로 PATH 및 기타 환경 변수는 triplet에 의해 수정됩니다.",
  "HelpBinaryCaching": "vcpkg는 컴파일된 패키지를 캐시하여 단일 시스템 또는 네트워크 전체에서 복원을 가속화할 수 있습니다. 기본적으로 vcpkg는 빌드를 로컬 시스템 캐시에 저장합니다. 명령줄의 마지막 옵션으로 \"--binarysource=clear\"를 전달하여 비활성화할 수 있습니다.\n\n이진 캐싱은 \"--binarysource=<source>\" 옵션을 모든 명령줄에 전달하거나 `VCPKG_BINARY_SOURCES` 환경 변수를 소스 집합으로 설정하여 추가로 구성할 수 있습니다(예: \"<source>;<source>;...\"). 명령줄 원본은 환경 원본 다음에 해석됩니다.\n\n특정 문자열에 대한 \"<rw>\" 선택적 매개 변수는 이진 파일 다운로드를 위해 참조할지 여부와 주문형 빌드를 해당 원격에 업로드할지 여부를 제어합니다. \"읽기\", \"쓰기\" 또는 \"읽기 쓰기\"로 지정할 수 있습니다.\n\n일반 원본:",
  "HelpBinaryCachingAws": "**실험적: 경고 없이 변경되거나 제거됩니다**\nAWS S3 원본을 추가합니다. 업로드 및 다운로드에 aws CLI를 사용합니다. 접두사는 s3:// 체계를 포함하고 \"/\" 접미사를 붙여야 합니다.",
  "HelpBinaryCachingAwsConfig": "**실험적: 경고 없이 변경되거나 제거됩니다**\nAWS S3 원본을 추가합니다. AWS 구성을 추가합니다. 현재 AWS CLI의 --no-sign-request 매개 변수에 해당하는 'no-sign-request' 매개 변수만 지원합니다.",
  "HelpBinaryCachingAwsHeader": "Azure 웹 서비스 원본",
  "HelpBinaryCachingAzBlob": "**실험적: 경고 없이 변경되거나 제거됩니다**\nAzure Blob Storage 원본을 추가합니다. 공유 액세스 서명 유효성 검사를 사용합니다. <url>은 컨테이너 경로를 포함해야 합니다. <sas>는 \"?\"로 시작해야 합니다.",
  "HelpBinaryCachingCos": "**실험적: 경고 없이 변경되거나 제거됩니다**\nCOS 원본을 추가합니다. 업로드 및 다운로드에 cos CLI를 사용합니다. <prefix>는 'cos://' 체계를 포함하고 \"/\" 접미사를 붙여야 합니다.",
  "HelpBinaryCachingDefaults": "기본 파일 기반 위치를 추가합니다. 시스템 설정에 따라 이진 파일을 저장하는 기본 경로는 \"{path}\"입니다. Windows에서 %LOCALAPPDATA%/%APPDATA%을(를) 참조하고 다른 플랫폼에서 $XDG_CACHE_HOME 또는 $HOME을 참조합니다.",
  "HelpBinaryCachingDefaultsError": "기본 파일 기반 위치를 추가합니다.",
  "HelpBinaryCachingFiles": "사용자 지정 파일 기반 위치를 추가합니다.",
  "HelpBinaryCachingGcs": "**실험적: 경고 없이 변경되거나 제거됩니다**\nGoogle Cloud Storage(GCS) 원본을 추가합니다. 업로드 및 다운로드에 gsutil CLI를 사용합니다. 접두사는 gs:// 체계를 포함해야 하며 \"/\"로 접미사를 붙여야 합니다.",
  "HelpBinaryCachingHttp": "사용자 지정 http 기반 위치를 추가합니다. GET, HEAD 및 PUT 요청은 이진 파일을 다운로드, 확인 및 업로드하기 위해 수행됩니다. {{name}}, {{version}}, {{sha}} 및 {{triplet}} 변수를 사용할 수 있습니다. 예시 URL은 'https://cache.example.com/{{triplet}}/{{name}}/{{version}}/{{sha}}'입니다. 헤더 필드를 통해 인증 토큰을 전달하도록 사용자 지정 헤더를 설정할 수 있습니다.",
  "HelpBinaryCachingNuGet": "NuGet 기반 원본을 추가합니다. NuGet CLI의 \"-Source\" 매개 변수와 동일합니다.",
  "HelpBinaryCachingNuGetConfig": "NuGet 구성 파일 기반 원본을 추가합니다. NuGet CLI의 \"-Config\" 매개 변수에 해당합니다. 이 구성은 업로드를 위해 \"defaultPushSource\"를 지정해야 합니다.",
  "HelpBinaryCachingNuGetFooter": "NuGet의 캐시는 기본적으로 사용되지 않습니다. 모든 NuGet 기반 원본에 사용하려면 환경 변수 \"VCPKG_USE_NUGET_CACHE\"를 \"true\"(대소문자 구분 안 함) 또는 \"1\"로 설정합니다.\n\"nuget\" 및 \"nugetconfig\" 원본 공급자는 NuGet 패키지를 생성하는 동안 특정 환경 변수를 준수합니다. 적절한 환경 변수가 정의되고 비어 있지 않으면 \"metadata.repository\" 필드가 다음 예 중 하나와 같이 생성됩니다.",
  "HelpBinaryCachingNuGetHeader": "NuGet 원본",
  "HelpBinaryCachingNuGetInteractive": "NuGet 대화형 자격 증명 관리를 활성화합니다. NuGet CLI에서 \"-NonInteractive\" 매개 변수의 반대입니다.",
  "HelpBinaryCachingNuGetTimeout": "NuGet 네트워크 작업에 대한 NuGet 제한 시간을 지정합니다. NuGet CLI의 \"-Timeout\" 매개 변수와 동일합니다.",
  "HelpBuiltinBase": "기준은 그래프의 모든 종속성에 대한 최소 버전을 설정하는 vcpkg 리포지토리 내의 커밋을 참조합니다. 예를 들어 다른 제약 조건이 지정되지 않은 경우(직접 또는 전이적으로) 버전은 최상위 매니페스트의 기준으로 확인됩니다. 전이적 종속성의 기준은 무시됩니다.",
  "HelpCachingClear": "기본값을 포함하여 이전 원본을 모두 제거합니다.",
  "HelpContactCommand": "피드백을 보낼 연락처 정보를 표시합니다.",
  "HelpCreateCommand": "새 포트를 만듭니다.",
  "HelpDependInfoCommand": "포트에 대한 종속성 목록을 표시합니다.",
  "HelpEditCommand": "선택적으로 {env_var}을(를) 사용하여 포트를 편집합니다. 기본값은 \"code\"입니다.",
  "HelpEnvCommand": "개발 또는 컴파일을 위한 깨끗한 셸 환경을 만듭니다.",
  "HelpExampleCommand": "자세한 도움말(예 포함)은 https://learn.microsoft.com/vcpkg 참조",
  "HelpExampleManifest": "매니페스트 예시:",
  "HelpInstallCommand": "패키지를 설치합니다.",
  "HelpManifestConstraints": "매니페스트는 사용된 버전에 세 가지 종류의 제약을 가할 수 있습니다.",
  "HelpMinVersion": "Vcpkg는 최상위 수준에 지정된 기준의 버전과 그래프의 \"version>=\" 제약 조건을 포함하여 적용 가능한 모든 제약 조건과 일치하는 발견된 최소 버전을 선택합니다.",
  "HelpOverrides": "최상위 매니페스트로 사용되는 경우(예: 디렉터리에서 `vcpkg install`을 실행할 때) 재정의를 사용하면 매니페스트가 종속성 해결을 단축하고 사용할 버전을 정확히 지정할 수 있습니다. 이는 `version-string` 종속성과 같은 버전 충돌을 처리하는 데 사용할 수 있습니다. 전이적으로 의존하는 경우에는 고려되지 않습니다.",
  "HelpOwnsCommand": "설치된 패키지에서 파일 소유자를 검색합니다.",
  "HelpPackagePublisher": "또한 패키지 게시자는 \"version>=\" 제약 조건을 사용하여 소비자가 지정된 종속성의 특정 최소 버전을 사용하고 있는지 확인할 수 있습니다. 예를 들어 라이브러리가 1.70에서 boost-asio에 추가된 API가 필요한 경우 \"version>=\" 제약 조건은 개별 버전 재정의 또는 레지스트리 간 참조를 사용하는 경우에도 전이 사용자가 충분한 버전을 사용하도록 합니다.",
  "HelpPortVersionScheme": "각 버전에는 음이 아닌 정수인 \"port-version\"이 추가로 있습니다. 텍스트로 렌더링되면 포트 버전(0이 아닌 경우)이 해시(#)로 구분된 기본 버전 텍스트에 접미사로 추가됩니다. 포트 버전은 기본 버전 텍스트 다음에 사전순으로 정렬됩니다. 예:\n1.0.0 < 1.0.0#1 < 1.0.1 < 1.0.1#5 < 2.0.0",
  "HelpRemoveCommand": "패키지를 제거합니다.",
  "HelpResponseFileCommand": "해당 위치에서 확장된 줄당 하나의 인수를 포함합니다.",
  "HelpSearchCommand": "빌드할 수 있는 패키지를 검색합니다.",
  "HelpTextOptFullDesc": "긴 텍스트를 자르지 않습니다.",
  "HelpTopicCommand": "특정 도움말 항목을 표시합니다.",
  "HelpTopicsCommand": "도움말 토픽의 전체 목록을 표시합니다.",
  "HelpTxtOptAllowUnsupportedPort": "실패하지 않고 지원되지 않는 포트에서 경고를 계속합니다.",
  "HelpTxtOptCleanAfterBuild": "각 패키지를 빌드한 후 빌드 트리, 패키지 및 다운로드를 정리합니다.",
  "HelpTxtOptCleanBuildTreesAfterBuild": "각 패키지를 빌드한 후 빌드 트리 정리",
  "HelpTxtOptCleanDownloadsAfterBuild": "각 패키지를 빌드한 후 다운로드를 정리합니다.",
  "HelpTxtOptCleanPkgAfterBuild": "각 패키지를 빌드한 후 패키지를 정리합니다.",
  "HelpTxtOptDryRun": "실제로 빌드하거나 설치하지 않습니다.",
  "HelpTxtOptEditable": "명령줄에서 라이브러리에 대한 원본 재추출 및 이진 캐싱 사용 안 함(클래식 모드)",
  "HelpTxtOptEnforcePortChecks": "포트에서 문제를 감지했거나 더 이상 사용되지 않는 기능을 사용하려는 경우 설치 실패",
  "HelpTxtOptKeepGoing": "실패 시 패키지를 계속 설치",
  "HelpTxtOptManifestFeature": "설치할 최상위 매니페스트의 추가 기능(매니페스트 모드)",
  "HelpTxtOptManifestNoDefault": "최상위 매니페스트(매니페스트 모드)의 기본 기능을 설치하지 않음",
  "HelpTxtOptNoDownloads": "새 원본을 다운로드하지 않음",
  "HelpTxtOptNoUsage": "설치 후 CMake 사용 정보를 인쇄하지 않음",
  "HelpTxtOptOnlyBinCache": "캐시된 이진 파일을 사용할 수 없는 경우 실패",
  "HelpTxtOptOnlyDownloads": "빌드하지 않고 원본을 다운로드하기 위해 최선을 다함",
  "HelpTxtOptRecurse": "설치의 일부로 패키지 제거 허용",
  "HelpTxtOptUseAria2": "aria2를 사용하여 다운로드 작업 수행합",
  "HelpTxtOptUseHeadVersion": "최신 업스트림 원본(클래식 모드)를 사용하여 명령줄에 라이브러리 설치",
  "HelpTxtOptWritePkgConfig": "외부 이진 캐싱에 사용할 NuGet packages.config 형식 파일을 작성합니다. 자세한 내용은 `vcpkg help binarycaching` 참조",
  "HelpUpdateBaseline": "라이브러리를 최신 상태로 유지하는 가장 좋은 방법은 기준 참조를 업데이트하는 것입니다. 이렇게 하면 전이 패키지를 포함한 모든 패키지가 업데이트됩니다. 하지만 패키지를 독립적으로 업데이트해야 하는 경우 \"version>=\" 제약 조건을 사용할 수 있습니다.",
  "HelpUpdateCommand": "업그레이드할 수 있는 패키지를 나열합니다.",
  "HelpUpgradeCommand": "오래된 모든 패키지를 다시 빌드합니다.",
  "HelpVersionCommand": "버전 정보를 표시합니다.",
  "HelpVersionDateScheme": "날짜(2021-01-01.5)",
  "HelpVersionGreater": "\"종속성\" 필드 내에서 각 종속성은 나열된 최소 제약 조건을 가질 수 있습니다. 이러한 최소 제약 조건은 이 라이브러리에 전이적으로 의존할 때 사용됩니다. '#' 접미사를 사용하여 최소 포트 버전을 추가로 지정할 수 있습니다.",
  "HelpVersionScheme": "점으로 구분된 일련의 숫자(1.2.3.4)",
  "HelpVersionSchemes": "다음 버전 관리 체계가 허용됩니다.",
  "HelpVersionSemverScheme": "의미론적 버전 2.0(2.1.0-rc2)",
  "HelpVersionStringScheme": "비교할 수 없는 정확한 버전(Vista)",
  "HelpVersioning": "버전 관리를 사용하면 매니페스트 파일 내에서 프로젝트에서 사용하는 종속성의 정확한 수정 내용을 결정적으로 제어할 수 있습니다.",
  "IgnoringVcpkgRootEnvironment": "vcpkg {value}이(가) 검색된 vcpkg 루트 {actual}을(를) 사용하고 있으며 일치하지 않는 VCPKG_ROOT 환경 값 {path}을(를) 무시합니다. 이 메시지를 표시하지 않도록 하려면 환경 변수를 설정 해제하거나 --vcpkg-root 명령줄 스위치를 사용하세요.",
  "IllegalFeatures": "이 컨텍스트에서는 기능 목록이 허용되지 않습니다.",
  "IllegalPlatformSpec": "이 컨텍스트에서는 플랫폼 한정자가 허용되지 않습니다.",
  "ImproperShaLength": "SHA512는 128진수 문자여야 합니다. {value}",
  "IncorrectArchiveFileSignature": "잘못된 보관 파일 서명",
  "InfoSetEnvVar": "{env_var}을(를) 선택한 편집기로 설정할 수도 있습니다.",
  "InitRegistryFailedNoRepo": "git 리포지토리 루트가 아니므로 {path}에 레지스트리를 만들 수 없습니다.\n`git init {command_line}`을(를) 사용하여 이 폴더에 git 리포지토리를 만듭니다.",
  "InstallCopiedFile": "{path_source} -> {path_destination} 완료",
  "InstallFailed": "실패: {path}: {error_msg}",
  "InstallPackageInstruction": "프로젝트를 연 상태에서 도구->NuGet 패키지 관리자->패키지 관리자 콘솔로 이동하여 다음을 붙여넣습니다.\n Install-Package \"{value}\" -원본 \"{path}\"",
  "InstallRootDir": "설치된 디렉터리(실험적)",
  "InstallSkippedUpToDateFile": "{path_source} -> {path_destination}을(를) 건너뛰었습니다. 최신 상태입니다.",
  "InstallWithSystemManager": "시스템 패키지 관리자를 통해 이 도구를 설치할 수 있습니다.",
  "InstallWithSystemManagerMono": "Ubuntu 18.04 사용자는 {url}에서 사용할 수 있는 최신 버전의 모노가 필요할 수 있습니다.",
  "InstallWithSystemManagerPkg": "시스템 패키지 관리자({command_line})을(를) 통해 이 도구를 설치할 수 있습니다.",
  "InstalledBy": "{path}에 의해 설치됨",
  "InstalledPackages": "이미 설치되어 있는 패키지:",
  "InstalledRequestedPackages": "요청된 모든 패키지가 현재 설치되어 있습니다.",
  "InstallingMavenFile": "Maven 파일을 설치하는 {path}",
  "InstallingOverlayPort": "여기에서 오버레이 포트 설치",
  "InstallingPackage": "{action_index}/{count} {spec}을(를) 설치하는 중...",
  "IntegrateBashHelp": "bash 탭 완성을 사용합니다. 비 Windows 전용입니다.",
  "IntegrateFishHelp": "fish 탭 완성을 사용합니다. 비 Windows 전용입니다.",
  "IntegrateInstallHelpLinux": "설치된 패키지를 사용자 전체가 사용할 수 있도록 함",
  "IntegrateInstallHelpWindows": "설치된 패키지를 사용자 전체가 사용할 수 있도록 합니다. 처음 사용할 때 관리자 권한이 필요합니다.",
  "IntegrateNonWindowsOnly": "{command_line}은(는) Windows 전용이 아니므로 이 시스템에서 지원되지 않습니다.",
  "IntegratePowerShellHelp": "PowerShell 탭 완성을 사용합니다. Windows 전용입니다.",
  "IntegrateProjectHelp": "개별 Visual Studio 프로젝트 사용에 대한 참조 NuGet 패키지를 생성합니다. Windows 전용입니다.",
  "IntegrateRemoveHelp": "사용자 전체 통합 제거",
  "IntegrateWindowsOnly": "{command_line}은(는) Windows 전용이므로 이 시스템에서 지원되지 않습니다.",
  "IntegrateZshHelp": "zsh 탭 완성을 사용합니다. 비 Windows 전용입니다.",
  "IntegrationFailedVS2015": "Visual Studio 2015에 통합이 적용되지 않았습니다.",
  "InternalCICommand": "vcpkg ci는 호환되지 않는 방식으로 변경되거나 언제든지 제거될 내부 명령입니다.",
  "InternalErrorMessageContact": "https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug에서 문제를 재현하기 위한 자세한 단계와 함께 문제를 여세요.",
  "InvalidArchitecture": "잘못된 아키텍처: {value}",
  "InvalidArgument": "잘못된 인수",
  "InvalidArgumentRequiresAbsolutePath": "잘못된 인수: 이진 구성 문자열의 이진 구성 '{binary_source}' 경로 인수는 절대 인수여야 함",
  "InvalidArgumentRequiresBaseUrl": "잘못된 인수: 이진 구성 '{binary_source}'에는 첫 번째 인수로 {base_url} 기본 URL이 필요함",
  "InvalidArgumentRequiresBaseUrlAndToken": "잘못된 인수: 이진 구성 '{binary_source}'에는 최소한의 기본 URL과 SAS 토큰이 필요함",
  "InvalidArgumentRequiresNoWildcards": "와일드카드가 포함된 경로의 Windows 경로 대/소문자를 수정할 수 없습니다. {path}",
  "InvalidArgumentRequiresNoneArguments": "잘못된 인수: 이진 구성 '{binary_source}'에는 인수를 사용하지 않음",
  "InvalidArgumentRequiresOneOrTwoArguments": "잘못된 인수: 이진 구성 '{binary_source}'에는 1개 또는 2개의 인수가 필요함",
  "InvalidArgumentRequiresPathArgument": "잘못된 인수: 이진 파일 구성 '{binary_source}'에는 하나 이상의 경로 인수가 필요합니다.",
  "InvalidArgumentRequiresPrefix": "잘못된 인수: 이진 파일 구성 '{binary_source}'에는 하나 이상의 접두사가 필요합니다.",
  "InvalidArgumentRequiresSingleArgument": "잘못된 인수: 이진 구성 '{binary_source}'에는 1개 이상의 인수를 사용하지 않음",
  "InvalidArgumentRequiresSingleStringArgument": "잘못된 인수: 이진 구성 '{binary_source}'에는 단일 문자열 인수가 필요함",
  "InvalidArgumentRequiresSourceArgument": "잘못된 인수: 이진 파일 구성 '{binary_source}'에는 하나 이상의 원본 인수가 필요합니다.",
  "InvalidArgumentRequiresTwoOrThreeArguments": "잘못된 인수: 이진 구성 '{binary_source}'에는 2개 또는 3개의 인수가 필요함",
  "InvalidArgumentRequiresValidToken": "잘못된 인수: 이진 구성 '{binary_source}'에는 두 번째 인수로 앞에 '?'가 없는 SAS 토큰이 필요함",
  "InvalidArgumentRequiresZeroOrOneArgument": "잘못된 인수: 이진 구성 '{binary_source}'에는 0개 또는 1개의 인수가 필요함",
  "InvalidBuildInfo": "패키지에 대한 잘못된 BUILD_INFO 파일: {error_msg}",
  "InvalidBuiltInBaseline": "최상위 기본 제공 기준({value})이 올바른 커밋 sha가 아닙니다. 40자의 16진수 문자여야 합니다.",
  "InvalidBundleDefinition": "번들 정의가 잘못되었습니다.",
  "InvalidCharacterInFeatureList": "기능 이름에 잘못된 문자가 있습니다(소문자, 숫자, '-' 또는 '*'여야 함).",
  "InvalidCharacterInFeatureName": "기능 이름에 잘못된 문자가 있습니다(소문자, 숫자, '-'여야 함).",
  "InvalidCharacterInPortName": "포트 이름에 잘못된 문자(소문자, 숫자, '-'여야 함)",
  "InvalidCodePoint": "utf8_encoded_code_point_count에 잘못된 코드 포인트가 전달되었습니다.",
  "InvalidCodeUnit": "잘못된 코드 단위",
  "InvalidCommandArgSort": "--sort 값은 'lexicographical', 'topological', 'reverse' 중 하나여야 합니다.",
  "InvalidCommentStyle": "vcpkg는 c 스타일 주석을 지원하지 않지만 대부분의 개체는 $-prefixed 필드를 주석으로 사용할 수 있도록 허용합니다.",
  "InvalidCommitId": "잘못된 커밋 ID: {commit_sha}",
  "InvalidDefaultFeatureName": "'기본값'은 예약된 기능 이름입니다.",
  "InvalidFeature": "기능은 소문자 영숫자+하이픈이어야 하며 예약된 이름 중 하나가 아니어야 합니다.",
  "InvalidFileType": "실패: {path}이(가) 파일 형식을 처리할 수 없습니다.",
  "InvalidFilename": "파일 이름에 유효하지 않은 문자({value})를 포함할 수 없습니다. 입력값: {path}",
  "InvalidFloatingPointConst": "잘못된 부동 소수점 상수: {count}",
  "InvalidFormatString": "잘못된 서식 문자열: {actual}",
  "InvalidHexDigit": "유니코드 이스케이프의 16진수가 잘못되었습니다.",
  "InvalidIntegerConst": "잘못된 정수 상수: {count}",
  "InvalidLibraryMissingLinkerMembers": "라이브러리가 잘못되었습니다. 링커 멤버를 찾을 수 없습니다.",
  "InvalidLinkage": "잘못된 {system_name} 연결 유형: [{value}]",
  "InvalidLogicExpressionUnexpectedCharacter": "논리식이 잘못되었습니다. 예기치 않은 문자입니다.",
  "InvalidLogicExpressionUsePipe": "논리 식이 잘못되었습니다. 'or' 대신 '|'를 사용하세요.",
  "InvalidNoVersions": "파일에 버전이 없습니다.",
  "InvalidOptionForRemove": "'remove'는 라이브러리 또는 '--outdated'를 수락합니다.",
  "InvalidPortVersonName": "잘못된 포트 버전 파일 이름 '{path}'을(를) 찾았습니다.",
  "InvalidSharpInVersion": "버전 텍스트에 잘못된 문자 '#'",
  "InvalidSharpInVersionDidYouMean": "버전 텍스트에 잘못된 문자 '#'이 있습니다. \"port-version\" 값이 {value}임을 의미하나요?",
  "InvalidString": "Value::string(std::string)에 잘못된 utf8이 전달되었습니다.",
  "InvalidTriplet": "유효하지 않은 삼중자: {triplet}",
  "InvalidUri": "URI를 구문 분석할 수 없음: {value}",
  "InvalidValueHashAdditionalFiles": "변수 VCPKG_HASH_ADDITIONAL_FILES는 잘못된 파일 경로 '{path}'을(를) 포함합니다. 값은 기존 파일의 절대 경로여야 합니다.",
  "IrregularFile": "경로가 일반 파일이 아닙니다. {path}",
  "JsonErrorMustBeAnObject": "“{path}”은(는) 개체로 예상됩니다.",
  "JsonFieldNotObject": "[\"{json_field}\"] 값은 개체여야 합니다.",
  "JsonFieldNotString": "[\"{json_field}\"] 값은 문자열이어야 합니다.",
  "JsonFileMissingExtension": "JSON 파일 {path}의 확장명은 .json(모두 소문자)이어야 합니다.",
  "JsonSwitch": "일반 텍스트가 아닌 JSON 인쇄",
  "JsonValueNotArray": "json 값이 배열이 아닙니다.",
  "JsonValueNotObject": "json 값이 개체가 아닙니다.",
  "JsonValueNotString": "json 값이 문자열이 아닙니다.",
  "LaunchingProgramFailed": "{tool_name} 시작:",
  "LibraryArchiveMemberTooSmall": "라이브러리 보관 구성원이 예상 데이터 유형을 포함하기에는 너무 작습니다.",
  "LibraryFirstLinkerMemberMissing": "첫 번째 링커 멤버 이름을 찾을 수 없습니다.",
  "LicenseExpressionContainsExtraPlus": "SPDX 라이선스 식에는 추가 '+'가 포함되어 있습니다. 라이선스 식별자 바로 뒤에만 허용됩니다.",
  "LicenseExpressionContainsInvalidCharacter": "SPDX 라이선스 식에 잘못된 문자(0x{value:02X} '{value}')가 포함되어 있습니다.",
  "LicenseExpressionContainsUnicode": "SPDX 라이선스 식에는 유니코드 문자(U+{value:04X} '{pretty_value}')가 포함되어 있지만 이러한 식은 ASCII 전용입니다.",
  "LicenseExpressionDocumentRefUnsupported": "현재 구현은 DocumentRef-SPDX 참조를 지원하지 않습니다.",
  "LicenseExpressionExpectCompoundFoundParen": "복합 또는 문자역의 끝이 필요하며 괄호를 찾았습니다.",
  "LicenseExpressionExpectCompoundFoundWith": "AND 또는 OR이 필요하고 WITH 발견(WITH는 라이선스 이름 뒤에만 허용되며 괄호로 묶인 식은 허용되지 않음).",
  "LicenseExpressionExpectCompoundFoundWord": "AND 또는 OR이 필요하고 라이선스 또는 예외 이름을 찾았습니다. '{value}'.",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "AND, OR 또는 WITH 중 하나가 필요하며 라이선스 또는 예외 이름 '{value}'을(를) 찾았습니다.",
  "LicenseExpressionExpectExceptionFoundCompound": "예외 이름이 필요하고 복합 {value}을(를) 찾았습니다.",
  "LicenseExpressionExpectExceptionFoundEof": "예외 이름이 필요합니다. 문자열의 끝을 찾았습니다.",
  "LicenseExpressionExpectExceptionFoundParen": "예외 이름이 필요하고 괄호를 찾았습니다.",
  "LicenseExpressionExpectLicenseFoundCompound": "라이선스 이름이 필요하고 복합 {value}을(를) 찾았습니다.",
  "LicenseExpressionExpectLicenseFoundEof": "라이선스 이름이 필요하며 문자열의 끝을 찾았습니다.",
  "LicenseExpressionExpectLicenseFoundParen": "라이선스 이름이 필요하고 괄호를 찾았습니다.",
  "LicenseExpressionImbalancedParens": "여는 괄호 없이 닫는 괄호가 있었습니다.",
  "LicenseExpressionString": "<license string>",
  "LicenseExpressionUnknownException": "알 수 없는 라이선스 예외 식별자 '{value}'. 알려진 값은 https://spdx.org/licenses/exceptions-index.html에 나열되어 있습니다.",
  "LicenseExpressionUnknownLicense": "알 수 없는 라이선스 식별자 '{value}'. 알려진 값은 https://spdx.org/licenses/에 나열되어 있습니다.",
  "LinkageDynamicDebug": "동적 디버그(/MDd)",
  "LinkageDynamicRelease": "동적 릴리스(/MD)",
  "LinkageStaticDebug": "정적 디버그(/MTd)",
  "LinkageStaticRelease": "정적 릴리스(/MT)",
  "ListHelp": "설치된 라이브러리 나열",
  "LoadedCommunityTriplet": "여기에서 커뮤니티 트리플렛을 로드했습니다. 커뮤니티 트리플렛은 큐레이팅된 레지스트리에 빌드되지 않으므로 성공할 가능성이 적습니다.",
  "LoadedOverlayTriplet": "여기에서 오버레이 트리플렛을 로드했습니다.",
  "LoadingDependencyInformation": "{count}개 패키지에 대한 종속성 정보를 로드하는 중...",
  "LocalPortfileVersion": "로컬 포트 파일 버전을 사용하고 있습니다. 로컬 포트 파일을 업데이트하려면 'git pull'을 사용하세요.",
  "ManifestConflict": "\"{path}\" 포트에서 매니페스트 및 CONTROL 파일을 모두 찾았습니다. 하나 또는 다른 이름을 변경하세요.",
  "ManifestFormatCompleted": "매니페스트 파일의 서식을 지정했습니다.",
  "MismatchedBinParagraphs": "직렬화된 이진 단락이 원래 이진 단락과 다릅니다. https://github.com/microsoft/vcpkg에서 다음 출력으로 문제를 여세요.",
  "MismatchedFiles": "저장할 파일이 해시와 일치하지 않습니다.",
  "MismatchedManifestAfterReserialize": "직렬화된 매니페스트가 원래 매니페스트와 다릅니다. https://github.com/microsoft/vcpkg에서 다음 출력으로 문제를 보고하세요.",
  "MismatchedNames": "이름이 일치하지 않습니다. '{package_name}' != '{actual}'",
  "MismatchedSpec": "포트 {path}의 사양이 일치하지 않습니다. {expected} 필요, 실제 {actual}",
  "MismatchedType": "{json_field}: 일치하지 않는 유형: 예상 {json_type}",
  "Missing7zHeader": "7z 헤더를 찾을 수 없습니다.",
  "MissingAndroidEnv": "ANDROID_NDK_HOME 환경 변수가 없음",
  "MissingAndroidHomeDir": "ANDROID_NDK_HOME 디렉터리가 존재하지 않습니다: {path}",
  "MissingArgFormatManifest": "format-manifest가 '--all' 없이 --convert-control로 전달되었습니다.\n아무 작업도 수행하지 않습니다: 명시적으로 전달된 제어 파일은 자동으로 변환됩니다.",
  "MissingClosingParen": "닫는 )가 없습니다.",
  "MissingDependency": "패키지 {spec}이(가) 설치되었지만 종속성 {package_name}이(가) 없습니다.",
  "MissingExtension": "'{extension}' 확장이 없습니다.",
  "MissingOption": "이 명령에는 --{option}이(가) 필요합니다.",
  "MissingOrInvalidIdentifer": "식별자가 없거나 잘못되었습니다.",
  "MissingPortSuggestPullRequest": "포트가 목록에 없으면 끌어오기 요청에서 문제를 열고/열거나 끌어오기 요청을 만드는 것이 좋습니다.",
  "MissingRequiredField": "누락된 필수 필드 '{json_field}'({json_type})",
  "MissingRequiredField2": "누락된 필수 필드 '{json_field}'",
  "MixingBooleanOperationsNotAllowed": "& 및 |을 혼합하는 것은 허용되지 않습니다. 작업 순서를 지정하려면 ()를 사용하세요.",
  "MonoInstructions": "불완전한 모노 설치로 인해 발생할 수 있습니다. 일부 시스템에서는 'sudo apt install mono-complete'를 통해 전체 모노를 사용할 수 있습니다. Ubuntu 18.04 사용자는 https://www.mono-project.com/download/stable/에서 사용할 수 있는 최신 버전의 모노가 필요할 수 있습니다.",
  "MultiArch": "다중 아키텍처는 '동일'해야 하지만 {option}입니다.",
  "MultipleFeatures": "{package_name}이(가) {feature}을(를) 여러 번 선언합니다. 기능에 고유한 이름이 있는지 확인하세요.",
  "MutuallyExclusiveOption": "--{value}은(는) --{option}과(와) 함께 사용할 수 없습니다.",
  "NewConfigurationAlreadyExists": "매니페스트를 만들면 {path}에서 vcpkg-configuration.json이 덮어쓰입니다.",
  "NewManifestAlreadyExists": "매니페스트가 {path}에 이미 있습니다.",
  "NewNameCannotBeEmpty": "--name은 비워 둘 수 없습니다.",
  "NewOnlyOneVersionKind": "--version-relaxed, --version-date 또는 --version-string 중 하나만 지정할 수 있습니다.",
  "NewSpecifyNameVersionOrApplication": "--name 및 --version을 지정하여 C++ 라이브러리용 매니페스트를 생성하거나 --application을 지정하여 매니페스트가 포트로 사용되지 않도록 지정합니다.",
  "NewVersionCannotBeEmpty": "--version은 비워 둘 수 없습니다.",
  "NoError": "오류 없음",
  "NoInstalledPackages": "패키지가 설치되어 있지 않습니다. 의도한 명령이 `search`인가요?",
  "NoOutdatedPackages": "오래된 패키지가 없습니다.",
  "NoRegistryForPort": "{package_name} 포트에 대해 구성된 레지스트리가 없습니다.",
  "NoUrlsAndHashSpecified": "SHA를 다운로드하도록 지정된 URL이 없습니다. {sha}",
  "NoUrlsAndNoHashSpecified": "URL이 지정되지 않았으며 해시가 지정되지 않았습니다.",
  "NonExactlyArgs": "'{command_name}' 명령에는 인수가 정확히 {expected}개 필요하지만, {actual}개가 제공되었습니다.",
  "NonOneRemainingArgs": "'{command_name}' 명령에는 정확히 인수가 1개 필요합니다.",
  "NonRangeArgs": "'{command_name}' 명령에는 {lower}개에서 {upper}개 사이 인수가 필요하지만, {actual}개가 제공되었습니다.",
  "NonZeroOrOneRemainingArgs": "'{command_name}' 명령에는 인수가 0개 또는 1개가 필요합니다.",
  "NonZeroRemainingArgs": "'{command_name}' 명령은 추가 인수를 허용하지 않습니다.",
  "NugetOutputNotCapturedBecauseInteractiveSpecified": "--interactive가 지정되었기 때문에 NuGet 명령이 실패하고 출력이 캡처되지 않았음",
  "NugetPackageFileSucceededButCreationFailed": "NuGet 패키지 만들기에 성공했지만 .nupkg가 생성되지 않았습니다. 예상: \" {path}\"",
  "NugetTimeoutExpectsSinglePositiveInteger": "예기치 않은 인수: 이진 구성 'nugettimeout'에는 단일 양의 정수 인수가 필요",
  "OptionMustBeInteger": "--{option} 값은 정수여야 합니다.",
  "OptionRequired": "--{option} 옵션은 필수입니다.",
  "OptionRequiresANonDashesValue": "'{option}' 옵션에 값이 필요합니다. '{option}'을(를) '{value}'(으)로 설정하려면 대신 {actual}={value} equals 양식을 사용하세요.",
  "OptionRequiresAValue": "'{option}' 옵션에 값이 필요합니다.",
  "OptionRequiresOption": "--{value}에 --{option} 필요",
  "OptionUsedMultipleTimes": "'{option}' 옵션을 여러 번 지정했습니다.",
  "Options": "옵션",
  "OriginalBinParagraphHeader": "\n원래 이진 단락",
  "OtherCommandsHeader": "기타",
  "OverlayPatchDir": "오버레이 경로 \"{path}\" 는 존재해야 하며 디렉터리여야 합니다.",
  "OverlayPortsDirectoriesHelp": "오버레이 포트의 디렉터리(또한: {env_var})",
  "OverlayTripletDirectoriesHelp": "오버레이 삼중 항목의 디렉터리(또한: {env_var})",
  "OverlayTriplets": "{path}의 오버레이 Triplets",
  "OverwritingFile": "파일 {path}이(가) 이미 있으며 덮어쓰여집니다.",
  "PECoffHeaderTooShort": "이식 가능한 실행 파일 {path}을(를) 구문 분석하는 동안 COFF 헤더의 크기가 너무 작아서 올바른 PE 헤더를 포함할 수 없습니다.",
  "PEConfigCrossesSectionBoundary": "이식 가능한 실행 파일 {path}을(를) 구문 분석하는 동안 이미지 구성 디렉터리가 구역 경계를 넘습니다.",
  "PEImportCrossesSectionBoundary": "이식 가능한 실행 파일 {path}을(를) 구문 분석하는 동안 가져오기 테이블이 구역 경계를 넘습니다.",
  "PEPlusTagInvalid": "이식 가능한 실행 파일 {path}을(를) 구문 분석하는 동안 선택적 헤더가 PE32 또는 PE32+가 아닙니다.",
  "PERvaNotFound": "이식 가능한 실행 파일 {path}을(를) 구문 분석하는 동안 RVA {value:#X}을(를) 찾을 수 없습니다.",
  "PackageAbi": "{spec} 패키지 ABI: {package_abi}",
  "PackageAlreadyRemoved": "{spec}을(를) 제거할 수 없음: 이미 제거됨",
  "PackageDiscoveryHeader": "패키지 검색",
  "PackageFailedtWhileExtracting": "{path}을(를) 추출하는 동안 '{value}'이(가) 실패했습니다.",
  "PackageInfoHelp": "패키지에 대한 자세한 정보 표시",
  "PackageInstallationHeader": "패키지 설치",
  "PackageManipulationHeader": "패키지 조작",
  "PackageRootDir": "패키지 디렉터리(실험적)",
  "PackagesToInstall": "빌드 및 설치할 패키지:",
  "PackagesToModify": "이 작업을 완료하기 위해 추가 패키지(*)가 수정됩니다.",
  "PackagesToRebuild": "다시 빌드할 패키지:",
  "PackagesToRebuildSuggestRecurse": "위의 패키지를 다시 빌드하려면 --recurse 옵션을 사용하여 명령을 실행하세요.",
  "PackagesToRemove": "제거할 패키지:",
  "PackagesUpToDate": "패키지를 업데이트할 필요가 없습니다.",
  "PackingVendorFailed": "{vendor} 포장에 실패했습니다. 자세한 내용은 --debug를 사용하세요.",
  "PairedSurrogatesAreInvalid": "선행 서로게이트 뒤에 오는 후행 서로게이트(쌍을 이루는 서로게이트는 유효하지 않음)",
  "ParagraphDuplicateField": "중복된 필드",
  "ParagraphExactlyOne": "정확히 하나의 단락이 있어야 합니다.",
  "ParagraphExpectedColonAfterField": "필드 이름 뒤에 ':'이 필요합니다.",
  "ParagraphExpectedFieldName": "필드 이름이 필요합니다.",
  "ParagraphUnexpectedEndOfLine": "예기치 않은 줄의 끝입니다. 빈 줄을 포괄하려면 \" .\"를 사용하세요.",
  "ParseFeatureNameError": "\"{package_name}\"은(는) 유효한 기능 이름이 아닙니다. 기능 이름은 소문자 영숫자+하이픈이어야 하며 예약되지 않아야 합니다(자세한 내용은 {url} 참조).",
  "ParseIdentifierError": "\"{value}\"는 유효한 식별자가 아닙니다. 식별자는 소문자 영숫자+하이픈이어야 하며 예약되지 않아야 합니다(자세한 내용은 {url} 참조).",
  "ParsePackageNameError": "\"{package_name}\"은(는) 유효한 패키지 이름이 아닙니다. 패키지 이름은 소문자 영숫자+하이픈이어야 하며 예약되지 않아야 합니다(자세한 내용은 {url} 참조).",
  "ParsePackageNameNotEof": "패키지 이름을 구문 분석하는 입력의 끝이 필요합니다. 이는 일반적으로 표시된 문자가 포트 이름에 포함될 수 없음을 의미합니다. 포트 이름은 모두 소문자 영숫자+하이픈이며 예약되어 있지 않습니다(자세한 내용은 {url} 참조).",
  "ParsePackagePatternError": "\"{package_name}\"은(는) 유효한 패키지 패턴이 아닙니다. 패키지 패턴에는 와일드카드 문자(*)를 하나만 사용해야 하며 패턴의 맨 끝에 써야 합니다(자세한 내용은 {url} 참조).",
  "ParseQualifiedSpecifierNotEof": "패키지 사양을 구문 분석하는 입력의 끝이 필요합니다. 이는 일반적으로 표시된 문자가 패키지 사양에 포함될 수 없음을 의미합니다. 포트, 트리플렛 및 기능 이름은 모두 소문자 영숫자+하이픈입니다.",
  "ParseQualifiedSpecifierNotEofSquareBracket": "패키지 사양을 구문 분석하는 입력의 끝이 필요합니다. 대신 {version_spec}을(를) 의미했나요?",
  "PathMustBeAbsolute": "환경 변수 X_VCPKG_REGISTRIES_CACHE 값이 절댓값이 아닙니다. {path}",
  "PerformingPostBuildValidation": "-- 빌드 후 유효성 검사를 수행하는 중",
  "PortBugBinDirExists": "정적 빌드에는 bin\\ 디렉터리가 없어야 하는데 {path}이(가) 있습니다.",
  "PortBugDebugBinDirExists": "정적 빌드에는 debug\\bin\\ 디렉터리가 없어야 하는데 {path}이(가) 있습니다.",
  "PortBugDebugShareDir": "/debug/share가 없어야 합니다. 중요한 모든 파일을 다시 구성한 다음 다음을 사용하세요.\nfile(REMOVE_RECURSE \"${{CURRENT_PACKAGES_DIR}}/debug/share\")",
  "PortBugDllAppContainerBitNotSet": "Windows Store 앱에 앱 컨테이너 비트를 설정해야 합니다. 다음 DLL에 앱 컨테이너 비트가 설정되어 있지 않습니다.",
  "PortBugDllInLibDir": "/lib 또는 /debug/lib에서 다음 dll을 찾았습니다. 각각 /bin 또는 /debug/bin으로 이동하세요.",
  "PortBugDuplicateIncludeFiles": "포함 파일은 /debug/include 디렉터리에 중복되지 않아야 합니다. 프로젝트 cmake에서 사용하지 않도록 설정할 수 없는 경우 다음을 사용하세요.\nfile(REMOVE_RECURSE \"${{CURRENT_PACKAGES_DIR}}/debug/include\")",
  "PortBugFoundCopyrightFiles": "다음 파일은 잠재적인 저작권 파일입니다.",
  "PortBugFoundDebugBinaries": "다음 {count}개 디버그 이진 파일을 찾았습니다.",
  "PortBugFoundDllInStaticBuild": "정적 빌드에는 DLL이 없어야 하는데, 다음 DLL이 발견되었습니다.",
  "PortBugFoundEmptyDirectories": "{path}에는 빈 디렉터리가 없어야 합니다. 다음 빈 디렉터리를 찾았습니다.",
  "PortBugFoundExeInBinDir": "/bin 또는 /debug/bin에 다음 EXE가 있습니다. EXE는 유효한 배포 대상이 아닙니다.",
  "PortBugFoundReleaseBinaries": "다음 {count}개 릴리스 이진 파일을 찾았습니다.",
  "PortBugIncludeDirInCMakeHelperPort": "/include 폴더가 cmake 도우미 포트에 있습니다. cmake 파일만 설치해야 하므로 잘못되었습니다.",
  "PortBugInspectFiles": "{extension} 파일을 검사하려면 다음을 사용하세요.",
  "PortBugInvalidCrtLinkage": "다음 이진 파일은 {expected} CRT를 사용해야 합니다.",
  "PortBugInvalidCrtLinkageEntry": "다음이 포함된 {path} 링크:",
  "PortBugKernel32FromXbox": "선택한 삼중 항목은 Xbox를 대상으로 하지만 다음 DLL은 kernel32와 연결됩니다. 이러한 DLL은 kernel32가 없는 Xbox에서 로드할 수 없습니다. 이는 일반적으로 onecore_apiset.lib 또는 xgameplatform.lib와 같은 적절한 우산 라이브러리가 아닌 kernel32.lib와 연결하여 발생합니다.",
  "PortBugMergeLibCMakeDir": "/lib/cmake 폴더는 /debug/lib/cmake와 병합하고 /share/{package_name}/cmake로 이동해야 합니다. vcpkg-cmake-config 포트에서 `vcpkg_cmake_config_fixup()` 도우미 함수를 사용하세요.`",
  "PortBugMismatchedNumberOfBinaries": "디버그와 릴리스 이진 파일 수가 일치하지 않습니다.",
  "PortBugMisplacedCMakeFiles": "/share/{spec} 외부에서 다음 cmake 파일을 찾았습니다. cmake 파일을 /share/{spec}에 배치하세요.",
  "PortBugMisplacedFiles": "다음 파일을 {path} 배치합니다.",
  "PortBugMisplacedFilesCont": "해당 디렉터리에는 파일이 있으면 안 됩니다.",
  "PortBugMisplacedPkgConfigFiles": "pkgconfig 디렉터리는 share/pkgconfig(헤더 전용 라이브러리의 경우), lib/pkgconfig 또는 lib/debug/pkgconfig 중 하나여야 합니다. 다음 위치가 잘못된 pkgconfig 파일을 찾았습니다.",
  "PortBugMissingDebugBinaries": "디버그 이진 파일을 찾을 수 없습니다.",
  "PortBugMissingFile": "/{path} 파일이 없습니다. 이 파일은 CMake 도우미 포트에 있어야 합니다.",
  "PortBugMissingImportedLibs": "{path}에 가져오기 라이브러리가 없습니다.\n의도한 경우 포트 파일에 다음 줄을 추가하세요.\nset(VCPKG_POLICY_DLLS_WITHOUT_LIBS 사용)",
  "PortBugMissingIncludeDir": "/include 폴더가 비어 있거나 없습니다. 라이브러리가 올바르게 설치되지 않았음을 나타냅니다.",
  "PortBugMissingLicense": "소프트웨어 라이선스는 ${{CURRENT_PACKAGES_DIR}}/share/{package_name}/copyright에서 제공되어야 합니다.",
  "PortBugMissingProvidedUsage": "포트는 \"usage\"를 제공했지만 /share/{package_name}/usage에 설치하는 것을 잊었습니다. portfile에 다음 행을 추가하세요.",
  "PortBugMissingReleaseBinaries": "릴리스 이진 파일을 찾을 수 없습니다.",
  "PortBugMovePkgConfigFiles": "다음과 유사한 명령으로 pkgconfig 파일을 이동할 수 있습니다.",
  "PortBugOutdatedCRT": "다음 파일에서 오래된 동적 CRT를 검색했습니다.",
  "PortBugRemoveBinDir": "bin\\ 및/또는 debug\\bin\\을 만들 수 없도록 설정할 수 없는 경우 포트 파일에서 이 항목을 사용하여 제거하세요.",
  "PortBugRemoveEmptyDirectories": "디렉터리를 채워야 하지만 채워지지 않는 경우 포트 파일에서 오류가 발생할 수 있습니다.\n디렉터리가 필요하지 않고 디렉터리 만들기를 사용하지 않도록 설정할 수 없는 경우 포트 파일에서 다음과 같은 항목을 사용하여 제거하세요.",
  "PortBugRemoveEmptyDirs": "file(REMOVE_RECURSE 위 이름 바꾸기에서 빈 디렉터리를 남김)",
  "PortBugRestrictedHeaderPaths": "다음 제한된 헤더로 인해 코어 C++ 런타임 및 기타 패키지가 제대로 컴파일되지 않습니다. 예외적인 상황에서는portfile.cmake에서 CMake 변수 VCPKG_POLICY_ALLOW_RESTRICTED_HEADERS를 설정하여 이 정책을 사용하지 않도록 설정할 수 있습니다.",
  "PortBugSetDllsWithoutExports": "내보내기가 없는 DLL은 빌드 스크립트의 버그일 수 있습니다. 의도한 경우 포트 파일에서 다음 줄을 추가하세요.\nset(VCPKG_POLICY_DLLS_WITHOUT_EXPORTS 사용)\n다음 DLL에 내보내기가 없습니다.",
  "PortDependencyConflict": "포트 {package_name}에는 다음과 같은 지원되지 않는 종속성이 있습니다.",
  "PortDoesNotExist": "{package_name}이(가) 없습니다.",
  "PortMissingManifest2": "{package_name} 포트 매니페스트가 없습니다(vcpkg.json 또는 CONTROL 파일이 없음).",
  "PortNotInBaseline": "기준선에 포트 {package_name}에 대한 항목이 없습니다.",
  "PortSupportsField": "(지원: \"{supports_expression}\")",
  "PortVersionConflict": "다음 패키지는 포트 버전과 다릅니다.",
  "PortVersionControlMustBeANonNegativeInteger": "\"포트 버전\"은 음수가 아닌 정수여야 합니다.",
  "PortVersionMultipleSpecification": "\"port_version\"은 버전에 포함된 '#'과 함께 사용할 수 없습니다.",
  "PortsAdded": "다음 {count}개 포트가 추가되었습니다.",
  "PortsNoDiff": "두 커밋 사이의 포트에 변경 내용이 없습니다.",
  "PortsRemoved": "다음 {count}개 포트가 제거되었습니다.",
  "PortsUpdated": "다음 {count}개 포트가 업데이트되었습니다.",
  "PrebuiltPackages": "빌드되지 않은 패키지가 있습니다. 빌드하려면 다음을 실행하세요.",
  "PreviousIntegrationFileRemains": "이전 통합 파일이 제거되지 않았습니다.",
  "ProgramReturnedNonzeroExitCode": "{tool_name}이(가) 종료 코드 ({exit_code})과(와) 함께 실패했습니다.",
  "ProvideExportType": "--raw --nuget --ifw --zip --7zip --chocolatey --prefab 옵션 중 하나 이상이 필요합니다.",
  "PushingVendorFailed": "{vendor}를 \"{path}\"(으)로 푸시하지 못했습니다. 자세한 내용은 --debug를 사용하세요.",
  "RegeneratesArtifactRegistry": "아티팩트 레지스트리를 다시 생성",
  "RegistryCreated": "{path}에 레지스트리를 만들었습니다.",
  "RegistryValueWrongType": "레지스트리 값 {path}은(는) 예기치 않은 유형입니다.",
  "RemoveDependencies": "매니페스트 모드에서 종속성을 제거하려면 매니페스트(vcpkg.json)을(를) 편집하고 'install'을 실행합니다.",
  "RemovePackageConflict": "{spec}이(가) 설치되지 않았지만 {triplet}용으로 {package_name}이(가) 설치되었습니다. {package_name}:{triplet}을(를) 의미했나요?",
  "RemovingPackage": "{action_index}/{count} {spec}을(를) 제거하는 중",
  "ResponseFileCode": "@response_file",
  "RestoredPackagesFromAWS": "{elapsed} 후 AWS의 패키지 {count}개를 복원했습니다. 자세한 내용을 보려면 --debug를 사용하세요.",
  "RestoredPackagesFromCOS": "{elapsed} 후 COS의 패키지 {count}개를 복원했습니다. 자세한 내용을 보려면 --debug를 사용하세요.",
  "RestoredPackagesFromFiles": "{elapsed} 후 {path}의 패키지 {count}개를 복원했습니다. 자세한 내용을 보려면 --debug를 사용하세요.",
  "RestoredPackagesFromGCS": "{elapsed} 후 GCS의 패키지 {count}개를 복원했습니다. 자세한 내용을 보려면 --debug를 사용하세요.",
  "RestoredPackagesFromGHA": "{elapsed} 후 GitHub Actions 캐시에서 패키지 {count}개를 복원했습니다. 자세한 내용을 보려면 --debug를 사용하세요.",
  "RestoredPackagesFromHTTP": "{elapsed} 후 HTTP 서버의 패키지 {count}개를 복원했습니다. 자세한 내용을 보려면 --debug를 사용하세요.",
  "RestoredPackagesFromNuGet": "{elapsed} 후 NuGet의 패키지 {count}개를 복원했습니다. 자세한 내용을 보려면 --debug를 사용하세요.",
  "ResultsHeader": "결과",
  "ScriptAssetCacheRequiresScript": "필요한 인수: 자산 구성 'x-script'에는 인수로 정확히 exec 템플릿이 필요",
  "SecretBanner": "*** 비밀 ***",
  "SeeURL": "자세한 내용은 {url}을(를) 참조하세요.",
  "SerializedBinParagraphHeader": "\n직렬화된 이진 단락",
  "SettingEnvVar": "-- \"{env_var}\" 환경 변수를 \"{url}\"(으)로 설정합니다.",
  "ShaPassedAsArgAndOption": "SHA512는 인수와 옵션 모두로 전달되었습니다. 이 중 하나만 전달합니다.",
  "ShaPassedWithConflict": "SHA512가 전달되었지만 --skip-sha512도 전달되었습니다. 한 가지만 수행하거나 다른 작업을 수행하세요.",
  "ShallowRepositoryDetected": "vcpkg가 다음 위치에 단순 리포지토리로 복제되었습니다. {path}\n전체 vcpkg 복제로 다시 시도하세요.",
  "SkipClearingInvalidDir": "디렉터리가 아니므로 {path} 내용 지우기를 건너뜁니다.",
  "SourceFieldPortNameMismatch": "CONTROL 파일 내의 'Source' 필드 또는 vcpkg.json 파일 내의 \"name\" 필드는 이름이 {package_name}이고 포트 디렉터리 \"{path}\"과(와) 일치하지 않습니다.",
  "SpecifiedFeatureTurnedOff": "'{command_name}' 기능이 특별히 꺼져 있지만 --{option}이(가) 지정되었습니다.",
  "SpecifyHostArch": "호스트 triplet. 'vcpkg help triplet'(기본값: {env_var}) 참조",
  "SpecifyTargetArch": "대상 triplet. 'vcpkg help triplet'(기본값: {env_var}) 참조",
  "StartCodeUnitInContinue": "계속 위치에서 시작 코드 단위를 찾았습니다.",
  "StoreOptionMissingSha": "--store 옵션이 sha512 없어 유효하지 않습니다.",
  "StoredBinariesToDestinations": "{elapsed} 후 대상 {count}개에 이진 파일이 저장됨.",
  "SuccessfulyExported": "{package_name}을(를) {path}(으)로 내보냄",
  "SuggestGitPull": "결과가 오래되었을 수 있습니다. 'git pull'을 실행하여 최신 결과를 가져옵니다.",
  "SuggestResolution": "한 번에 모든 오류를 해결하려면 다음을 실행합니다.\nvcpkg {command_name} --{option}",
  "SuggestStartingBashShell": "변경 내용을 적용하려면 새 bash 셸을 시작했는지 확인하세요.",
  "SupportedPort": "{package_name} 포트가 지원됩니다.",
  "SwitchUsedMultipleTimes": "'{option}' 전환을 여러 번 지정했습니다.",
  "SynopsisHeader": "시놉시스:",
  "SystemApiErrorMessage": "{exit_code}({error_msg})(으)로 인해 {system_api} 호출에 실패했습니다.",
  "SystemRootMustAlwaysBePresent": "Windows에서는 SystemRoot 환경 변수가 항상 설정되어야 합니다.",
  "SystemTargetsInstallFailed": "{path}에 시스템 대상 파일을 설치하지 못했습니다.",
  "ToRemovePackages": "오래된 패키지만 제거하려면 \n{command_name}을(를) 실행하고 오래된 버전을 제거하세요.",
  "ToUpdatePackages": "이러한 패키지 및 모든 종속성을 업데이트하려면 \n{command_name} 업그레이드'를 실행합니다.",
  "ToolFetchFailed": "{tool_name}을(를) 가져올 수 없습니다.",
  "ToolInWin10": "이 유틸리티는 Windows 10 이상과 함께 번들로 제공됩니다.",
  "ToolOfVersionXNotFound": "적합한 버전의 {tool_name}을(를) 찾을 수 없으며(v{version} 필요) 이식 가능한 버전을 자동으로 다운로드할 수 없습니다. 최신 버전의 {tool_name}을(를) 설치하세요.",
  "TotalInstallTime": "총 설치 시간: {elapsed}",
  "TrailingCommaInArray": "배열의 후행 쉼표",
  "TrailingCommaInObj": "개체의 후행 쉼표",
  "TripletFileNotFound": "삼중 파일 {triplet}.cmake를 찾을 수 없습니다.",
  "TripletLabel": "Triplet:",
  "TwoFeatureFlagsSpecified": "'{value}' 및 -'{value}'이(가) 기능 플래그로 지정되었습니다.",
  "UnableToClearPath": "{path}을(를) 삭제할 수 없음",
  "UnableToReadAppDatas": "%LOCALAPPDATA% 및 %APPDATA% 모두 읽을 수 없음",
  "UnableToReadEnvironmentVariable": "{env_var}을(를) 읽을 수 없음",
  "UndeterminedToolChainForTriplet": "CMAKE_SYSTEM_NAME {system_name}과(와) 함께 {triplet}에 대한 도구 체인 사용을 결정할 수 없습니다. VCPKG_CHAINLOAD_TOOLCHAIN_FILE을 사용하려고 했습니까?",
  "UnexpectedArgument": "예기치 못한 인수: {option}",
  "UnexpectedAssetCacheProvider": "알 수 없는 자산 공급자 유형: 올바른 원본 유형은 'x-azurl', 'x-script', 'x-block-origin' 및 'clear'",
  "UnexpectedByteSize": "{expected} 바이트가 작성될 것으로 예상했지만 {actual}이(가) 작성되었습니다.",
  "UnexpectedCharExpectedCloseBrace": "예기치 않은 문자, 속성 또는 닫기 중괄호가 필요합니다.",
  "UnexpectedCharExpectedColon": "예기치 않은 문자. 콜론이 필요합니다.",
  "UnexpectedCharExpectedName": "예기치 않은 문자. 속성 이름이 필요합니다.",
  "UnexpectedCharExpectedValue": "예기치 않은 문자. 값이 필요합니다.",
  "UnexpectedCharMidArray": "배열 중간에 예기치 않은 문자가 있습니다.",
  "UnexpectedCharMidKeyword": "키워드 중간에 예기치 않은 문자가 있습니다.",
  "UnexpectedDigitsAfterLeadingZero": "선행 0 뒤에 예기치 않은 숫자",
  "UnexpectedEOFAfterBacktick": "예기치 않은 eof: 이스케이프되지 않은 후행 백틱(')은 허용되지 않음",
  "UnexpectedEOFAfterEscape": "이스케이프 문자 후 예기치 않은 EOF",
  "UnexpectedEOFAfterMinus": "빼기 기호 뒤에 예기치 않은 EOF가 있습니다.",
  "UnexpectedEOFExpectedChar": "예기치 않은 문자. EOF가 필요합니다.",
  "UnexpectedEOFExpectedCloseBrace": "예기치 않은 EOF. 속성 또는 닫기 중괄호가 필요합니다.",
  "UnexpectedEOFExpectedColon": "예기치 않은 EOF. 콜론이 필요합니다.",
  "UnexpectedEOFExpectedName": "예기치 않은 EOF. 속성 이름이 필요합니다.",
  "UnexpectedEOFExpectedProp": "예기치 않은 EOF. 속성이 필요합니다.",
  "UnexpectedEOFExpectedValue": "예기치 않은 EOF. 값이 필요합니다.",
  "UnexpectedEOFMidArray": "배열 중간에 예기치 않은 EOF가 있습니다.",
  "UnexpectedEOFMidKeyword": "키워드 중간에 예기치 않은 EOF가 있습니다.",
  "UnexpectedEOFMidString": "문자열 중간에 예기치 않은 EOF가 있습니다.",
  "UnexpectedEOFMidUnicodeEscape": "유니코드 이스케이프 중간의 예기치 않은 파일의 끝",
  "UnexpectedEscapeSequence": "예기치 않은 이스케이프 시퀀스 연속",
  "UnexpectedField": "예기치 않은 필드 '{json_field}'",
  "UnexpectedFieldSuggest": "예기치 않은 필드 '{json_field}'이(가) 있습니다. '{value}'을(를) 의미했나요?",
  "UnexpectedFormat": "필요한 형식은 [{expected}]이지만 [{actual}]였습니다.",
  "UnexpectedOption": "예기치 못한 옵션: {option}",
  "UnexpectedPortName": "포트 {expected}이(가) {path}에서 {actual}(으)로 선언되었습니다.",
  "UnexpectedPortversion": "버전 관리 필드가 없는 예기치 않은 \"port-version\"",
  "UnexpectedSwitch": "예기치 못한 전환: {option}",
  "UnexpectedToolOutput": "버전 확인을 시도할 때 {tool_name}({path})이(가) 예기치 않은 출력을 생성했습니다.",
  "UnexpectedWindowsArchitecture": "예기치 않은 Windows 호스트 아키텍처: {actual}",
  "UnknownBaselineFileContent": "인식할 수 없는 기준 항목입니다; 'port:triplet=(fail|skip|pass)'가 필요합니다.",
  "UnknownBinaryProviderType": "알 수 없는 이진 파일 공급자 유형: 유효한 공급자는 'clear', 'default', 'nuget', 'nugetconfig', 'nugettimeout', 'interactive', 'x-azblob', 'x-gcs', 'x-aws', 'x-aws-config', 'http' 및 'files'",
  "UnknownBooleanSetting": "{option}에 대한 알 수 없는 부울 설정입니다. \"{value}\". 유효한 값은 '', '1', '0', 'ON', 'OFF', 'TRUE' 및 'FALSE'입니다.",
  "UnknownParameterForIntegrate": "통합에 대한 알 수 없는 매개 변수 '{value}'입니다.",
  "UnknownPolicySetting": "'{value}' 정책에 대한 알 수 없는 설정: {option}",
  "UnknownSettingForBuildType": "알 수 없는 VCPKG_BUILD_TYPE {option}의 설정입니다. 올바른 설정은 '', 'debug' 및 'release'입니다.",
  "UnknownTool": "vcpkg에는 이 플랫폼에 대한 이 도구에 대한 정의가 없습니다.",
  "UnknownTopic": "알 수 없는 주제 {value}",
  "UnknownVariablesInTemplate": "잘못된 인수: url 템플릿 '{value}'에 알 수 없는 변수가 포함되어 있습니다: {list}",
  "UnrecognizedConfigField": "구성에 포함된 인식할 수 없는 필드:",
  "UnrecognizedIdentifier": "인식할 수 없는 식별자 이름 {value}입니다. 3중 파일의 재정의 목록에 추가합니다.",
  "UnsupportedFeature": "기능 {feature}이(가) 전달되었지만 {package_name}에서 지원하는 기능은 아닙니다.",
  "UnsupportedFeatureSupportsExpression": "{feature_spec}은(는) {triplet}과(와) 일치하지 않는 '{supports_expression}'에서만 지원됩니다. 이것은 일반적으로 다른 플랫폼을 빌드할 때 알려진 빌드 실패 또는 런타임 문제가 있음을 의미합니다. 이를 무시하고 어쨌든 {package_name} 빌드를 시도하려면 `--allow-unsupported`로 vcpkg를 다시 실행하세요.",
  "UnsupportedFeatureSupportsExpressionWarning": "{feature_spec}은(는) {triplet}과(와) 일치하지 않는 '{supports_expression}'에서만 지원됩니다. 이것은 일반적으로 다른 플랫폼을 빌드할 때 알려진 빌드 실패 또는 런타임 문제가 있음을 의미합니다. `--allow-unsupported`로 인해 어쨌든 진행합니다.",
  "UnsupportedPort": "포트 {package_name}은(는) 지원되지 않습니다.",
  "UnsupportedPortDependency": "- 종속성 {value}은(는) 지원되지 않습니다.",
  "UnsupportedSyntaxInCDATA": "]]>는 CDATA 블록에서 지원되지 않습니다.",
  "UnsupportedSystemName": "VCPKG_CMAKE_SYSTEM_NAME '{system_name}'을(를) vcvarsall 플랫폼에 매핑할 수 없습니다. 지원되는 시스템 이름은 '', 'Windows' 및 'WindowsStore'입니다.",
  "UnsupportedToolchain": "삼중항 {triplet}: 요청된 대상 아키텍처 {arch}에 대해 유효한 도구 모음을 찾을 수 없습니다.\n선택한 Visual Studio 인스턴스는 다음 위치에 있습니다. {path}\n사용 가능한 도구 모음 조합은 {list}입니다.",
  "UnsupportedUpdateCMD": "업데이트 명령은 현재 매니페스트 모드를 지원하지 않습니다. 대신 vcpkg.json을 수정하고 설치를 실행하세요.",
  "UpdateBaselineAddBaselineNoManifest": "--{option} 스위치가 전달되었지만 `builtin-baseline` 필드를 추가할 매니페스트 파일이 없습니다.",
  "UpdateBaselineLocalGitError": "git이 \"{path}\"에서 로컬 vcpkg 레지스트리에 대한 HEAD를 구문 분석하지 못했습니다.",
  "UpdateBaselineNoConfiguration": "업데이트할 `vcpkg.json` 또는`vcpkg-configuration.json`이 없습니다.",
  "UpdateBaselineNoExistingBuiltinBaseline": "매니페스트 파일에 현재 `builtin-baseline` 필드가 없습니다. 추가하려면 --{option} 스위치를 전달합니다.",
  "UpdateBaselineNoUpdate": "레지스트리 '{url}'이(가) 업데이트되지 않았습니다. '{value}'",
  "UpdateBaselineRemoteGitError": "git에서 원격 리포지토리 '{url}'을(를) 가져오지 못했습니다.",
  "UpdateBaselineUpdatedBaseline": "업데이트된 레지스트리 '{url}': 기준 '{old_value}' -> '{new_value}'",
  "UpgradeInManifest": "업그레이드하면 클래식 모드 설치가 업그레이드되므로 매니페스트 모드를 지원하지 않습니다. vcpkg x-update-baseline을 사용하여 기준을 현재 값으로 업데이트하고 vcpkg 설치를 실행하여 종속성을 업데이트하는 것이 좋습니다.",
  "UpgradeRunWithNoDryRun": "위의 패키지를 다시 빌드하려는 경우 --no-dry-run 옵션을 사용하여 이 명령을 실행합니다.",
  "UploadingBinariesToVendor": "\"{spec}\"에 대한 이진 파일을 \"{vendor}\" 원본 \"{path}\"에 업로드하는 중입니다.",
  "UseEnvVar": "-- 환경 변수에서 {env_var} 사용.",
  "UserWideIntegrationDeleted": "사용자 전체 통합이 설치되어 있지 않습니다.",
  "UserWideIntegrationRemoved": "사용자 전체 통합이 제거되었습니다.",
  "UsingManifestAt": "{path}에서 매니페스트 파일을 사용 중입니다.",
  "Utf8ConversionFailed": "UTF-8로 변환하지 못함",
  "VSExaminedInstances": "다음 Visual Studio 인스턴스가 고려되었습니다.",
  "VSExaminedPaths": "Visual Studio 인스턴스에 대해 다음 경로를 조사했습니다.",
  "VSNoInstances": "전체 Visual Studio 인스턴스를 찾을 수 없습니다.",
  "VcpkgCeIsExperimental": "vcpkg-artifacts는 실험적이며 언제든지 변경될 수 있습니다.",
  "VcpkgCompletion": "vcpkg {value} 완성은 이미 \"{path}\" 파일로 가져왔습니다.\n다음 항목이 발견되었습니다.",
  "VcpkgDisallowedClassicMode": "현재 작업 디렉토리 위의 매니페스트(vcpkg.json)를 찾을 수 없습니다.\n이 vcpkg 배포에는 클래식 모드 인스턴스가 없습니다.",
  "VcpkgHasCrashed": "vcpkg가 충돌했습니다. https://github.com/microsoft/vcpkg에서 수행하려는 작업에 대한 간략한 요약과 다음 정보가 포함된 문제를 만드세요.",
  "VcpkgInVsPrompt": "vcpkg가 {value}을(를) 대상으로 하지만 {triplet}용으로 설치하는 Visual Studio 프롬프트에 있는 것 같습니다. --triplet {value}-windows 또는 --triplet {value}-uwp를 사용하는 것이 좋습니다.",
  "VcpkgInvalidCommand": "잘못된 명령: {command_name}",
  "VcpkgRegistriesCacheIsNotDirectory": "환경 변수 X_VCPKG_REGISTRIES_CACHE 값이 디렉터리가 아닙니다. {path}",
  "VcpkgRootRequired": "독립 실행형 부트스트랩에는 VCPKG_ROOT 설정이 필요합니다.",
  "VcpkgRootsDir": "vcpkg 루트 디렉터리(기본값: {env_var})",
  "VcpkgSendMetricsButDisabled": "--sendmetrics를 전달했지만 메트릭이 비활성화되었습니다.",
  "VcpkgUsage": "사용법: vcpkg <명령> [--switches] [--options=values] [arguments] @response_file",
  "VcvarsRunFailed": "Visual Studio 환경을 가져오기 위한 vcvarsall.bat를 실행하지 못함",
  "VcvarsRunFailedExitCode": "Visual Studio 환경을 가져오려고 하는 동안 vcvarsall.bat이 {exit_code}을(를) 반환함",
  "VersionBaselineMismatch": "최신 버전은 {expected}이지만 기본 파일에는 {actual}이(가) 포함되어 있습니다.\n실행:\nvcpkg x-add-version {package_name}\ngit add versions\ngit commit -m \"Update version database\"\n기본 버전을 업데이트합니다.",
  "VersionBuiltinPortTreeEntryMissing": "{expected}에서 {package_name}에 대한 버전 데이터베이스 항목이 없습니다. 체크 아웃된 포트 트리 버전({actual})을 사용합니다.",
  "VersionCommandHeader": "vcpkg 패키지 관리 프로그램 버전 {version}\n\n라이선스 정보는 LICENSE.txt를 참조하세요.",
  "VersionConflictXML": "{path} 버전이 필요([{expected_version}])하지만 [{actual_version}]입니다. bootstrap-vcpkg를 다시 실행하세요.",
  "VersionConstraintPortVersionMustBePositiveInteger": "\"version>=\"의 port-version('#' 이후)은 음수가 아닌 정수여야 함",
  "VersionConstraintViolated": "{spec} 종속성은 최소 버전 {expected_version}이어야 하지만 현재 {expected_version}입니다.",
  "VersionDatabaseEntryMissing": "{version}의 {package_name}에 대한 버전 항목이 없습니다.",
  "VersionDatabaseFileMissing": "{package_name}은(는) {path}에 버전 데이터베이스 파일이 없습니다.\n실행:\nvcpkg x-add-version {package_name}\n버전 파일을 만듭니다.",
  "VersionGitEntryMissing": "{version}의 {package_name}에 대한 버전 데이터베이스 항목이 없습니다.\n사용 가능한 버전:",
  "VersionInDeclarationDoesNotMatch": "파일에 선언된 버전이 체크 아웃된 버전과 일치하지 않습니다. {version}",
  "VersionIncomparable1": "{spec}의 버전 충돌: {constraint_origin}에 {expected}이(가) 필요하므로 기준 버전 {actual}과(와) 비교할 수 없습니다.",
  "VersionIncomparable2": "{version_spec}에 {new_scheme} 체계가 있음",
  "VersionIncomparable3": "이 문제는 기본 설정 버전에 명시적 재정의를 추가하여 해결할 수 있습니다. 예:",
  "VersionIncomparable4": "자세한 내용은 'vcpkg 도움말 버전 관리' 또는 {url}을(를) 참조하세요.",
  "VersionIncomparableSchemeString": "두 버전 모두 체계 문자열이 있지만 기본 텍스트가 다릅니다.",
  "VersionIncomparableSchemes": "버전에 호환되지 않는 체계가 있습니다.",
  "VersionInvalidDate": "`{version}`은(는) 올바른 날짜 버전이 아닙니다. 날짜는 YYYY-MM-DD 형식을 따라야 하며 명확성은 선행 0이 없는 점으로 구분된 양의 정수 값이어야 합니다.",
  "VersionInvalidRelaxed": "`{version}`은(는) 올바른 완화 버전이 아닙니다(임의의 숫자 요소 개수가 있는 semver).",
  "VersionInvalidSemver": "'{version}'은(는) 올바른 의미 체계 버전이 아닙니다. <https://semver.org>를 참조하세요.",
  "VersionMissing": "버전 관리 필드(버전, 버전 날짜, 버전 셈버 또는 버전 문자열 중 하나)가 필요합니다.",
  "VersionMissingRequiredFeature": "{version_spec}에 {constraint_origin}에 필요한 기능 {feature}이(가) 없음",
  "VersionNotFound": "{expected}을(를) 사용할 수 없습니다. {actual}만 사용할 수 있습니다.",
  "VersionNotFoundInVersionsFile": "{package_name}의 버전 파일에서 버전 {version}을(를) 찾을 수 없습니다.\n실행:\nvcpkg x-add-version {package_name}\n새 포트 버전을 추가합니다.",
  "VersionRejectedDueToBaselineMissing": "{path}에서 \"{json_field}\"를 사용하고 \"builtin-baseline\"이 없으므로 {path}가 거부되었습니다. 이 문제는 \"{json_field}\"의 사용을 제거하거나 \"builtin-baseline\"을 추가하여 해결할 수 있습니다.\n자세한 내용은 `vcpkg help versioning`를 참조하세요.",
  "VersionRejectedDueToFeatureFlagOff": "{path}에서 \"{json_field}\"를 사용하고 `versions` 기능 플래그가 비활성화되어 있으므로 {path}가 거부되었습니다. 이 문제는 \"{json_field}\"를 제거하거나 `versions` 기능 플래그를 활성화하여 해결할 수 있습니다.\n자세한 내용은 `vcpkg help versioning`를 참조하세요.",
  "VersionSchemeMismatch": "버전 데이터베이스는 {version}을(를) {expected}(으)로 선언하지만 {path}은(는) {actual}(으)로 선언합니다. 버전은 서로 다른 체계로 선언된 경우에도 고유해야 합니다.\n실행:\nvcpkg x-add-version {package_name} --overwrite-version\n버전 데이터베이스에 선언된 체계를 포트에 선언된 스키마로 덮어씁니다.",
  "VersionShaMismatch": "{version}이(가) {expected}(으)로 선언되었지만, 로컬 포트에 다른 SHA {actual}이(가) 있습니다.\n포트의 버전 필드를 업데이트한 다음 실행:\nvcpkg x-add-version {package_name}\ngit add version\ngit commit -m \"Update version database\"\n새 버전을 추가하세요.",
  "VersionShaMissing": "{package_name} 유효성을 검사하는 동안 Git SHA가 누락되었습니다.\n실행:\ngit add \"{path}\"\ngit commit -m \"wip\"\nvcpkg x-add-version {package_name}\ngit add versions\ngit commit --amend -m \"[{package_name}] Add new port\"\n새 포트를 커밋하고 해당 버전 파일을 만듭니다.",
  "VersionSharpMustBeFollowedByPortVersion": "버전 텍스트의 '#' 다음에는 포트 버전이 와야 합니다.",
  "VersionSharpMustBeFollowedByPortVersionNonNegativeInteger": "버전 텍스트의 '#' 다음에는 포트 버전(음이 아닌 정수)이 와야 합니다.",
  "VersionSpecMismatch": "버전이 일치하지 않아 포트를 로드하지 못했습니다. 파일 \"{path}\"에 {actual_version} 버전이 포함되어 있지만 버전 데이터베이스는 {expected_version}이어야 한다고 표시합니다.",
  "VersionVerifiedOK": "{version_spec}이(가) 버전 데이터베이스({git_tree_sha})에 올바르게 있습니다.",
  "WaitingForChildrenToExit": "자식 프로세스가 종료되기를 기다리는 중...",
  "WaitingToTakeFilesystemLock": "{path}에 대한 파일 시스템 잠금을 기다리는 중...",
  "WarnOnParseConfig": "구성 {path}에서 다음 경고가 발견되었습니다.",
  "WarningsTreatedAsErrors": "오류로 해석되는 이전 경고",
  "WhileCheckingOutBaseline": "기준 {commit_sha}을(를) 체크 아웃하는 동안",
  "WhileCheckingOutPortTreeIsh": "git 트리 {git_tree_sha}(으)로 {package_name} 포트를 체크 아웃하는 동안",
  "WhileGettingLocalTreeIshObjectsForPorts": "포트에 대한 로컬 트리 개체를 가져오는 동안",
  "WhileLoadingLocalPort": "로컬 포트 {package_name}을(를) 로드하는 동안",
  "WhileLoadingPortFromGitTree": "{commit_sha}에서 포트를 로드하는 동안",
  "WhileLoadingPortVersion": "{version_spec}을(를) 로드하는 동안",
  "WhileLookingForSpec": "{spec}을(를) 찾는 동안:",
  "WhileParsingVersionsForPort": "{path}에서 {package_name}의 버전을 구문 분석하는 동안",
  "WhileValidatingVersion": "{version} 버전 유효성을 검사하는 동안",
  "WindowsOnlyCommand": "이 명령은 Windows만 지원합니다.",
  "WroteNuGetPkgConfInfo": "NuGet 패키지 구성 정보를 {path}에 기록함",
  "FatalTheRootFolder$CannotBeCreated": "치명적: 루트 폴더 '${p0}'을(를) 만들 수 없습니다.",
  "FatalTheGlobalConfigurationFile$CannotBeCreated": "치명적: 전역 구성 파일 '${p0}'을(를) 만들 수 없습니다.",
  "VCPKGCOMMANDWasNotSet": "VCPKG_COMMAND가 설정되지 않았습니다.",
  "RunningVcpkgInternallyReturnedANonzeroExitCode$": "vcpkg를 실행하면 내부적으로 0이 아닌 종료 코드가 반환됨: ${p0}",
  "failedToDownloadFrom$": "${p0}에서 다운로드하지 못했습니다.",
  "failedToDownload$FromAnySource": "원본에서 ${p0}을(를) 다운로드하지 못했습니다.",
  "ErrorParsingConditionalDemand$$": "조건부 수요 '${p0}'- ${p1} 구문 분석 오류",
  "MissingIdentity$": "누락된 ID '${p0}'",
  "infoidShouldBeOfTypestringFound$": "info.id는 'string' 형식이어야 하는데 '${p0}'이(가) 있습니다.",
  "MissingVersion$": "누락된 버전 '${p0}'",
  "infoversionShouldBeOfTypestringFound$": "info.version은 'string' 형식이어야 하는데 '${p0}'이(가) 있습니다.",
  "infosummaryShouldBeOfTypestringFound$": "info.summary는 'string' 형식이어야 하는데 '${p0}'이(가) 있습니다.",
  "infodescriptionShouldBeOfTypestringFound$": "info.description은 'string' 형식이어야 하는데 '${p0}'이(가) 있습니다.",
  "infooptionsShouldBeASequenceFound$": "info.options는 시퀀스여야 하는데 '${p0}'이(가) 있습니다.",
  "TheInfoBlockIsDeprecatedForConsistencyWithVcpkgjsonMoveInfoMembersToTheOutside": "정보 블록은 vcpkg.json과의 일관성을 위해 더 이상 사용되지 않습니다. 정보 구성원을 외부로 이동하세요.",
  "idShouldBeOfTypestringFound$": "ID는 'string' 형식이어야 하는데 . '${p0}'이(가) 있습니다.",
  "versionShouldBeOfTypestringFound$": "버전은 'string' 형식이어야 하는데 '${p0}'이(가) 있습니다.",
  "summaryShouldBeOfTypestringFound$": "요약은 'string' 형식이어야 하는데 '${p0}'이(가) 있습니다.",
  "descriptionShouldBeOfTypestringFound$": "설명은 'string' 형식이어야 하는데 '${p0}'이(가) 있습니다.",
  "optionsShouldBeASequenceFound$": "옵션은 시퀀스여야 하는데 '${p0}'이(가) 있습니다.",
  "DuplicateKeysDetectedInManifest$": "매니페스트에서 검색된 중복 키: '${p0}'",
  "noPostscriptFileRerunWithTheVcpkgShellFunctionRatherThanExecutable": "포스트스크립트 파일 없음: 실행 파일이 아닌 vcpkg 셸 함수로 다시 실행",
  "DuplicateDefine$DuringActivationNewValueWillReplaceOld": "활성화 중에 중복 정의 ${p0}. 새로운 가치는 오래된 것을 대체할 것입니다.",
  "DuplicateToolDeclared$DuringActivationNewValueWillReplaceOld": "활성화 중에 중복 도구가 ${p0}(으)로 선언되었습니다. 새로운 값은 오래된 값을 대체할 것입니다.",
  "DuplicateAliasDeclared$DuringActivationNewValueWillReplaceOld": "활성화 중에 중복된 별칭이 ${p0}로 선언되었습니다. 새로운 가치는 오래된 것을 대체할 것입니다.",
  "DuplicateLocationDeclared$DuringActivationNewValueWillReplaceOld": "활성화 중에 ${p0} 중복 위치가 선언되었습니다. 새로운 가치는 오래된 것을 대체할 것입니다.",
  "CircularVariableReferenceDetected$": "순환 변수 참조가 검색됨: ${p0}",
  "CircularVariableReferenceDetected$$": "순환 변수 참조가 감지됨: ${p0} - ${p1}",
  "VariableReferenceFound$$$ThatIsReferencingAnUnknownBaseObject": "변수 참조가 알 수 없는 기본 개체를 참조하는 '$${p0}.${p1}'을(를) 찾았습니다.",
  "UnresolvedVariableReferenceFound$$$DuringVariableSubstitution": "변수를 대체하는 동안 확인되지 않은 변수 참조에서 ($${p0}.${p1})이(가) 발견되었습니다.",
  "InvalidPathDoesNotExist$": "잘못된 경로 - 존재하지 않음: ${p0}",
  "Activating$": "활성화 중: ${p0}",
  "Deactivating$": "비활성화 중: ${p0}",
  "nothingIsActivatedNoChangesHaveBeenMade": "활성화된 항목이 없음. 변경 내용이 없음",
  "InvalidArtifactId$": "잘못된 아티팩트 ID '${p0}'",
  "UnknownInstallerType$": "알 수 없는 설치 관리자 유형 ${p0}",
  "WhileResolvingDependenciesOf$$In$CouldNotBeResolvedToARegistry": "${p0}의 종속성을 확인하는 동안 ${p2}의 ${p1}을(를) 레지스트리로 확인할 수 없습니다.",
  "WhileResolvingDependenciesOfTheProjectFile$$DidNotSpecifyARegistry": "프로젝트 파일 ${p0}의 종속성을 확인하는 동안 ${p1}에서 레지스트리를 지정하지 않았습니다.",
  "UnableToResolveDependency$In$": "${p1}에서 종속성 ${p0}을(를) 확인할 수 없습니다.",
  "Artifact": "아티팩트",
  "Version": "버전",
  "Status": "상태",
  "Dependency": "종속성",
  "Summary": "요약",
  "progressUnknown": "(진행 상황을 알 수 없음)",
  "verifying": "확인 중",
  "downloading$$": "${p0} -> ${p1} 다운로드 중",
  "unpacking$": "${p0} 압축을 푸는 중",
  "Installing$": "${p0} 설치 중...",
  "$AlreadyInstalled": "${p0}이(가) 이미 설치되었습니다.",
  "Downloading$": "${p0} 다운로드 중...",
  "Unpacking$": "${p0}의 압축을 푸는 중...",
  "ErrorInstalling$$": "${p0} - ${p1} 설치 오류",
  "error": "오류:",
  "warning": "경고:",
  "ExpectedASingleValueFor$FoundMultiple": "${p0}에 대한 단일 값이 필요하지만 - 여러 값을 찾았습니다.",
  "ExpectedASingleValueFor$": "'--${p0}'에 대해 단일 값이 필요합니다.",
  "Assuming$IsCorrectSupplyAHashInTheArtifactMetadataToSuppressThisMessage": "'${p0}'이 맞다고 가정합니다. 이 메시지를 표시하지 않으려면 아티팩트 메타데이터에 해시를 제공하세요.",
  "DownloadedFile$DidNotHaveTheCorrectHash$$": "다운로드한 파일 '${p0}'에 올바른 해시가 없습니다(${p1}: ${p2}) ",
  "packageReference$IsNotAValidNugetPackageReferencenameversion": "패키지 참조 '${p0}'은(는) 유효한 nuget 패키지 참조({name}/{version})가 아닙니다.",
  "statsMayNotBeUndefined": "통계가 정의되지 않았을 수 있습니다.",
  "CannotRenameFilesAcrossFilesystems": "파일 시스템 간에 파일 이름을 바꿀 수 없음",
  "CopyFailedSource$IsAFolderTarget$IsAFile": "복사 실패: 소스(${p0})는 폴더이고 대상(${p1})은 파일입니다.",
  "UriMayNotBeEmpty": "URI는 비워 둘 수 없습니다.",
  "scheme$AlreadyRegistered": "'${p0}' 체계가 이미 등록되었습니다.",
  "uri$HasNoScheme": "URI ${p0}에 체계가 없습니다.",
  "scheme$HasNoFilesystemAssociatedWithIt": "${p0} 체계에 연결된 파일 시스템이 없습니다.",
  "mayNotRenameAcrossFilesystems": "파일 시스템 간에 이름을 바꿀 수 없습니다.",
  "CouldNotActivateEspidfPythonWasNotFound": "esp-idf를 활성화할 수 없습니다. python을 찾을 수 없습니다.",
  "GitIsNotInstalled": "Git이 설치되지 않았습니다.",
  "InitializingRepositoryFolder": "리포지토리 폴더 초기화",
  "FailedToInitializeGitRepositoryFolder$": "Git 리포지토리 폴더(${p0})를 초기화하지 못했습니다.",
  "AddingRemote$ToGitRepositoryFolder": "Git 리포지토리 폴더에 원격 ${p0} 추가",
  "FailedToSetGitOrigin$InFolder$": "폴더(${p1})에서 git origin(${p0})을 설정하지 못했습니다.",
  "FetchingRemote$ForGitRepositoryFolder": "Git 리포지토리 폴더에 대한 원격 ${p0} 가져오기",
  "UnableToFetchGitDataFor$InFolder$": "폴더 (${p1})에서 (${p0})에 대한 Git 데이터를 가져올 수 없습니다.",
  "CheckingOutCommit$For$ToGitRepositoryFolder": "${p1}에 대한 ${p0} 커밋을 Git 리포지토리 폴더로 확인 중",
  "UnableToCheckoutDataFor$InFolder$": "폴더 (${p1})에서 (${p0})에 대한 데이터를 체크 아웃할 수 없습니다.",
  "UpdatingSubmodulesForRepository$InTheGitRepositoryFolder": "git 리포지토리 폴더에서 리포지토리 ${p0}에 대한 하위 모듈을 업데이트하는 중",
  "UnableToSetSubmoduleShallowDataFor$InFolder$": "폴더 (${p1})에서 (${p0})에 대한 하위 모듈 단순 데이터를 설정할 수 없습니다.",
  "UnableUpdateSubmodulesFor$InFolder$": "폴더 (${p1})에서 (${p0})에 대한 하위 모듈을 업데이트할 수 없습니다.",
  "ExpectedCommaFound$": "쉼표가 필요한데 ${p0}을(를) 찾았습니다.",
  "ExpectedOneOfNumberBooleanIdentifierStringFoundToken$": "{Number, Boolean, Identifier, String} 중 하나가 필요했지만 ${p0} 토큰을 찾았습니다.",
  "ExpressionSpecifiedNOTTwice": "식이 두 번 지정되지 않음",
  "ExpectedCloseParenthesisForExpressionFound$": "식에 닫는 괄호가 필요하지만, ${p0}을(를) 찾았습니다.",
  "ExpectedExpressionFound$": "식이 필요하지만, ${p0}을(를) 찾았습니다",
  "ParseErrorDigitExpected": "ParseError: 필요한 숫자(0-9)",
  "ParseErrorHexDigitExpectedFf": "ParseError: 필요한 16진수(0-F,0-f)",
  "ParseErrorBinaryDigitExpected": "ParseError: 필요한 이진수(0,1)",
  "UnexpectedEndOfFileWhileSearchingFor$": "'${p0}'을(를) 검색하는 동안 예기치 않은 파일 끝에 도달했습니다.",
  "InvalidEscapeSequence": "잘못된 이스케이프 시퀀스",
  "FailedToDeserializeIndex$": "인덱스 ${p0} 역직렬화 실패",
  "$MatchedMoreThanOneResult$": "'${p0}'이(가) 둘 이상의 결과와 일치했습니다(${p1}).",
  "UnsupportedRegistryScheme$": "지원되지 않는 레지스트리 체계 '${p0}'",
  "TriedToAdd$As$But$IsAlready$": "${p0}을(를) ${p1}(으)로 추가하려고 했지만 ${p2}은(는) 이미 ${p3}입니다.",
  "UnknownRegistry$in$TheFollowingAreKnown$": "알 수 없는 레지스트리 ${p0}(${p1})입니다. 다음은 알려진 레지스트리입니다. ${p2}",
  "UpdatingRegistryDataFrom$": "${p0}에서 레지스트리 데이터를 업데이트하는 중",
  "$MustBeAString": "${p0}은(는) 문자열이어야 합니다.",
  "$MustBeABool": "${p0}는 부울이어야 합니다.",
  "$MustBeAnArrayOfStringsOrUnset": "${p0}는 문자열의 배열이거나 설정되지 않아야 합니다.",
  "FoundAMismatched$In$ForALiteral$Use$$Instead": "'${p1}'에서 일치하지 않는 ${p0}을(를) 찾았습니다. 리터럴 ${p2}의 경우 ${p3}${p4}을(를) 대신 사용하세요.",
  "CouldNotFindAValueFor$In$ToWriteTheLiteralValueUse$Instead": "'${p1}'에서 {${p0}}에 대한 값을 찾을 수 없습니다. 리터럴 값을 쓰려면 '{{${p2}}}'를 대신 사용하세요.",
  "MatchedMoreThanOneInstallBlock$": "둘 이상의 설치 블록 [${p0}]과(와) 일치했습니다.",
  "UnableToFindProjectInFolderorParentFoldersFor$": "${p0}에 대한 폴더(또는 상위 폴더)에서 프로젝트를 찾을 수 없습니다.",
  "UnableToAcquireProject": "프로젝트를 가져올 수 없습니다.",
  "NoArtifactsSpecified": "아티팩트가 지정되지 않았습니다.",
  "NoArtifactsAreAcquired": "획득한 아티팩트가 없습니다.",
  "AllArtifactsAreAlreadyInstalled": "모든 아티팩트가 이미 설치되었습니다.",
  "$ArtifactsInstalledSuccessfully": "${p0} 아티팩트가 설치되었습니다.",
  "InstallationFailedStopping": "설치 실패 -- 중지",
  "MultipleArtifactsSpecifiedButNotAnEqualNumberOf$Switches": "여러 아티팩트가 지정되었지만 동일한 수의 ${p0} 스위치가 아님",
  "TriedToAddAnArtifact$$ButCouldNotDetermineTheRegistryToUse": "아티팩트 [${p0}]:${p1}을(를) 추가하려고 했지만 사용할 레지스트리를 확인할 수 없습니다.",
  "TriedToAddRegistry$As$ButItWasAlready$PleaseAdd$ToThisProjectManuallyAndReattempt": "레지스트리 ${p0}을(를) ${p1}(으)로 추가하려고 했지만 이미 ${p2}입니다. ${p3}을(를) 이 프로젝트에 수동으로 추가하고 다시 시도하세요.",
  "RunvcpkgActivateToApplyToTheCurrentTerminal": "\\'vcpkg activate\\'를 실행하여 현재 터미널에 적용",
  "DownloadsFolderCleared$": "다운로드 폴더 삭제됨(${p0}) ",
  "InstalledArtifactFolderCleared$": "설치된 Artifact 폴더가 지워짐(${p0}) ",
  "CacheFolderCleared$": "캐시 폴더 삭제됨(${p0}) ",
  "DeletingArtifact$From$": "${p1}에서 ${p0} 아티팩트 삭제",
  "NoArtifactsFoundMatchingCriteria$": "기준과 일치하는 아티팩트 없음: ${p0}",
  "UnableToActivateProject": "프로젝트를 활성화할 수 없습니다.",
  "RegeneratingIndexFor$": "${p0}에 대한 인덱스 다시 생성 중",
  "RegenerationCompleteIndexContains$MetadataFiles": "다시 생성 완료. 인덱스에는 ${p0} 메타데이터 파일이 포함되어 있습니다.",
  "Registry$ContainsNoArtifacts": "레지스트리: '${p0}'에 아티팩트가 없습니다.",
  "error$": "오류 ${p0}: ",
  "Removing$FromProjectManifest": "프로젝트 매니페스트에서 ${p0} 제거",
  "unableToFindArtifact$InTheProjectManifest": "프로젝트 매니페스트에서 아티팩트 ${p0}을(를) 찾을 수 없습니다.",
  "Updated$ItContains$MetadataFiles": "${p0}을(를) 업데이트했습니다. 여기에는 ${p1} 메타데이터 파일이 포함되어 있습니다.",
  "UnableToDownload$": "${p0}을(를) 다운로드할 수 없습니다.",
  "$CouldNotBeUpdatedItCouldBeMalformed": "${p0}을(를) 업데이트할 수 없습니다. 형식이 잘못되었을 수 있습니다.",
  "TheXupdateregistryCommandDownloadsNewRegistryInformationAndThusCannotBeUsedWithLocalRegistriesDidYouMeanXregenerate$": "x-update-registry 명령은 새 레지스트리 정보를 다운로드하므로 로컬 레지스트리와 함께 사용할 수 없습니다. x-재생성 ${p0}을(를) 의미했습니까?",
  "UnableToFindRegistry$": "${p0} 레지스트리를 찾을 수 없습니다.",
  "NoArtifactsAreBeingAcquired": "획득 중인 아티팩트가 없습니다.",
  "UnableToFindProjectEnvironment$": "프로젝트 환경 ${p0}을(를) 찾을 수 없습니다."
}
