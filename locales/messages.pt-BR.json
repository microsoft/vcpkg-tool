{
  "AddArtifactOnlyOne": "'{command_line}' só pode adicionar um artefato por vez.",
  "AddFirstArgument": "The first argument to '{command_line}' must be 'artifact' or 'port'.",
  "AddPortRequiresManifest": "'{command_line}' requer um arquivo de manifesto ativo.",
  "AddPortSucceded": "Conseguiu adicionar portas ao arquivo vcpkg.json.",
  "AddTripletExpressionNotAllowed": "triplet expressions are not allowed here. You may want to change `{package_name}:{triplet}` to `{package_name}` instead.",
  "AddVersionAddedVersionToFile": "versão adicionada {version} para {path}",
  "AddVersionCommitChangesReminder": "Você se lembrou de confirmar suas alterações?",
  "AddVersionCommitResultReminder": "Não se esqueça de confirmar o resultado!",
  "AddVersionDetectLocalChangesError": "ignorando a detecção de alterações locais devido a um formato inesperado na saída de status do git",
  "AddVersionFileNotFound": "não foi possível encontrar o arquivo necessário {path}",
  "AddVersionFormatPortSuggestion": "Execute `{command_line}` para formatar o arquivo",
  "AddVersionIgnoringOptionAll": "ignorando --{option} desde que um argumento de nome de porta foi fornecido",
  "AddVersionLoadPortFailed": "não é possível carregar a porta {package_name}",
  "AddVersionNewFile": "(novo arquivo)",
  "AddVersionNewShaIs": "novo SHA: {value}",
  "AddVersionNoFilesUpdated": "Nenhum arquivo foi atualizado",
  "AddVersionNoFilesUpdatedForPort": "Nenhum arquivo foi atualizado para {package_name}",
  "AddVersionNoGitSha": "não é possível obter SHA para porta {package_name}",
  "AddVersionOldShaIs": "SHA antigo: {value}",
  "AddVersionOverwriteOptionSuggestion": "Use --{option} para ignorar esta verificação",
  "AddVersionPortDoesNotExist": "{package_name} não existe",
  "AddVersionPortFilesShaChanged": "os arquivos de check-in de {package_name} foram alterados, mas a versão não foi atualizada",
  "AddVersionPortFilesShaUnchanged": "os arquivos de check-in para {package_name} não foram alterados da versão {version}",
  "AddVersionPortHasImproperFormat": "{package_name} não está formatado corretamente",
  "AddVersionSuggestNewVersionScheme": "Use o esquema de versão \"{new_scheme}\" em vez de \"{old_scheme}\" na porta \"{package_name}\".\nUse --{option} para desabilitar esta verificação.",
  "AddVersionUnableToParseVersionsFile": "não foi possível de analisar o arquivo de versões {path}",
  "AddVersionUncommittedChanges": "há alterações não confirmadas para {package_name}",
  "AddVersionUpdateVersionReminder": "Você se lembrou de atualizar a versão ou a versão da porta?",
  "AddVersionUseOptionAll": "{command_name} sem argumentos requer passar --{option} para atualizar todas as versões da porta de uma só vez",
  "AddVersionVersionAlreadyInFile": "versão {version} já está em {path}",
  "AddVersionVersionIs": "versão: {version}",
  "AllFormatArgsRawArgument": "cadeia de caracteres de formato \"{value}\" contém um argumento de formato bruto",
  "AllFormatArgsUnbalancedBraces": "chave não balanceada na cadeia de caracteres de formato \"{value}\"",
  "AlreadyInstalled": "{spec} já está instalado",
  "AlreadyInstalledNotHead": "{spec} já está instalado -- não está sendo criado pela HEAD",
  "AttemptingToFetchPackagesFromVendor": "Tentando buscar {count} pacote(s) do {vendor}",
  "BothYesAndNoOptionSpecifiedError": "cannot specify both --no-{option} and --{option}.",
  "BuildAlreadyInstalled": "A {spec} já está instalada; remover {spec} antes de tentar compilá-la.",
  "BuildDependenciesMissing": "The build command requires all dependencies to be already installed.\nThe following dependencies are missing:",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "Baixado",
  "BuildResultExcluded": "Excluído",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "REMOVIDO",
  "BuildResultSucceeded": "BEM-SUCEDIDO",
  "BuildResultSummaryHeader": "RESUMO PARA {triplet}",
  "BuildResultSummaryLine": "{build_result}: {count}",
  "BuildTroubleshootingMessage1": "Certifique-se de est arusando os mais recentes arquivos de porta com `git pull' e 'vcpkg update'.\nEm seguida, verifique se há problemas conhecidos em:",
  "BuildTroubleshootingMessage2": "Você pode enviar a respeito de um novo problema em:",
  "BuildTroubleshootingMessage3": "Incluir 'Erro de build [{package_name}]' em seu título de relatório de bug, as seguintes informações de versão em sua descrição de bug, e anexe qualquer logs de falha relevante do erro acima.",
  "BuildingFromHead": "Criando {spec} de HEAD...",
  "BuildingPackage": "Criando {spec}...",
  "BuildingPackageFailed": "Ocorreu um erro ao compilar {spec} com: {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "devido às seguintes dependências ausente:",
  "CMakeTargetsUsage": "{package_name} fornece destinos CMake:",
  "CMakeTargetsUsageHeuristicMessage": "# isso é gerado heuristicamente e pode não estar correto",
  "ChecksFailedCheck": "vcpkg falhou; nenhum detalhe adicional está disponível.",
  "ChecksUnreachableCode": "código inacessível atingido",
  "ChecksUpdateVcpkg": "atualizar vcpkg executando novamente bootstrap-vcpkg pode resolver essa falha.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing só poderá ser usado se uma linha de base for fornecida por --ci-baseline.",
  "CiBaselineRegression": "REGRESSÃO: {spec} falhou com {build_result}. Se esperado, adicione {spec}=falha ao {path}.",
  "CiBaselineRegressionHeader": "REGRESSÕES:",
  "CiBaselineUnexpectedPass": "PASSANDO, REMOVER DA LISTA DE FALHA: {spec} ({path}).",
  "CmakeTargetsExcluded": "observação: {count} destinos adicionais não são exibidos.",
  "CommandFailed": "command:\n{command_line}\nfailed with the following results:",
  "CompressFolderFailed": "Failed to compress folder '{path}', exit code: {exit_code}",
  "CouldNotDeduceNugetIdAndVersion": "Não foi possível deduzir a ID e a versão do nuget do nome de arquivo: {path}",
  "CurlReportedUnexpectedResults": "curl has reported unexpected results to vcpkg and vcpkg cannot continue.\nPlease review the following text for sensitive information and open an issue on the Microsoft/vcpkg GitHub to help fix this problem!\ncmd: {command_line}\n=== curl output ===\n{actual}\n=== end curl output ===",
  "DownloadAvailable": "Uma cópia para download desta ferramenta está disponível e pode ser usada desativando {env_var}.",
  "DownloadedSources": "Fontes baixadas para {spec}",
  "DownloadingVcpkgCeBundle": "Baixando o pacote vcpkg-ce {version}...",
  "DownloadingVcpkgCeBundleLatest": "Baixando o pacote vcpkg-ce mais recente...",
  "ElapsedForPackage": "Tempo decorrido para lidar {spec}: {elapsed}",
  "EmptyLicenseExpression": "A expressão da licença SPDX estava vazia.",
  "EnvStrFailedToExtract": "could not expand the environment string:",
  "ErrorIndividualPackagesUnsupported": "In manifest mode, `vcpkg install` does not support individual package arguments.\nTo install additional packages, edit vcpkg.json and then run `vcpkg install` without any package arguments.",
  "ErrorInvalidClassicModeOption": "The option --{option} is not supported in classic mode and no manifest was found.",
  "ErrorInvalidManifestModeOption": "The option --{option} is not supported in manifest mode.",
  "ErrorMessage": "erro: ",
  "ErrorMessageMustUsePrintError": "The message named {value} starts with error:, it must be changed to prepend ErrorMessage in code instead.",
  "ErrorMissingVcpkgRoot": "Could not detect vcpkg-root. If you are trying to use a copy of vcpkg that you've built, you must define the VCPKG_ROOT environment variable to point to a cloned copy of https://github.com/Microsoft/vcpkg.",
  "ErrorNoVSInstance": "in triplet {triplet}: Unable to find a valid Visual Studio instance",
  "ErrorNoVSInstanceAt": "at \"{path}\"",
  "ErrorNoVSInstanceFullVersion": "with toolset version prefix {version}",
  "ErrorNoVSInstanceVersion": "with toolset version {version}",
  "ErrorRequireBaseline": "this vcpkg instance requires a manifest with a specified baseline in order to interact with ports. Please add 'builtin-baseline' to the manifest or add a 'vcpkg-configuration.json' that redefines the default registry.",
  "ErrorRequirePackagesList": "`vcpkg install` requires a list of packages to install in classic mode.",
  "ErrorVcvarsUnsupported": "in triplet {triplet}: Use of Visual Studio's Developer Prompt is unsupported on non-Windows hosts.\nDefine 'VCPKG_CMAKE_SYSTEM_NAME' or 'VCPKG_CHAINLOAD_TOOLCHAIN_FILE' in the triplet file.",
  "ErrorVsCodeNotFound": "Visual Studio Code was not found and the environment variable '{env_var}' is not set or invalid.",
  "ErrorVsCodeNotFoundPathExamined": "The following paths were examined:",
  "ExcludedPackage": "Excluído {spec}",
  "ExpectedCharacterHere": "esperava-se '{expected}' aqui",
  "ExpectedFailOrSkip": "esperava-se 'fail' ou 'skip' aqui",
  "ExpectedPortName": "esperava-se um nome de porta aqui",
  "ExpectedTripletName": "esperava-se um nome triplo aqui",
  "FailedToProvisionCe": "Falha ao provisionar vcpkg-ce.",
  "FailedToStoreBackToMirror": "falha ao armazenar de volta ao espelho:",
  "ForceSystemBinariesOnWeirdPlatforms": "A variável de ambiente VCPKG_FORCE_SYSTEM_BINARIES deve ser definida nas plataformas arm, s390x e ppc64le.",
  "FormattedParseMessageExpression": "on expression: {value}",
  "GenerateMsgErrorParsingFormatArgs": "parsing format string for {value}:",
  "GenerateMsgIncorrectComment": "a mensagem {value} tem um comentário incorreto:",
  "GenerateMsgNoArgumentValue": "{{{value}}} was specified in a comment, but was not used in the message.",
  "GenerateMsgNoCommentValue": "{{{value}}} was used in the message, but not commented.",
  "GitCommandFailed": "falhou ao executar: {command_line}",
  "GitStatusOutputExpectedFileName": "esperado nome de arquivo",
  "GitStatusOutputExpectedNewLine": "nova linha esperada",
  "GitStatusOutputExpectedRenameOrNewline": "arquivo renomeado esperado ou novas linhas",
  "GitStatusUnknownFileStatus": "status de arquivo desconhecido: {value}",
  "GitUnexpectedCommandOutput": "saída git inesperada",
  "GraphCycleDetected": "Ciclo detectado no gráfico em {package_name}:",
  "HashFileFailureToRead": "falha ao ler o arquivo '{path}' para hash: ",
  "HeaderOnlyUsage": "{package_name} é somente de cabeçalho e pode ser usado da CMake via:",
  "IllegalFeatures": "List of features is not allowed in this context",
  "IllegalPlatformSpec": "Platform qualifier is not allowed in this context",
  "InfoSetEnvVar": "You can also set the environment variable '{env_var}' to your editor of choice.",
  "InstallWithSystemManager": "Você pode instalar esta ferramenta através do gerenciador de pacotes do sistema.",
  "InstallWithSystemManagerMono": "Os usuários do Ubuntu 18.04 podem precisar de uma versão mais recente do mono, disponível em {url}.",
  "InstallWithSystemManagerPkg": "Você pode instalar esta ferramenta através do gerenciador de pacotes do sistema ({command_line}).",
  "InstallingPackage": "Instalando {action_index}/{count} {spec}...",
  "InternalErrorMessage": "erro interno: ",
  "InternalErrorMessageContact": "Abra um problema no https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug com etapas detalhadas para reproduzir o problema.",
  "InvalidArgument": "argumento Inválido",
  "InvalidArgumentRequiresAbsolutePath": "argumento inválido: os argumentos de caminho da configuração binária '{binary_source}' para cadeias de caracteres de configuração binária devem ser absolutos",
  "InvalidArgumentRequiresBaseUrl": "argumento inválido: a configuração binária '{binary_source}' requer uma URL base {base_url} como o primeiro argumento",
  "InvalidArgumentRequiresBaseUrlAndToken": "argumento inválido: a configuração binária '{binary_source}' requer pelo menos uma URL base e um token SAS",
  "InvalidArgumentRequiresNoneArguments": "argumento inválido: a configuração binária '{binary_source}' não usa argumentos",
  "InvalidArgumentRequiresOneOrTwoArguments": "argumento inválido: a configuração binária '{binary_source}' requer 1 ou 2 argumentos",
  "InvalidArgumentRequiresPathArgument": "argumento inválido: a configuração binária '{binary_source}' requer pelo menos um argumento de caminho",
  "InvalidArgumentRequiresPrefix": "argumento inválido: a configuração binária '{binary_source}' requer pelo menos um prefixo",
  "InvalidArgumentRequiresSingleArgument": "argumento inválido: a configuração binária '{binary_source}' não usa mais de 1 argumento",
  "InvalidArgumentRequiresSingleStringArgument": "argumento inválido: a configuração binária '{binary_source}' espera um único argumento de cadeia de caracteres",
  "InvalidArgumentRequiresSource": "argumento inválido: a configuração binária '{binary_source}' requer origem não vazia",
  "InvalidArgumentRequiresSourceArgument": "argumento inválido: a configuração binária '{binary_source}' requer pelo menos um argumento de origem",
  "InvalidArgumentRequiresTwoOrThreeArguments": "argumento inválido: a configuração binária '{binary_source}' requer 2 ou 3 argumentos",
  "InvalidArgumentRequiresValidToken": "argumento inválido: a configuração binária '{binary_source}' requer um token SAS sem um '?' anterior ao segundo argumento",
  "JsonErrorFailedToParse": "falhou ao analisar {path}:",
  "JsonErrorFailedToRead": "falha ao ler {path}: {error_msg}",
  "LicenseExpressionContainsExtraPlus": "A expressão de licença SPDX contém um '+' extra. Estes só são permitidos diretamente após um identificador de licença.",
  "LicenseExpressionContainsInvalidCharacter": "A expressão da licença SPDX contém um caractere inválido (0x{value:02X} '{value}').",
  "LicenseExpressionContainsUnicode": "A expressão de licença SPDX contém um caractere unicode (U+{value:04X} '{pretty_value}'), mas estas expressões são apenas ASCII.",
  "LicenseExpressionDocumentRefUnsupported": "A implementação atual não suporta referências DocumentRef- SPDX.",
  "LicenseExpressionExpectCompoundFoundParen": "Esperava-se um composto ou o final da cadeia de caracteres, foi encontrado um parêntese.",
  "LicenseExpressionExpectCompoundFoundWith": "Esperava-se AND ou OR, foi encontrado com (WITH só é permitido após os nomes da licença, não expressões entre parênteses).",
  "LicenseExpressionExpectCompoundFoundWord": "Esperava-se AND ou OR, encontrou um nome de licença ou exceção: '{value}'.",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "Esperava-se AND, OR ou WITH, encontrou uma licença ou nome de exceção: '{value}'.",
  "LicenseExpressionExpectExceptionFoundCompound": "Esperava-se um nome de exceção, foi encontrado o composto {value}.",
  "LicenseExpressionExpectExceptionFoundEof": "Esperava-se um nome de exceção, foi encontrado o final da cadeia de caracteres.",
  "LicenseExpressionExpectExceptionFoundParen": "Esperava-se um nome de exceção, foi encontrado um parêntese.",
  "LicenseExpressionExpectLicenseFoundCompound": "Esperava-se um nome de licença, foi encontrado o composto {value}.",
  "LicenseExpressionExpectLicenseFoundEof": "Esperava-se um nome de licença, foi encontrado no final da cadeia de caracteres.",
  "LicenseExpressionExpectLicenseFoundParen": "Esperava-se um nome de licença, foi encontrado um parêntese.",
  "LicenseExpressionImbalancedParens": "Havia um parêntese de fechamento sem um parêntese de abertura.",
  "LicenseExpressionUnknownException": "Identificador de exceção de licença desconhecido '{value}'. Os valores conhecidos estão listados em https://spdx.org/licenses/exceptions-index.html",
  "LicenseExpressionUnknownLicense": "Identificador de licença desconhecido '{value}'. Os valores conhecidos estão listados em https://spdx.org/licenses",
  "LocalizedMessageMustNotContainIndents": "The message named {value} contains what appears to be indenting which must be changed to use LocalizedString::append_indent instead.",
  "LocalizedMessageMustNotEndWithNewline": "The message named {value} ends with a newline which should be added by formatting rather than by localization.",
  "MsiexecFailedToExtract": "Msiexec falhou ao extrair '{path}' com o código de inicialização ou saída {exit_code} e a mensagem:",
  "NoLocalizationForMessages": "Nenhuma localização para as seguintes mensagens:",
  "NoRegistryForPort": "nenhum registro configurado para porta {package_name}",
  "NoteMessage": "observação: ",
  "ObjectStorageToolFailed": "{tool_name} falhou com o código de saída: {exit_code}",
  "PortNotInBaseline": "a linha de base não contém uma entrada para porta {package_name}",
  "ProcessorArchitectureMalformed": "Falha ao analisar %PROCESSOR_ARCHITECTURE% ({arch}) como uma arquitetura de CPU válida.",
  "ProcessorArchitectureMissing": "A variável de ambiente obrigatória %PROCESSOR_ARCHITECTURE% está ausente.",
  "ProcessorArchitectureW6432Malformed": "Falha ao analisar %PROCESSOR_ARCHITEW6432% ({arch}) como uma arquitetura de CPU válida. Voltando para %PROCESSOR_ARCHITECTURE%.",
  "RemovingPackage": "Removendo {action_index}/{count} {spec}",
  "RestoredPackagesFromVendor": "{count} pacote(s) restaurado(s) de {vendor} em {elapsed}",
  "ResultsHeader": "RESULTADOS",
  "SeeURL": "Consulte {url} para obter mais informações.",
  "SourceFieldPortNameMismatch": "O campo 'Fonte' dentro do arquivo CONTROLE, ou campos “nome” dentro do arquivo vcpkg.json tem o nome{package_name} e não corresponde ao diretório da porta {path}.",
  "ToolFetchFailed": "Não foi possível buscar {tool_name}.",
  "ToolInWin10": "Este utilitário é fornecido com o Windows 10 ou posterior.",
  "UnexpectedErrorDuringBulkDownload": "ocorreu um erro inesperado durante o download em massa.",
  "UnknownBaselineFileContent": "entrada de linha de base irreconhecível; esperava-se 'port:triplet=(fail|skip)'",
  "UnknownBinaryProviderType": "tipo de provedor binário desconhecido: provedores válidos são 'clear', 'default', 'nuget', 'nugetconfig', 'interactive' e 'files'",
  "UnknownTool": "vcpkg não possui uma definição desta ferramenta para esta plataforma.",
  "UnsupportedSystemName": "Could not map VCPKG_CMAKE_SYSTEM_NAME '{system_name}' to a vcvarsall platform. Supported system names are '', 'Windows' and 'WindowsStore'.",
  "UnsupportedToolchain": "in triplet {triplet}: Unable to find a valid toolchain for requested target architecture {arch}.\nThe selected Visual Studio instance is at: {path}\nThe available toolchain combinations are: {list}",
  "UpdateBaselineAddBaselineNoManifest": "a opção --{option} foi passada, mas não há nenhum arquivo de manifesto ao qual adicionar um campo 'builtin-baseline'.",
  "UpdateBaselineLocalGitError": "falha do git ao analisar HEAD para o registro vcpkg local em '{path}'",
  "UpdateBaselineNoConfiguration": "nem 'vcpkg.json' nem 'vcpkg-configuration.json' existem para atualizar.",
  "UpdateBaselineNoExistingBuiltinBaseline": "o arquivo de manifesto atualmente não contém um campo 'builtin-baseline'; para adicionar um, passe a opção --{option}.",
  "UpdateBaselineNoUpdate": "registro '{url}' não atualizado: '{value}'",
  "UpdateBaselineRemoteGitError": "falha do git ao buscar o repositório remoto '{url}'",
  "UpdateBaselineUpdatedBaseline": "registro atualizado '{url}': linha de base '{old_value}' -> '{new_value}'",
  "UploadedPackagesToVendor": "{count} pacote(s) carregado(s) para {vendor} em {elapsed}",
  "UsingManifestAt": "Usando o arquivo de manifesto em {path}.",
  "Utf8DecoderDereferencedAtEof": "utf8Decoder desreferenciado no final de uma cadeia de caracteres.",
  "VSExaminedInstances": "As seguintes instâncias do Visual Studio foram consideradas:",
  "VSExaminedPaths": "Os seguintes caminhos foram examinados para as instâncias do Visual Studio:",
  "VSNoInstances": "Não foi possível localizar uma instância completa do Visual Studio",
  "VcpkgCeIsExperimental": "vcpkg-ce ('configurar ambiente') é experimental e pode mudar a qualquer momento.",
  "VcpkgDisallowedClassicMode": "Could not locate a manifest (vcpkg.json) above the current working directory.\nThis vcpkg distribution does not have a classic mode instance.",
  "VcpkgHasCrashed": "vcpkg has crashed. Please create an issue at https://github.com/microsoft/vcpkg containing a brief summary of what you were trying to do and the following information.",
  "VcpkgInvalidCommand": "comando inválido: {command_name}",
  "VcpkgSendMetricsButDisabled": "passed --sendmetrics, but metrics are disabled.",
  "VersionCommandHeader": "versão do programa de gerenciamento de pacotes vcpkg {version}\n\nConsulte LICENSE.txt para obter informações de licença.",
  "VersionConstraintViolated": "dependência {spec} deveria ser pelo menos a versão {expected_version}, mas atualmente é {actual_version}.",
  "VersionInvalidDate": "`{version}` não é uma versão de data válida. As datas devem seguir o formato AAAA-MM-DD e os desambiguadores devem ser valores inteiros positivos separados por ponto sem zeros à esquerda.",
  "VersionInvalidRelaxed": "`{version}` não é uma versão relaxada válida (semver com contagem de elementos numéricos arbitrários).",
  "VersionInvalidSemver": "`{version}` não é uma versão semântica válida, consulte <https://semver.org>.",
  "VersionSpecMismatch": "Failed to load port because versions are inconsistent. The file \"{path}\" contains the version {actual_version}, but the version database indicates that it should be {expected_version}.",
  "WaitingForChildrenToExit": "Aguardando a saída dos processos filhos...",
  "WaitingToTakeFilesystemLock": "esperando para ativar o bloqueio do sistema de arquivos {path}...",
  "WarningMessage": "aviso: ",
  "WarningMessageMustUsePrintWarning": "The message named {value} starts with warning:, it must be changed to prepend WarningMessage in code instead.",
  "WarningsTreatedAsErrors": "avisos anteriores sendo interpretados como erros"
}
