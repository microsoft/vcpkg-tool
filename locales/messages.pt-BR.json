{
  "AddArtifactOnlyOne": "'{command_line}' só pode adicionar um artefato por vez.",
  "AddCommandFirstArg": "O primeiro parâmetro a ser adicionado deve ser 'artefato' ou 'porta'.",
  "AddFirstArgument": "O primeiro argumento para '{command_line}' deve ser 'artifact' ou 'port'.",
  "AddPortRequiresManifest": "'{command_line}' requer um arquivo de manifesto ativo.",
  "AddPortSucceeded": "Conseguiu adicionar portas ao arquivo vcpkg.json.",
  "AddRecurseOption": "Se você tiver certeza de que deseja removê-los, execute o comando com a opção --recurse.",
  "AddTripletExpressionNotAllowed": "expressões triplas não são permitidas aqui. Convém alterar `{package_name}:{triplet}` para `{package_name}`.",
  "AddVersionAddedVersionToFile": "versão adicionada {version} para {path}",
  "AddVersionCommitChangesReminder": "Você se lembrou de confirmar suas alterações?",
  "AddVersionCommitResultReminder": "Não se esqueça de confirmar o resultado!",
  "AddVersionDetectLocalChangesError": "ignorando a detecção de alterações locais devido a um formato inesperado na saída de status do git",
  "AddVersionFileNotFound": "não foi possível encontrar o arquivo necessário {path}",
  "AddVersionFormatPortSuggestion": "Execute `{command_line}` para formatar o arquivo",
  "AddVersionIgnoringOptionAll": "ignorando --{option} desde que um argumento de nome de porta foi fornecido",
  "AddVersionLoadPortFailed": "não é possível carregar a porta {package_name}",
  "AddVersionNewFile": "(novo arquivo)",
  "AddVersionNewShaIs": "novo SHA: {value}",
  "AddVersionNoFilesUpdated": "Nenhum arquivo foi atualizado",
  "AddVersionNoFilesUpdatedForPort": "Nenhum arquivo foi atualizado para {package_name}",
  "AddVersionNoGitSha": "não é possível obter SHA para porta {package_name}",
  "AddVersionOldShaIs": "SHA antigo: {value}",
  "AddVersionOverwriteOptionSuggestion": "Use --{option} para ignorar esta verificação",
  "AddVersionPortDoesNotExist": "{package_name} não existe",
  "AddVersionPortFilesShaChanged": "os arquivos de check-in de {package_name} foram alterados, mas a versão não foi atualizada",
  "AddVersionPortFilesShaUnchanged": "os arquivos de check-in para {package_name} não foram alterados da versão {version}",
  "AddVersionPortHasImproperFormat": "{package_name} não está formatado corretamente",
  "AddVersionSuggestNewVersionScheme": "Use o esquema de versão \"{new_scheme}\" em vez de \"{old_scheme}\" na porta \"{package_name}\".\nUse --{option} para desabilitar esta verificação.",
  "AddVersionUnableToParseVersionsFile": "não foi possível de analisar o arquivo de versões {path}",
  "AddVersionUncommittedChanges": "há alterações não confirmadas para {package_name}",
  "AddVersionUpdateVersionReminder": "Você se lembrou de atualizar a versão ou a versão da porta?",
  "AddVersionUseOptionAll": "{command_name} sem argumentos requer passar --{option} para atualizar todas as versões da porta de uma só vez",
  "AddVersionVersionAlreadyInFile": "versão {version} já está em {path}",
  "AddVersionVersionIs": "versão: {version}",
  "AddingCompletionEntry": "Adicionando entrada de conclusão vcpkg a {path}.",
  "AdditionalPackagesToExport": "Pacotes adicionais (*) precisam ser exportados para concluir esta operação.",
  "AdditionalPackagesToRemove": "Pacotes adicionais (*) precisam ser removidos para concluir esta operação.",
  "AllFormatArgsRawArgument": "cadeia de caracteres de formato \"{value}\" contém um argumento de formato bruto",
  "AllFormatArgsUnbalancedBraces": "chave não balanceada na cadeia de caracteres de formato \"{value}\"",
  "AllPackagesAreUpdated": "Todos os pacotes instalados estão atualizados com o arquivo de porta local.",
  "AlreadyInstalled": "{spec} já está instalado",
  "AlreadyInstalledNotHead": "{spec} já está instalado -- não está sendo criado pela HEAD",
  "AmbiguousConfigDeleteConfigFile": "Configuração vcpkg ambígua fornecida pelo manifesto e pelo arquivo de configuração.\n-- Excluir arquivo de configuração {path}",
  "AndroidHomeDirMissingProps": "source.properties ausente no diretório {env_var}: {path}",
  "AnotherInstallationInProgress": "Outra instalação está em andamento no computador, suspenso 6s antes de tentar novamente.",
  "AppliedUserIntegration": "Integração aplicada para todo o usuário para esta raiz vcpkg.",
  "ArtifactsOptionIncompatibility": "--{option} não tem efeito em localizar artefato.",
  "AssetSourcesArg": "Adicionar fontes para o cache de ativos. Consulte 'vcpkg help assetcaching'.",
  "AttemptingToFetchPackagesFromVendor": "Tentando buscar {count} pacote(s) do {vendor}",
  "AttemptingToSetBuiltInBaseline": "tentativa de definir a linha de base interna em vcpkg.json ao substituir o registro padrão em vcpkg-configuration.json.\no registro padrão de vcpkg-configuration.json será usado.",
  "AuthenticationMayRequireManualAction": "Um ou mais provedores de credenciais do {vendor} solicitaram ação manual. Adicione a fonte binária 'interativa' para permitir a interatividade.",
  "AutoSettingEnvVar": "-- Definindo automaticamente {env_var} variáveis de ambiente para \"{url}\".",
  "AutomaticLinkingForMSBuildProjects": "Todos os projetos do MSBuild C++ agora podem utilizar #include bibliotecas instaladas. A vinculação será tratada automaticamente. A instalação de novas bibliotecas as disponibilizará instantaneamente.",
  "AvailableArchitectureTriplets": "Tripletos de arquitetura disponíveis:",
  "AvailableHelpTopics": "Tópicos de ajuda disponíveis:",
  "BaselineConflict": "Especificar vcpkg-configuration.default-registry em um arquivo de manifesto entra em conflito com a linha de base interna.\nRemova uma dessas configurações conflitantes.",
  "BaselineFileNoDefaultField": "O arquivo de linha de base no commit {commit_sha} era inválido (sem campo \"default\").",
  "BaselineMissingDefault": "O baseline.json do commit `\"{commit_sha}\"` no repositório {url} era inválido (não continha um campo \"default\").",
  "BinarySourcesArg": "Adicione fontes para cache binário. Consulte 'vcpkg help binarycaching'.",
  "BinaryWithInvalidArchitecture": "{path}\n Expected: {expected}, but was {actual}",
  "BothYesAndNoOptionSpecifiedError": "não é possível especificar --no-{option} e --{option}.",
  "BuildAlreadyInstalled": "A {spec} já está instalada; remover {spec} antes de tentar compilá-la.",
  "BuildDependenciesMissing": "O comando build exige que todas as dependências já estejam instaladas.\nAs seguintes dependências estão ausentes:",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "Baixado",
  "BuildResultExcluded": "Excluído",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "REMOVIDO",
  "BuildResultSucceeded": "BEM-SUCEDIDO",
  "BuildResultSummaryHeader": "RESUMO PARA {triplet}",
  "BuildResultSummaryLine": "{build_result}: {count}",
  "BuildTreesRootDir": "(Experimental) Especifique o diretório raiz de buildtrees.",
  "BuildTroubleshootingMessage1": "Certifique-se de est arusando os mais recentes arquivos de porta com `git pull' e 'vcpkg update'.\nEm seguida, verifique se há problemas conhecidos em:",
  "BuildTroubleshootingMessage2": "Você pode enviar a respeito de um novo problema em:",
  "BuildTroubleshootingMessage3": "Incluir 'Erro de build [{package_name}]' em seu título de relatório de bug, as seguintes informações de versão em sua descrição de bug, e anexe qualquer logs de falha relevante do erro acima.",
  "BuildTroubleshootingMessage4": "Use o modelo pré-preenchido de {path} ao relatar seu problema.",
  "BuildingFromHead": "Criando {spec} de HEAD...",
  "BuildingPackage": "Criando {spec}...",
  "BuildingPackageFailed": "Ocorreu um erro ao compilar {spec} com: {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "devido às seguintes dependências ausente:",
  "BuiltInTriplets": "tripletos integrados do vcpkg:",
  "BuiltWithIncorrectArchitecture": "The following files were built for an incorrect architecture:",
  "CISettingsExclude": "Comma-separated list of ports to skip",
  "CISettingsOptCIBase": "Path to the ci.baseline.txt file. Used to skip ports and detect regressions.",
  "CISettingsOptExclude": "Comma separated list of ports to skip",
  "CISettingsOptFailureLogs": "Directory to which failure logs will be copied",
  "CISettingsOptHostExclude": "Comma separated list of ports to skip for the host triplet",
  "CISettingsOptOutputHashes": "File to output all determined package hashes",
  "CISettingsOptParentHashes": "File to read package hashes for a parent CI state, to reduce the set of changed packages",
  "CISettingsOptSkippedCascadeCount": "Asserts that the number of --exclude and supports skips exactly equal this number",
  "CISettingsOptXUnit": "File to output results in XUnit format (internal)",
  "CISettingsVerifyGitTree": "Verify that each git tree object matches its declared version (this is very slow)",
  "CISettingsVerifyVersion": "Print result for each port instead of just errors.",
  "CISwitchOptAllowUnexpectedPassing": "Indicates that 'Passing, remove from fail list' results should not be emitted.",
  "CISwitchOptDryRun": "Print out plan without execution",
  "CISwitchOptRandomize": "Randomize the install order",
  "CISwitchOptSkipFailures": "Indicates that ports marked `=fail` in ci.baseline.txt should be skipped.",
  "CISwitchOptXUnitAll": "Report also unchanged ports to the XUnit output (internal)",
  "CMakeTargetsUsage": "{package_name} fornece destinos CMake:",
  "CMakeTargetsUsageHeuristicMessage": "# isso é gerado heuristicamente e pode não estar correto",
  "CMakeToolChainFile": "Os projetos do CMake devem usar: \"-DCMAKE_TOOLCHAIN_FILE={path}\"",
  "CMakeUsingExportedLibs": "Para usar bibliotecas exportadas em projetos do CMake, adicione {value} à linha de comando do CMake.",
  "ChecksFailedCheck": "vcpkg falhou; nenhum detalhe adicional está disponível.",
  "ChecksUnreachableCode": "código inacessível atingido",
  "ChecksUpdateVcpkg": "atualizar vcpkg executando novamente bootstrap-vcpkg pode resolver essa falha.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing só poderá ser usado se uma linha de base for fornecida por --ci-baseline.",
  "CiBaselineDisallowedCascade": "REGRESSÃO: {spec} em cascata, mas é necessário passar. ({path}).",
  "CiBaselineRegression": "REGRESSÃO: {spec} falhou com {build_result}. Se esperado, adicione {spec}=falha ao {path}.",
  "CiBaselineRegressionHeader": "REGRESSÕES:",
  "CiBaselineUnexpectedPass": "PASSANDO, REMOVER DA LISTA DE FALHA: {spec} ({path}).",
  "ClearingContents": "Limpando os conteúdos de {path}",
  "CmakeTargetsExcluded": "observação: {count} destinos adicionais não são exibidos.",
  "CmdAddVersionOptAll": "Process versions for all ports.",
  "CmdAddVersionOptOverwriteVersion": "Overwrite `git-tree` of an existing version.",
  "CmdAddVersionOptSkipFormatChk": "Skips the formatting check of vcpkg.json files.",
  "CmdAddVersionOptSkipVersionFormatChk": "Skips the version format check.",
  "CmdAddVersionOptVerbose": "Print success messages instead of just errors.",
  "CmdContactOptSurvey": "Launch default browser to the current vcpkg survey",
  "CmdDependInfoOptDGML": "Creates graph on basis of dgml",
  "CmdDependInfoOptDepth": "Show recursion depth in output",
  "CmdDependInfoOptDot": "Creates graph on basis of dot",
  "CmdDependInfoOptMaxRecurse": "Set max recursion depth, a value of -1 indicates no limit",
  "CmdDependInfoOptSort": "Set sort order for the list of dependencies, accepted values are: lexicographical, topological (default), x-tree, reverse",
  "CmdEditOptAll": "Open editor into the port as well as the port-specific buildtree subfolder",
  "CmdEditOptBuildTrees": "Open editor into the port-specific buildtree subfolder",
  "CmdEnvOptions": "Add installed {path} to {env_var}",
  "CmdExportOpt7Zip": "Export to a 7zip (.7z) file",
  "CmdExportOptChocolatey": "Export a Chocolatey package (experimental feature)",
  "CmdExportOptDebug": "Enable prefab debug",
  "CmdExportOptDryRun": "Do not actually export.",
  "CmdExportOptIFW": "Export to an IFW-based installer",
  "CmdExportOptInstalled": "Export all installed packages",
  "CmdExportOptMaven": "Enable Maven",
  "CmdExportOptNuget": "Export a NuGet package",
  "CmdExportOptPrefab": "Export to Prefab format",
  "CmdExportOptRaw": "Export to an uncompressed directory",
  "CmdExportOptZip": "Export to a zip file",
  "CmdExportSettingChocolateyMaint": "Specify the maintainer for the exported Chocolatey package (experimental feature)",
  "CmdExportSettingChocolateyVersion": "Specify the version suffix to add for the exported Chocolatey package (experimental feature)",
  "CmdExportSettingConfigFile": "Specify the temporary file path for the installer configuration",
  "CmdExportSettingInstallerPath": "Specify the file path for the exported installer",
  "CmdExportSettingNugetDesc": "Specify a description for the exported NuGet package",
  "CmdExportSettingNugetID": "Specify the id for the exported NuGet package (overrides --output)",
  "CmdExportSettingNugetVersion": "Specify the version for the exported NuGet package",
  "CmdExportSettingOutput": "Specify the output name (used to construct filename)",
  "CmdExportSettingOutputDir": "Specify the output directory for produced artifacts",
  "CmdExportSettingPkgDir": "Specify the temporary directory path for the repacked packages",
  "CmdExportSettingPrefabArtifactID": "Artifact Id is the name of the project according Maven specifications",
  "CmdExportSettingPrefabGroupID": "GroupId uniquely identifies your project according Maven specifications",
  "CmdExportSettingPrefabVersion": "Version is the name of the project according Maven specifications",
  "CmdExportSettingRepoDir": "Specify the directory path for the exported repository",
  "CmdExportSettingRepoURL": "Specify the remote repository URL for the online installer",
  "CmdExportSettingSDKMinVersion": "Android minimum supported SDK version",
  "CmdExportSettingSDKTargetVersion": "Android target sdk version",
  "CmdFetchOptXStderrStatus": "Direct status/downloading messages to stderr rather than stdout. (Errors/failures still go to stdout)",
  "CmdFormatManifestOptAll": "Format all ports' manifest files.",
  "CmdFormatManifestOptConvertControl": "Convert CONTROL files to manifest files.",
  "CmdGenerateMessageMapOptNoOutputComments": "When generating the message map, exclude comments (useful for generating the English localization file)",
  "CmdGenerateMessageMapOptOutputComments": "When generating the message map, include comments (the default)",
  "CmdInfoOptInstalled": "(experimental) Report on installed packages instead of available",
  "CmdInfoOptTransitive": "(experimental) Also report on dependencies of installed packages",
  "CmdNewOptApplication": "Create an application manifest (don't require name or version).",
  "CmdNewOptSingleFile": "Embed vcpkg-configuration.json into vcpkg.json.",
  "CmdNewOptVersionDate": "Interpret --version as an ISO 8601 date. (YYYY-MM-DD)",
  "CmdNewOptVersionRelaxed": "Interpret --version as a relaxed-numeric version. (Nonnegative numbers separated by dots)",
  "CmdNewOptVersionString": "Interpret --version as a string with no ordering behavior.",
  "CmdNewSettingName": "Name for the new manifest.",
  "CmdNewSettingVersion": "Version for the new manifest.",
  "CmdRegenerateOptDryRun": "does not actually perform the action, shows only what would be done",
  "CmdRegenerateOptForce": "proceeds with the (potentially dangerous) action without confirmation",
  "CmdRegenerateOptNormalize": "apply any deprecation fixups",
  "CmdRemoveOptDryRun": "Print the packages to be removed, but do not remove them",
  "CmdRemoveOptOutdated": "Select all packages with versions that do not match the portfiles",
  "CmdRemoveOptRecurse": "Allow removal of packages not explicitly specified on the command line",
  "CmdSetInstalledOptDryRun": "Do not actually build or install",
  "CmdSetInstalledOptNoUsage": "Don't print CMake usage information after install.",
  "CmdSetInstalledOptWritePkgConfig": "Writes out a NuGet packages.config-formatted file for use with external binary caching.\nSee `vcpkg help binarycaching` for more information.",
  "CmdUpdateBaselineOptDryRun": "Print out plan without execution",
  "CmdUpdateBaselineOptInitial": "add a `builtin-baseline` to a vcpkg.json that doesn't already have it",
  "CmdUpgradeOptAllowUnsupported": "Instead of erroring on an unsupported port, continue with a warning.",
  "CmdUpgradeOptNoDryRun": "Actually upgrade",
  "CmdUpgradeOptNoKeepGoing": "Stop installing packages on failure",
  "CmdXDownloadOptHeader": "Additional header to use when fetching from URLs",
  "CmdXDownloadOptSha": "The hash of the file to be downloaded",
  "CmdXDownloadOptSkipSha": "Do not check the SHA512 of the downloaded file",
  "CmdXDownloadOptStore": "Indicates the file should be stored instead of fetched",
  "CmdXDownloadOptUrl": "URL to download and store if missing from cache",
  "CommandFailed": "o comando:\n{command_line}\nfalhou com os seguintes resultados:",
  "CommunityTriplets": "Tripletos da comunidade VCPKG:",
  "ComparingUtf8Decoders": "Comparação de Utf8Decoders com diferentes proveniências; isso é sempre um erro",
  "CompressFolderFailed": "Falha ao compactar a pasta \"{path}\":",
  "ComputingInstallPlan": "Plano de instalação de computação...",
  "ConflictingFiles": "Os seguintes arquivos já estão instalados em {path} e estão em conflito com {spec}",
  "ConflictingValuesForOption": "valores conflitantes especificados para '--{option}'.",
  "ConstraintViolation": "Encontrou uma violação de restrição:",
  "ContinueCodeUnitInStart": "encontrou unidade de código de continuação na posição inicial",
  "ControlAndManifestFilesPresent": "Tanto um arquivo manifesto quanto um arquivo CONTROL existem no diretório porta: {path}",
  "ControlCharacterInString": "Caractere de controle na cadeia de caracteres",
  "CopyrightIsDir": "'{path}' sendo um diretório foi preterido.",
  "CorruptedDatabase": "Banco de dados corrompido.",
  "CorruptedInstallTree": "Sua árvore 'instalada' do vcpkg está corrompida.",
  "CouldNotDeduceNugetIdAndVersion": "Não foi possível deduzir a ID e a versão do nuget do nome de arquivo: {path}",
  "CouldNotFindBaseline": "Não foi possível encontrar a linha de base explicitamente especificada `\"{commit_sha}\"` no arquivo de linha de base {path}",
  "CouldNotFindBaselineForRepo": "Não foi possível encontrar a linha de base `\"{commit_sha}\"` para o repositório {package_name}",
  "CouldNotFindBaselineInCommit": "Não foi possível encontrar a linha de base no commit `\"{commit_sha}\"` do repositório {package_name}:",
  "CouldNotFindGitTreeAtCommit": "não foi possível encontrar a árvore git para `versions` no repositório {package_name} no commit {commit_sha}",
  "CouldNotFindToolVersion": "Não foi possível localizar <tools version=\"{version}\"> em {path}",
  "CreateFailureLogsDir": "Criando diretório de saída de logs de falha {path}.",
  "CreatedNuGetPackage": "Nupkg criado: {path}",
  "Creating7ZipArchive": "Criando arquivo 7zip...",
  "CreatingNugetPackage": "Criando o pacote NuGet...",
  "CreatingZipArchive": "Criando arquivo zip...",
  "CreationFailed": "Falha ao criar {path}.",
  "CurlFailedToExecute": "curl falhou ao executar com código de saída {exit_code}.",
  "CurlReportedUnexpectedResults": "O cURL relatou resultados inesperados para vcpkg e vcpkg não pode continuar.\nExamine o seguinte texto para obter informações confidenciais e abra um problema no GitHub Microsoft/vcpkg para ajudar a corrigir esse problema!\ncmd: {command_line}\n=== saída do curl ===\n{actual}\n=== final da saída do curl ===",
  "CurlReturnedUnexpectedResponseCodes": "curl retornou um número diferente de códigos de resposta do que o esperado para a solicitação ({real} vs esperado {expected}).",
  "CurrentCommitBaseline": "Você pode usar a confirmação atual como uma linha de base, que é:\n\"builtin-baseline\": \"{value}\"",
  "DateTableHeader": "Data",
  "DefaultBrowserLaunched": "Navegador padrão iniciado para {url}.",
  "DefaultFlag": "O padrão é --{option} estar ativado.",
  "DefaultPathToBinaries": "Com base nas configurações do seu sistema, o caminho padrão para armazenar os binários é \"{path}\". Isso consulta %LOCALAPPDATA%/%APPDATA% no Windows e $XDG_CACHE_HOME ou $HOME em outras plataformas.",
  "DeleteVcpkgConfigFromManifest": "-- Ou remova \"vcpkg-configuration\" do arquivo de manifesto {path}.",
  "DeprecatedPrefabDebugOption": "--prefab-debug agora está obsoleto.",
  "DetectCompilerHash": "Detectando hash do compilador para tripleto {triplet}...",
  "DocumentedFieldsSuggestUpdate": "Se estes forem campos documentados que devem ser reconhecidos, tente atualizar a ferramenta vcpkg.",
  "DownloadAvailable": "Uma cópia para download desta ferramenta está disponível e pode ser usada desativando {env_var}.",
  "DownloadRootsDir": "Especifique o diretório raiz de downloads.\n(padrão: {env_var})",
  "DownloadedSources": "Fontes baixadas para {spec}",
  "DownloadingPortableToolVersionX": "Uma versão adequada de {tool_name} não foi encontrada (v{version} exigida) Baixando {tool_name} {version} portátil...",
  "DownloadingTool": "Baixando {tool_name}...\n{url}->{path}",
  "DownloadingVcpkgCeBundle": "Baixando o pacote vcpkg-ce {version}...",
  "DownloadingVcpkgCeBundleLatest": "Baixando o pacote vcpkg-ce mais recente...",
  "DownloadingVcpkgStandaloneBundle": "Baixando o pacote autônomo {version}.",
  "DownloadingVcpkgStandaloneBundleLatest": "Baixando o pacote autônomo mais recente.",
  "DuplicateCommandOption": "A opção --{option} só pode ser passada uma vez.",
  "DuplicateOptions": "'--{value}' especificado várias vezes.",
  "DuplicatedKeyInObj": "Chave duplicada \"{value}\" em um objeto",
  "ElapsedForPackage": "Tempo decorrido para lidar {spec}: {elapsed}",
  "ElapsedInstallTime": "Tempo total decorrido: {count}",
  "ElapsedTimeForChecks": "Tempo para determinar a passagem/falha: {elapsed}",
  "EmailVcpkgTeam": "Envie um email para {url} com qualquer comentário.",
  "EmbeddingVcpkgConfigInManifest": "A inserção de 'vcpkg-configuration' em um arquivo de manifesto é um recurso EXPERIMENTAL.",
  "EmptyArg": "A opção --{option} deve ser passada para um argumento não vazio.",
  "EmptyLicenseExpression": "A expressão da licença SPDX estava vazia.",
  "EndOfStringInCodeUnit": "encontrou o final da cadeia de caracteres no meio do ponto de código",
  "EnvInvalidMaxConcurrency": "{env_var} é {valor}, deve ser > 0",
  "EnvStrFailedToExtract": "não foi possível expandir a cadeia de caracteres do ambiente:",
  "ErrorDetectingCompilerInfo": "ao detectar informações do compilador:\nO conteúdo do arquivo de log em \"{path}\" é:",
  "ErrorIndividualPackagesUnsupported": "No modo de manifesto, `vcpkg install` não dá suporte a argumentos de pacotes individuais.\nPara instalar pacotes adicionais, edite o vcpkg.json e execute `vcpkg install` sem nenhum argumento de pacote.",
  "ErrorInvalidClassicModeOption": "A opção --{option} não é suportada no modo clássico e nenhum manifesto foi encontrado.",
  "ErrorInvalidManifestModeOption": "Não há suporte para a opção --{option} no modo de manifesto.",
  "ErrorMessage": "erro: ",
  "ErrorMessageMustUsePrintError": "A mensagem chamada {value} começa com o erro:, ela deve ser alterada para preceder ErrorMessage no código.",
  "ErrorMissingVcpkgRoot": "Não foi possível detectar vcpkg-root. Se você estiver tentando usar uma cópia do vcpkg criada, defina a variável de ambiente VCPKG_ROOT para apontar para uma cópia clonada do https://github.com/Microsoft/vcpkg.",
  "ErrorNoVSInstance": "no triplo {triplet}: Não é possível encontrar uma instância válida do Visual Studio",
  "ErrorNoVSInstanceAt": "em \"{path}\"",
  "ErrorNoVSInstanceFullVersion": "com o prefixo de versão do conjunto de ferramentas {version}",
  "ErrorNoVSInstanceVersion": "com a versão do conjunto de ferramentas {version}",
  "ErrorParsingBinaryParagraph": "ao analisar o Parágrafo Binário de {spec}",
  "ErrorRequireBaseline": "esta instância do vcpkg exige um manifesto com uma linha de base especificada para interagir com as portas. Adicione 'builtin-baseline' ao manifesto ou adicione um 'vcpkg-configuration.json' que redefina o registro padrão.",
  "ErrorRequirePackagesList": "`vcpkg install` exige uma lista de pacotes para instalar no modo clássico.",
  "ErrorUnableToDetectCompilerInfo": "o vcpkg não pôde detectar as informações do compilador ativo. Consulte acima para obter a saída de falha do CMake.",
  "ErrorVcvarsUnsupported": "no triplo {triplet}: O uso do Prompt de Desenvolvedor do Visual Studio não é suportado em hosts que não sejam do Windows.\nDefina 'VCPKG_CMAKE_SYSTEM_NAME' ou 'VCPKG_CHAINLOAD_TOOLCHAIN_FILE' no arquivo triplo.",
  "ErrorVsCodeNotFound": "O Visual Studio Code não foi encontrado e a variável de ambiente {env_var} não está definida ou é inválida.",
  "ErrorVsCodeNotFoundPathExamined": "Os seguintes caminhos foram examinados:",
  "ErrorWhileFetchingBaseline": "ao buscar a linha de base `\"{value}\"` do repositório {package_name}:",
  "ErrorWhileParsing": "Erros ao analisar {path}.",
  "ErrorWhileWriting": "Erro ao gravar {path}",
  "ErrorsFound": "Encontrou os seguintes erros:",
  "ExceededRecursionDepth": "Profundidade de recursão excedida.",
  "ExcludedPackage": "Excluído {spec}",
  "ExcludedPackages": "Estão excluídos os seguintes pacotes:",
  "ExpectedAtMostOneSetOfTags": "Foram encontrados {count} conjuntos de {old_value}.*{new_value}, mas esperado no máximo 1, no bloco: \n{value}",
  "ExpectedCascadeFailure": "Esperado {expected} falha em cascata, mas houve {actual} falhas em cascata.",
  "ExpectedCharacterHere": "esperava-se '{expected}' aqui",
  "ExpectedDigitsAfterDecimal": "Dígitos esperados após o ponto decimal",
  "ExpectedExtension": "The file extension was not {extension}: {path}",
  "ExpectedFailOrSkip": "esperado 'falhar', 'pular' ou 'passar' aqui",
  "ExpectedOneSetOfTags": "Foram encontrados {count} conjuntos de {old_value}.*{new_value}, mas esperado exatamente 1, no bloco: \n {value}",
  "ExpectedPathToExist": "Espera-se que {path} exista após a busca",
  "ExpectedPortName": "esperava-se um nome de porta aqui",
  "ExpectedStatusField": "Campo 'status' esperado no parágrafo de status",
  "ExpectedTripletName": "esperava-se um nome triplo aqui",
  "ExpectedValueForOption": "valor esperado após --{option}.",
  "ExportArchitectureReq": "O pré-fabricado de exportação exige que pelo menos uma das seguintes arquiteturas arm64-v8a, armeabi-v7a, x86_64, x86 esteja presente.",
  "ExportPrefabRequiresAndroidTriplet": "export prefab requer um trio Android.",
  "ExportUnsupportedInManifest": "A exportação vcpkg não oferece suporte ao modo manifesto, para permitir futuras considerações de design. Você pode usar a exportação no modo clássico executando vcpkg fora de um projeto baseado em manifesto.",
  "Exported7zipArchive": "arquivo 7zip exportado em: {path}",
  "ExportedZipArchive": "Arquivo zip exportado em: {path}",
  "ExportingAlreadyBuiltPackages": "Os seguintes pacotes já estão compilados e serão exportados:",
  "ExportingMaintenanceTool": "Exportando ferramenta de manutenção...",
  "ExportingPackage": "Exportando {package_name}...",
  "ExtendedDocumentationAtUrl": "Documentação estendida disponível em '{url}'.",
  "ExtractingTool": "Extraindo {tool_name}...",
  "FailedPostBuildChecks": "Found {count} post-build check problem(s). To submit these ports to curated catalogs, please first correct the portfile: {path}",
  "FailedToCheckoutRepo": "falha ao fazer check-out de `versions` do repositório {package_name}",
  "FailedToDetermineArchitecture": "unable to determine the architecture of {path}.\n{command_line}",
  "FailedToDetermineCurrentCommit": "Falha ao determinar a confirmação atual:",
  "FailedToDownloadFromMirrorSet": "Falha ao baixar do conjunto de espelhos",
  "FailedToExtract": "Falha ao extrair \"{path}\":",
  "FailedToFetchError": "{error_msg}\nFalha ao buscar {package_name}:",
  "FailedToFindBaseline": "Falha ao encontrar baseline.json",
  "FailedToFindPortFeature": "Não foi possível encontrar {feature} em {spec}.",
  "FailedToFormatMissingFile": "Nenhum arquivo para formatar.\nPasse --all ou os arquivos explícitos para formatar ou converter.",
  "FailedToLoadInstalledManifest": "O arquivo de controle ou de manifesto para {spec} não pôde ser carregado devido ao seguinte erro. Remova {spec} e tente novamente.",
  "FailedToLoadManifest": "Falha ao carregar o manifesto do diretório {path}",
  "FailedToLoadPort": "Falha ao carregar a porta {package_name} de {path}",
  "FailedToLoadPortFrom": "Falha ao carregar a porta de {path}",
  "FailedToLoadUnnamedPortFromPath": "Falha ao carregar a porta de {path}",
  "FailedToLocateSpec": "Falha ao localizar especificação no gráfico: {spec}",
  "FailedToObtainDependencyVersion": "Não é possível encontrar a versão de dependência desejada.",
  "FailedToObtainLocalPortGitSha": "Falha ao obter git SHAs para portas locais.",
  "FailedToObtainPackageVersion": "Não é possível encontrar a versão do pacote desejada.",
  "FailedToParseCMakeConsoleOut": "Falha ao analisar a saída do console do CMake para localizar marcadores de início/término do bloco.",
  "FailedToParseConfig": "Falha ao analisar a configuração {path}",
  "FailedToParseControl": "Falha ao analisar o arquivo de controle: {path}",
  "FailedToParseJson": "Falha ao analisar o arquivo JSON: {path}",
  "FailedToParseManifest": "Falha ao analisar o arquivo de manifesto: {path}",
  "FailedToParseNoTopLevelObj": "Falha ao analisar {path}, era esperado um objeto de nível superior.",
  "FailedToParseSerializedBinParagraph": "[verificação de integridade] Falha ao analisar um parágrafo binário serializado.\nAbra um problema em https://github.com/microsoft/vcpkg, com a seguinte saída:\n{error_msg}\nParágrafo Binário Serializado:",
  "FailedToParseVersionXML": "Não foi possível analisar a versão da ferramenta {tool_name}. A cadeia de caracteres de versão era: {version}",
  "FailedToProvisionCe": "Falha ao provisionar vcpkg-ce.",
  "FailedToRead": "Falha ao ler {path}: {error_msg}",
  "FailedToReadParagraph": "Falha ao ler parágrafos de {path}",
  "FailedToRemoveControl": "Falha ao remover o arquivo de controle {path}",
  "FailedToRunToolToDetermineVersion": "Falha ao executar \"{path}\" para determinar a versão de {tool_name}.",
  "FailedToStoreBackToMirror": "falha ao armazenar de volta ao espelho:",
  "FailedToStoreBinaryCache": "Falha ao armazenar o cache binário {path}",
  "FailedToTakeFileSystemLock": "Falha ao obter o bloqueio do sistema de arquivos em {path}",
  "FailedToWriteManifest": "Falha ao gravar o arquivo de manifesto {path}",
  "FailedVendorAuthentication": "Não foi possível autenticar um ou mais provedores de credenciais do {vendor}. Consulte '{url}' para obter mais detalhes sobre como fornecer credenciais.",
  "FeedbackAppreciated": "Agradecemos seus comentários!",
  "FetchingBaselineInfo": "Buscando informações de linha de base de {package_name}...",
  "FetchingRegistryInfo": "Buscando informações de registro de {url} ({value})...",
  "FileNotFound": "{path}: arquivo não encontrado",
  "FileReadFailed": "Failed to read {count} bytes from {path} at offset {byte_offset}.",
  "FileSeekFailed": "Failed to seek to position {byte_offset} in {path}.",
  "FileSystemOperationFailed": "Falha na operação do sistema de arquivos:",
  "FilesExported": "Arquivos exportados em: {path}",
  "FishCompletion": "a conclusão do peixe vcpkg já foi adicionada em \"{path}\".",
  "FloatingPointConstTooBig": "Constante de ponto flutuante muito grande: {count}",
  "FollowingPackagesMissingControl": "Os pacotes a seguir não têm um CONTROL ou vcpkg.json válido:",
  "FollowingPackagesNotInstalled": "Os seguintes pacotes não estão instalados:",
  "FollowingPackagesUpgraded": "Os seguintes pacotes estão atualizados:",
  "ForceSystemBinariesOnWeirdPlatforms": "A variável de ambiente VCPKG_FORCE_SYSTEM_BINARIES deve ser definida nas plataformas arm, s390x e ppc64le.",
  "FormattedParseMessageExpression": "na expressão: {value}",
  "GenerateMsgErrorParsingFormatArgs": "analisando a cadeia de caracteres de formato para {value}:",
  "GenerateMsgIncorrectComment": "a mensagem {value} tem um comentário incorreto:",
  "GenerateMsgNoArgumentValue": "{{{value}}} foi especificado em um comentário, mas não foi usado na mensagem.",
  "GenerateMsgNoCommentValue": "{{{value}}} foi usado na mensagem, mas não foi comentado.",
  "GeneratedConfiguration": "Configuração gerada {path}.",
  "GeneratedInstaller": "{path} instalador gerado.",
  "GeneratingConfiguration": "Gerando configuração {path}...",
  "GeneratingInstaller": "Gerando instalador {path}...",
  "GeneratingRepo": "Gerando repositório {path}...",
  "GetParseFailureInfo": "Use '--debug' para mais informações sobre as falhas de análise.",
  "GitCommandFailed": "falhou ao executar: {command_line}",
  "GitRegistryMustHaveBaseline": "A entrada de registro git para \"{package_name}\" deve ter um campo \"baseline\" que seja um SHA de confirmação git válido (40 caracteres hexadecimais).\nO HEAD atual desse repositório é \"{value}\".",
  "GitStatusOutputExpectedFileName": "esperado nome de arquivo",
  "GitStatusOutputExpectedNewLine": "nova linha esperada",
  "GitStatusOutputExpectedRenameOrNewline": "arquivo renomeado esperado ou novas linhas",
  "GitStatusUnknownFileStatus": "status de arquivo desconhecido: {value}",
  "GitUnexpectedCommandOutput": "saída git inesperada",
  "GraphCycleDetected": "Ciclo detectado no gráfico em {package_name}:",
  "HashFileFailureToRead": "falha ao ler o arquivo \"{path}\" para hash: ",
  "HeaderOnlyUsage": "{package_name} é somente de cabeçalho e pode ser usado da CMake via:",
  "HelpBuiltinBase": "A linha de base faz referência a um commit no repositório vcpkg que estabelece uma versão mínima em cada dependência no gráfico. Por exemplo, se nenhuma outra restrição for especificada (direta ou transitivamente), a versão será resolvida para a linha de base do manifesto de nível superior. As linhas de base de dependências transitivas são ignoradas.",
  "HelpContactCommand": "Exibir informações de contato para enviar comentários.",
  "HelpCreateCommand": "Criar uma nova porta.",
  "HelpDependInfoCommand": "Exibir uma lista de dependências para portas.",
  "HelpEditCommand": "Abra uma porta para edição (use a variável de ambiente '{env_var}' para definir um programa de editor, o padrão é 'code').",
  "HelpEnvCommand": "Cria um ambiente de shell limpo para desenvolvimento ou compilação.",
  "HelpExampleCommand": "Para obter mais ajuda (incluindo exemplos), consulte a pasta de documentos README.md em anexo.",
  "HelpExampleManifest": "Manifesto de exemplo:",
  "HelpExportCommand": "Exporta um pacote.",
  "HelpFormatManifestCommand": "Formatiza todos os arquivos vcpkg.json. Execute isso antes de confirmar para vcpkg.",
  "HelpHashCommand": "Hash de um arquivo por algoritmo específico, o padrão é SHA512.",
  "HelpInitializeRegistryCommand": "Inicializa um registro no diretório <path>.",
  "HelpInstallCommand": "Instalar um pacote.",
  "HelpListCommand": "Listar pacotes instalados.",
  "HelpManifestConstraints": "Os manifestos podem colocar três tipos de restrições nas versões usadas",
  "HelpMinVersion": "Vcpkg selecionará a versão mínima encontrada que corresponda a todas as restrições aplicáveis, incluindo a versão da linha de base especificada no nível superior, bem como quaisquer restrições \"version>=\" no gráfico.",
  "HelpOverrides": "Quando usado como o manifesto de nível superior (como ao executar `vcpkg install` no diretório), as substituições permitem que um manifesto cause um curto-circuito na resolução de dependências e especifique exatamente a versão a ser usada. Eles podem ser usados para lidar com conflitos de versão, como dependências de `version-string`. Eles não serão considerados quando transitivamente dependentes.",
  "HelpOwnsCommand": "Pesquise arquivos em pacotes instalados.",
  "HelpPackagePublisher": "Além disso, os editores de pacotes podem usar restrições \"version>=\" para garantir que os consumidores estejam usando pelo menos uma determinada versão mínima de uma determinada dependência. Por exemplo, se uma biblioteca precisar de uma API adicionada ao boost-asio na versão 1.70, uma restrição \"version>=\" garantirá que os usuários transitivos usem uma versão suficiente, mesmo diante de substituições de versões individuais ou referências entre registros.",
  "HelpPortVersionScheme": "Cada versão possui adicionalmente uma \"versão de porta\" que é um número inteiro não negativo. Quando renderizado como texto, a versão da porta (se diferente de zero) é adicionada como um sufixo ao texto da versão primária separada por um hash (#). As versões de porta são classificadas lexograficamente após o texto da versão primária, por exemplo:\n1.0.0 < 1.0.0#1 < 1.0.1 < 1.0.1#5 < 2.0.0",
  "HelpRemoveCommand": "Desinstalar um pacote.",
  "HelpRemoveOutdatedCommand": "Desinstalar todos os pacotes desatualizados.",
  "HelpResponseFileCommand": "Especifique um arquivo de resposta para fornecer parâmetros adicionais.",
  "HelpSearchCommand": "Pesquisar os pacotes disponíveis para serem criados.",
  "HelpTextOptFullDesc": "Do not truncate long text",
  "HelpTopicCommand": "Exibir ajuda para um tópico específico.",
  "HelpTopicsCommand": "Exibir a lista de tópicos de ajuda.",
  "HelpTxtOptAllowUnsupportedPort": "Instead of erroring on an unsupported port, continue with a warning.",
  "HelpTxtOptCleanAfterBuild": "Clean buildtrees, packages and downloads after building each package",
  "HelpTxtOptCleanBuildTreesAfterBuild": "Clean buildtrees after building each package",
  "HelpTxtOptCleanDownloadsAfterBuild": "Clean downloads after building each package",
  "HelpTxtOptCleanPkgAfterBuild": "Clean packages after building each package",
  "HelpTxtOptDryRun": "Do not actually build or install.",
  "HelpTxtOptEditable": "Disable source re-extraction and binary caching for libraries on the command line (classic mode)",
  "HelpTxtOptEnforcePortChecks": "Fail install if a port has detected problems or attempts to use a deprecated feature",
  "HelpTxtOptKeepGoing": "Continue installing packages on failure",
  "HelpTxtOptManifestFeature": "Additional feature from the top-level manifest to install (manifest mode).",
  "HelpTxtOptManifestNoDefault": "Don't install the default features from the top-level manifest (manifest mode).",
  "HelpTxtOptNoDownloads": "Do not download new sources",
  "HelpTxtOptNoUsage": "Don't print CMake usage information after install.",
  "HelpTxtOptOnlyBinCache": "Fail if cached binaries are not available",
  "HelpTxtOptOnlyDownloads": "Download sources but don't build packages",
  "HelpTxtOptRecurse": "Allow removal of packages as part of installation",
  "HelpTxtOptUseAria2": "Use aria2 to perform download tasks",
  "HelpTxtOptUseHeadVersion": "Install the libraries on the command line using the latest upstream sources (classic mode)",
  "HelpTxtOptWritePkgConfig": "Writes out a NuGet packages.config-formatted file for use with external binary caching.\nSee `vcpkg help binarycaching` for more information.",
  "HelpUpdateBaseline": "A melhor abordagem para manter suas bibliotecas atualizadas, a melhor abordagem é atualizar sua referência de linha de base. Isso garantirá que todos os pacotes, incluindo os transitivos, sejam atualizados. No entanto, se você precisar atualizar um pacote de forma independente, poderá usar uma restrição \"version>=\".",
  "HelpUpdateCommand": "Listar pacotes que podem ser atualizados.",
  "HelpUpgradeCommand": "Recompilar todos os pacotes desatualizados.",
  "HelpVersionCommand": "Exibir as informações de versão.",
  "HelpVersionDateScheme": "Uma data (2021-01-01.5)",
  "HelpVersionGreater": "Dentro do campo \"dependências\", cada dependência pode ter uma restrição mínima listada. Essas restrições mínimas serão usadas quando transitivamente dependendo desta biblioteca. Uma versão de porta mínima também pode ser especificada com um sufixo '#'.",
  "HelpVersionScheme": "Uma sequência de números separada por pontos (1.2.3.4)",
  "HelpVersionSchemes": "Os esquemas de versão a seguir são aceitos.",
  "HelpVersionSemverScheme": "Uma Versão Semântica 2.0 (2.1.0-rc2)",
  "HelpVersionStringScheme": "Uma versão exata e incomparável (Vista)",
  "HelpVersioning": "O controle de versão permite que você controle deterministicamente as revisões precisas das dependências usadas pelo seu projeto de dentro do arquivo de manifesto.",
  "IgnoringVcpkgRootEnvironment": "O vcpkg {value} está usando a raiz vcpkg {actual} detectada e ignorando valores de ambiente {path} incompatíveis VCPKG_ROOT não correspondentes. Para suprimir essa mensagem, desmarte a variável de ambiente ou use a opção de linha de comando --vcpkg-root.",
  "IllegalFeatures": "A lista de recursos não permitida neste contexto",
  "IllegalPlatformSpec": "O qualificador de plataforma não é permitido neste contexto",
  "ImproperShaLength": "SHA512s devem ter 128 caracteres hexadecimais: {value}",
  "IncorrectArchiveFileSignature": "Assinatura incorreta do arquivo morto",
  "IncorrectLibHeaderEnd": "Fim do cabeçalho lib incorreto",
  "IncorrectNumberOfArgs": "'{command_name}' requer argumentos '{expected}', mas '{actual}' foi fornecido.",
  "IncorrectPESignature": "Assinatura PE incorreta",
  "IncrementedUtf8Decoder": "Incrementado Utf8Decoder no final da cadeia de caracteres",
  "InfoSetEnvVar": "Você também pode definir a variável de ambiente '{env_var}' para um editor de sua escolha.",
  "InitRegistryFailedNoRepo": "Não foi possível criar um registro em {path} porque este não é um repositório git root.\nUse 'git init {command_line}' para criar um repositório git nesta pasta.",
  "InstallFailed": "falha: {path}: {error_msg}",
  "InstallPackageInstruction": "Com um projeto aberto, vá para Ferramentas->NuGet Gerenciador de Pacotes->Console Gerenciador de Pacotes e cole:\n Install-Package \"{value}\" -Source \"{path}\"",
  "InstallRootDir": "(Experimental) Especificar o diretório raiz de instalação.",
  "InstallWithSystemManager": "Você pode instalar esta ferramenta através do gerenciador de pacotes do sistema.",
  "InstallWithSystemManagerMono": "Os usuários do Ubuntu 18.04 podem precisar de uma versão mais recente do mono, disponível em {url}.",
  "InstallWithSystemManagerPkg": "Você pode instalar esta ferramenta através do gerenciador de pacotes do sistema ({command_line}).",
  "InstalledBy": "Instalado por {path}",
  "InstalledPackages": "Os seguintes pacotes já estão instalados:",
  "InstalledRequestedPackages": "Todos os pacotes solicitados estão instalados no momento.",
  "InstallingFromLocation": "-- Instalando porta do local: {path}",
  "InstallingMavenFile": "{path} installing Maven file",
  "InstallingPackage": "Instalando {action_index}/{count} {spec}...",
  "IntegrationFailed": "A integração não foi aplicada.",
  "InternalCICommand": "vcpkg ci é um comando interno que será alterado incompatibilidade ou removido a qualquer momento.",
  "InternalErrorMessage": "erro interno: ",
  "InternalErrorMessageContact": "Abra um problema no https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug com etapas detalhadas para reproduzir o problema.",
  "InvalidArgMustBeAnInt": "--{option} deve ser um inteiro.",
  "InvalidArgMustBePositive": "--{option} deve ser não negativo.",
  "InvalidArgument": "argumento Inválido",
  "InvalidArgumentRequiresAbsolutePath": "argumento inválido: os argumentos de caminho da configuração binária '{binary_source}' para cadeias de caracteres de configuração binária devem ser absolutos",
  "InvalidArgumentRequiresBaseUrl": "argumento inválido: a configuração binária '{binary_source}' requer uma URL base {base_url} como o primeiro argumento",
  "InvalidArgumentRequiresBaseUrlAndToken": "argumento inválido: a configuração binária '{binary_source}' requer pelo menos uma URL base e um token SAS",
  "InvalidArgumentRequiresNoneArguments": "argumento inválido: a configuração binária '{binary_source}' não usa argumentos",
  "InvalidArgumentRequiresOneOrTwoArguments": "argumento inválido: a configuração binária '{binary_source}' requer 1 ou 2 argumentos",
  "InvalidArgumentRequiresPathArgument": "argumento inválido: a configuração binária '{binary_source}' exige pelo menos um argumento de caminho",
  "InvalidArgumentRequiresPrefix": "argumento inválido: a configuração binária '{binary_source}' exige pelo menos um prefixo",
  "InvalidArgumentRequiresSingleArgument": "argumento inválido: a configuração binária '{binary_source}' não usa mais de 1 argumento",
  "InvalidArgumentRequiresSingleStringArgument": "argumento inválido: a configuração binária '{binary_source}' espera um único argumento de cadeia de caracteres",
  "InvalidArgumentRequiresSourceArgument": "argumento inválido: a configuração binária '{binary_source}' exige pelo menos um argumento de origem",
  "InvalidArgumentRequiresTwoOrThreeArguments": "argumento inválido: a configuração binária '{binary_source}' requer 2 ou 3 argumentos",
  "InvalidArgumentRequiresValidToken": "argumento inválido: a configuração binária '{binary_source}' requer um token SAS sem um '?' anterior ao segundo argumento",
  "InvalidBuildInfo": "Arquivo BUILD_INFO inválido para o pacote: {error_msg}",
  "InvalidBuiltInBaseline": "a linha de base interna de nível superior ({value}) não era uma confirmação sha válida: esperados 40 caracteres hexadecimais.",
  "InvalidBundleDefinition": "Definição de pacote inválida.",
  "InvalidCodePoint": "Ponto de código inválido passado para utf8_encoded_code_point_count",
  "InvalidCodeUnit": "unidade de código inválida",
  "InvalidCommandArgSort": "O valor de --sort deve ser um de 'lexicographical', 'topographic', 'reverse'.",
  "InvalidCommentStyle": "vcpkg não suporta comentários no estilo-c, porém a maioria dos objetos permite que campos com prefixo $ sejam usados como comentários.",
  "InvalidCommitId": "ID de confirmação inválido: {commit_sha}",
  "InvalidFileType": "falhou: {path} não pode lidar com o tipo de arquivo",
  "InvalidFilename": "O nome do arquivo não pode conter caracteres inválidos {value}, mas era {path}",
  "InvalidFloatingPointConst": "Constante de ponto flutuante inválida: {count}",
  "InvalidFormatString": "cadeia de caracteres de formato inválido: {actual}",
  "InvalidHexDigit": "Dígito hexadecimal inválido no escape unicode",
  "InvalidIntegerConst": "Constante inteira inválida: {count}",
  "InvalidLinkage": "Tipo de vinculação {system_name} inválido: [{value}]",
  "InvalidOptionForRemove": "'remove' aceita bibliotecas ou '--outdated'",
  "InvalidPortVersonName": "Nome de arquivo de versão de porta inválido encontrado: `{path}`.",
  "InvalidString": "Utf8 inválido passado para Value::string(std::string)",
  "InvalidTriplet": "Tripleto inválido: {triplet}",
  "IrregularFile": "path não era um arquivo normal: {path}",
  "JsonErrorMustBeAnObject": "Espera-se que \"{path}\" seja um objeto.",
  "JsonFileMissingExtension": "o arquivo JSON {path} deve ter uma extensão .json (todas as minúsculas)",
  "JsonSwitch": "(Experimental) Solicitar saída JSON.",
  "JsonValueNotArray": "valor json não é uma matriz",
  "JsonValueNotObject": "valor json não é um objeto",
  "JsonValueNotString": "valor json não é uma cadeia de caracteres",
  "LaunchingProgramFailed": "Iniciando {tool_name}:",
  "LicenseExpressionContainsExtraPlus": "A expressão de licença SPDX contém um '+' extra. Estes só são permitidos diretamente após um identificador de licença.",
  "LicenseExpressionContainsInvalidCharacter": "A expressão da licença SPDX contém um caractere inválido (0x{value:02X} '{value}').",
  "LicenseExpressionContainsUnicode": "A expressão de licença SPDX contém um caractere unicode (U+{value:04X} '{pretty_value}'), mas estas expressões são apenas ASCII.",
  "LicenseExpressionDocumentRefUnsupported": "A implementação atual não suporta referências DocumentRef- SPDX.",
  "LicenseExpressionExpectCompoundFoundParen": "Esperava-se um composto ou o final da cadeia de caracteres, foi encontrado um parêntese.",
  "LicenseExpressionExpectCompoundFoundWith": "Esperava-se AND ou OR, foi encontrado com (WITH só é permitido após os nomes da licença, não expressões entre parênteses).",
  "LicenseExpressionExpectCompoundFoundWord": "Esperava-se AND ou OR, encontrou um nome de licença ou exceção: '{value}'.",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "Esperava-se AND, OR ou WITH, encontrou uma licença ou nome de exceção: '{value}'.",
  "LicenseExpressionExpectExceptionFoundCompound": "Esperava-se um nome de exceção, foi encontrado o composto {value}.",
  "LicenseExpressionExpectExceptionFoundEof": "Esperava-se um nome de exceção, foi encontrado o final da cadeia de caracteres.",
  "LicenseExpressionExpectExceptionFoundParen": "Esperava-se um nome de exceção, foi encontrado um parêntese.",
  "LicenseExpressionExpectLicenseFoundCompound": "Esperava-se um nome de licença, foi encontrado o composto {value}.",
  "LicenseExpressionExpectLicenseFoundEof": "Esperava-se um nome de licença, foi encontrado no final da cadeia de caracteres.",
  "LicenseExpressionExpectLicenseFoundParen": "Esperava-se um nome de licença, foi encontrado um parêntese.",
  "LicenseExpressionImbalancedParens": "Havia um parêntese de fechamento sem um parêntese de abertura.",
  "LicenseExpressionUnknownException": "Identificador de exceção de licença desconhecido '{value}'. Os valores conhecidos estão listados em https://spdx.org/licenses/exceptions-index.html",
  "LicenseExpressionUnknownLicense": "Identificador de licença desconhecido '{value}'. Os valores conhecidos estão listados em https://spdx.org/licenses",
  "ListOfValidFieldsForControlFiles": "Esta é a lista de campos válidos para arquivos CONTROL (diferencia maiúsculas de minúsculas):",
  "LoadingCommunityTriplet": "-- [COMMUNITY] Carregando a configuração triplet de: {path}",
  "LoadingDependencyInformation": "Carregando informações de dependência para {count} pacotes...",
  "LoadingOverlayTriplet": "-- [OVERLAY] Carregando a configuração triplet de: {path}",
  "LocalPortfileVersion": "Usando versões de arquivo de porta local. Para atualizar os arquivos de porta locais, use 'git pull'.",
  "LocalizedMessageMustNotContainIndents": "A mensagem chamada {value} contém o que parece ser um recuo que deve ser alterado para usar LocalizedString::append_indent em vez disso.",
  "LocalizedMessageMustNotEndWithNewline": "A mensagem chamada {value} termina com uma nova linha que deve ser adicionada por formatação e não por localização.",
  "ManifestConflict": "Encontrado um manifesto e arquivos CONTROL na porta \"{path}\"; renomeie um ou outro",
  "ManifestFormatCompleted": "Foi bem-sucedido na formatação dos arquivos de manifesto.",
  "MismatchedFiles": "o arquivo a ser armazenado não corresponde ao hash",
  "MismatchedManifestAfterReserialize": "The serialized manifest was different from the original manifest. Please open an issue at https://github.com/microsoft/vcpkg, with the following output:",
  "MismatchedNames": "nomes não correspondiam: '{package_name}' != '{actual}'",
  "Missing7zHeader": "Não é possível localizar o cabeçalho 7z.",
  "MissingAndroidEnv": "ANDROID_NDK_HOME variável de ambiente ausente",
  "MissingAndroidHomeDir": "O diretório ANDROID_NDK_HOME não existe: {path}",
  "MissingArgFormatManifest": "format-manifest foi passado --convert-control sem '--all'.\nIsso não faz nada: os arquivos de controle passados explicitamente são convertidos automaticamente.",
  "MissingDependency": "O pacote {spec} está instalado, mas a dependência {package_name} não.",
  "MissingExtension": "Extensão \"{extension}\" ausente.",
  "MissingOption": "Este comando requer --{option}",
  "MissingPortSuggestPullRequest": "Se sua porta não estiver listada, abra um problema em e/ou considere fazer uma solicitação pull.",
  "MissmatchedBinParagraphs": "O parágrafo binário serializado era diferente do parágrafo binário original. Abra um problema em https://github.com/microsoft/vcpkg com a seguinte saída:",
  "MonoInstructions": "Isso pode ser causado por uma instalação mono incompleta. Mono completo está disponível em alguns sistemas via `sudo apt install mono-complete`. Os usuários do Ubuntu 18.04 podem precisar de uma versão mais recente do mono, disponível em https://www.mono-project.com/download/stable/",
  "MsiexecFailedToExtract": "msiexec falhou ao extrair \"{path}\" com o código de inicialização ou saída {exit_code} e a mensagem:",
  "MultiArch": "O Multi-Arch deve ser 'o mesmo', mas era {option}",
  "MutuallyExclusiveOption": "--{value} não pode ser usado com --{option}.",
  "NavigateToNPS": "Navegue até {url} em seu navegador preferido.",
  "NewConfigurationAlreadyExists": "A criação de um manifesto substituiria um vcpkg-configuration.json em {path}.",
  "NewManifestAlreadyExists": "Um manifesto já está presente no {path}.",
  "NewNameCannotBeEmpty": "--name não pode ficar em branco.",
  "NewOnlyOneVersionKind": "Somente uma da --version-relax, --version-date ou --version-string pode ser especificada.",
  "NewSpecifyNameVersionOrApplication": "Especifique --name e --version para produzir um manifesto destinado a bibliotecas C++ ou especifique --application para indicar que o manifesto não deve ser usado como uma porta.",
  "NewVersionCannotBeEmpty": "--version não pode ficar vazia.",
  "NoArgumentsForOption": "A opção --{option} não aceita um argumento.",
  "NoCachedPackages": "Nenhum pacote é armazenado em cache.",
  "NoError": "nenhum erro",
  "NoInstalledPackages": "Nenhum pacote está instalado. Você quis dizer 'pesquisar'?",
  "NoLocalizationForMessages": "Nenhuma mensagem localizada para o seguinte: ",
  "NoOutdatedPackages": "Não há pacotes desatualizados.",
  "NoRegistryForPort": "nenhum registro configurado para porta {package_name}",
  "NoteMessage": "observação: ",
  "NugetPackageFileSucceededButCreationFailed": "A criação do pacote NuGet foi bem-sucedida, mas nenhum .nupkg foi produzido. Esperado: \"{path}\"",
  "OptionMustBeInteger": "O valor de --{option} deve ser um inteiro.",
  "OptionRequired": "--{option} opção é necessária.",
  "OptionRequiresOption": "--{value} requer --{option}",
  "OriginalBinParagraphHeader": "\nParágrafo Binário Original",
  "OverlayPatchDir": "O caminho de sobreposição \"{path}\" deve existir e deve ser um diretório.",
  "OverlayTriplets": "Sobreposição de triplos de {path}:",
  "OverwritingFile": "O arquivo {path} já estava presente e será substituído",
  "PECoffHeaderTooShort": "While parsing Portable Executable {path}, size of COFF header too small to contain a valid PE header.",
  "PEConfigCrossesSectionBoundary": "While parsing Portable Executable {path}, image config directory crosses a secion boundary.",
  "PEImportCrossesSectionBoundary": "While parsing Portable Executable {path}, import table crosses a secion boundary.",
  "PEPlusTagInvalid": "While parsing Portable Executable {path}, optional header was neither PE32 nor PE32+.",
  "PERvaNotFound": "While parsing Portable Executable {path}, could not find RVA {value:#X}.",
  "PESignatureMismatch": "While parsing Portable Executable {path}, signature mismatch.",
  "PackageAlreadyRemoved": "não foi possível remover o pacote {spec}: já removido",
  "PackageFailedtWhileExtracting": "\"{value}\" falhou ao extrair {path}.",
  "PackageRootDir": "(Experimental) Especifcar o diretório raiz de pacotes.",
  "PackagesToInstall": "Os seguintes pacotes serão compilados e instalados:",
  "PackagesToInstallDirectly": "Os seguintes pacotes serão instalados diretamente:",
  "PackagesToModify": "Pacotes adicionais (*) serão modificados para completar esta operação.",
  "PackagesToRebuild": "Os seguintes pacotes serão reconstruídos:",
  "PackagesToRebuildSuggestRecurse": "Se você tiver certeza de que deseja reconstruir os pacotes acima, execute o comando com a opção --recurse.",
  "PackagesToRemove": "Os seguintes pacotes serão removidos:",
  "PackagesUpToDate": "Nenhum pacote precisa ser atualizado.",
  "PackingVendorFailed": "Falha ao empacotar {vendor}. Use --debug para mais informações.",
  "PairedSurrogatesAreInvalid": "substituto à direita após o substituto principal (substitutos emparelhados são inválidos)",
  "ParseControlErrorInfoInvalidFields": "Os seguintes campos não eram esperados:",
  "ParseControlErrorInfoMissingFields": "Os seguintes campos estavam ausentes:",
  "ParseControlErrorInfoTypesEntry": "Esperava-se que {value} fosse {expected}",
  "ParseControlErrorInfoWhileLoading": "ao carregar {path}:",
  "ParseControlErrorInfoWrongTypeFields": "Os campos a seguir tinham os tipos errados:",
  "PathMustBeAbsolute": "O valor de variável de ambiente X_VCPKG_REGISTRIES_CACHE não é absoluto: {path}",
  "PerformingPostBuildValidation": "-- Performing post-build validation",
  "PortBugAllowRestrictedHeaders": "In exceptional circumstances, this policy can be disabled via {env_var}",
  "PortBugBinDirExists": "There should be no bin\\ directory in a static build, but {path} is present.",
  "PortBugDebugBinDirExists": "There should be no debug\\bin\\ directory in a static build, but {path} is present.",
  "PortBugDebugShareDir": "/debug/share should not exist. Please reorganize any important files, then use\nfile(REMOVE_RECURSE \"${{CURRENT_PACKAGES_DIR}}/debug/share\")",
  "PortBugDllAppContainerBitNotSet": "The App Container bit must be set for Windows Store apps. The following DLLs do not have the App Container bit set:",
  "PortBugDllInLibDir": "The following dlls were found in /lib or /debug/lib. Please move them to /bin or /debug/bin, respectively.",
  "PortBugDuplicateIncludeFiles": "Include files should not be duplicated into the /debug/include directory. If this cannot be disabled in the project cmake, use\nfile(REMOVE_RECURSE \"${{CURRENT_PACKAGES_DIR}}/debug/include\")",
  "PortBugFoundCopyrightFiles": "The following files are potential copyright files:",
  "PortBugFoundDebugBinaries": "Found {count} debug binaries:",
  "PortBugFoundDllInStaticBuild": "DLLs should not be present in a static build, but the following DLLs were found:",
  "PortBugFoundEmptyDirectories": "There should be no empty directories in {path}. The following empty directories were found:",
  "PortBugFoundExeInBinDir": "The following EXEs were found in /bin or /debug/bin. EXEs are not valid distribution targets.",
  "PortBugFoundReleaseBinaries": "Found {count} release binaries:",
  "PortBugIncludeDirInCMakeHelperPort": "The folder /include exists in a cmake helper port; this is incorrect, since only cmake files should be installed",
  "PortBugInspectFiles": "To inspect the {extension} files, use:",
  "PortBugInvalidCrtLinkage": "Invalid crt linkage. Expected {expected}, but the following libs had:",
  "PortBugMergeLibCMakeDir": "The /lib/cmake folder should be merged with /debug/lib/cmake and moved to /share/{spec}/cmake. Please use the helper function `vcpkg_cmake_config_fixup()` from the port vcpkg-cmake-config.`",
  "PortBugMismatchedNumberOfBinaries": "Mismatching number of debug and release binaries.",
  "PortBugMisplacedCMakeFiles": "The following cmake files were found outside /share/{spec}. Please place cmake files in /share/{spec}.",
  "PortBugMisplacedFiles": "The following files are placed in {path}:",
  "PortBugMisplacedFilesCont": "Files cannot be present in those directories.",
  "PortBugMisplacedPkgConfigFiles": "pkgconfig directories should be one of share/pkgconfig (for header only libraries only), lib/pkgconfig, or lib/debug/pkgconfig. The following misplaced pkgconfig files were found:",
  "PortBugMissingDebugBinaries": "Debug binaries were not found.",
  "PortBugMissingFile": "The /{path} file does not exist. This file must exist for CMake helper ports.",
  "PortBugMissingImportedLibs": "Import libraries were not present in {path}.\nIf this is intended, add the following line in the portfile:\nset(VCPKG_POLICY_DLLS_WITHOUT_LIBS enabled)",
  "PortBugMissingIncludeDir": "The folder /include is empty or not present. This indicates the library was not correctly installed.",
  "PortBugMissingLicense": "The software license must be available at ${CURRENT_PACKAGES_DIR}/share/{spec}/copyright",
  "PortBugMissingReleaseBinaries": "Release binaries were not found.",
  "PortBugMovePkgConfigFiles": "You can move the pkgconfig files with commands similar to:",
  "PortBugOutdatedCRT": "Detected outdated dynamic CRT in the following files:",
  "PortBugRemoveBinDir": "If the creation of bin\\ and/or debug\\bin\\ cannot be disabled, use this in the portfile to remove them",
  "PortBugRemoveEmptyDirectories": "If a directory should be populated but is not, this might indicate an error in the portfile.\nIf the directories are not needed and their creation cannot be disabled, use something like this in the portfile to remove them:",
  "PortBugRemoveEmptyDirs": "vcpkg_fixup_pkgconfig()\nfile(REMOVE_RECURSE empty directories left by the above renames)",
  "PortBugRestrictedHeaderPaths": "The following restricted headers can prevent the core C++ runtime and other packages from compiling correctly. In exceptional circumstances, this policy can be disabled via {env_var}.",
  "PortBugSetDllsWithoutExports": "DLLs without any exports are likely a bug in the build script. If this is intended, add the following line in the portfile:\nset(VCPKG_POLICY_DLLS_WITHOUT_EXPORTS enabled)\nThe following DLLs have no exports:",
  "PortDependencyConflict": "A porta {package_name} tem as seguintes dependências sem suporte:",
  "PortNotInBaseline": "a linha de base não contém uma entrada para porta {package_name}",
  "PortSupportsField": "(suporte: \"{supports_expression}\")",
  "PortTypeConflict": "O tipo de porta de {spec} difere entre o portfile instalado e disponível.\nRemova manualmente {spec} e execute novamente este comando.",
  "PortVersionConflict": "Os seguintes pacotes diferem de suas versões de porta:",
  "PortsAdded": "As seguintes {count} portas foram adicionadas:",
  "PortsNoDiff": "Não houve alterações nas portas entre as duas confirmações.",
  "PortsRemoved": "As seguintes {count} portas foram removidas:",
  "PortsUpdated": "\nAs seguintes portas {count} foram atualizadas:",
  "PrebuiltPackages": "Existem pacotes que não foram construídos. Para construí-los execute:",
  "PreviousIntegrationFileRemains": "O arquivo de integração anterior não foi removido.",
  "ProgramReturnedNonzeroExitCode": "{tool_name} falhou com o código de saída: ({exit_code}).",
  "ProvideExportType": "Pelo menos uma das seguintes opções é necessária: --raw --nuget --ifw --zip --7zip --chocolatey --prefab.",
  "PushingVendorFailed": "Falha ao enviar {vendor} para \"{path}\". Use --debug para mais informações.",
  "RegistryCreated": "Registro criado com êxito em {path}",
  "RemoveDependencies": "Para remover dependências no modo manifesto, edite seu manifesto (vcpkg.json) e execute 'install'.",
  "RemovePackageConflict": "Outro pacote instalado corresponde ao nome de uma solicitação sem correspondência. Você quis dizer {spec}?",
  "RemovingPackage": "Removendo {action_index}/{count} {spec}",
  "RestoredPackage": "Pacote restaurado de \"{path}\"",
  "RestoredPackagesFromVendor": "{count} pacote(s) restaurado(s) de {value} em {elapsed}. Utilize --debug para ver mais detalhes.",
  "ResultsHeader": "RESULTADOS",
  "SeeURL": "Consulte {url} para obter mais informações.",
  "SerializedBinParagraphHeader": "\nParágrafo Binário Serializado",
  "SettingEnvVar": "-- Definindo \"{env_var}\" variáveis de ambiente como \"{url}\".",
  "ShaPassedAsArgAndOption": "SHA512 passado como argumento e como opção. Passe apenas um desses.",
  "ShaPassedWithConflict": "SHA512 foi aprovado, mas --skip-sha512 também foi aprovado; só fazer um ou outro.",
  "ShallowRepositoryDetected": "O vcpkg foi clonado como um repositório superficial em: {path} \n Tente novamente com um clone completo do vcpkg.",
  "SkipClearingInvalidDir": "Ignorando a limpeza do conteúdo de {path} porque ele não era um diretório.",
  "SourceFieldPortNameMismatch": "O campo “Fonte” dentro do arquivo CONTROLE, ou o campo “nome” dentro do arquivo vcpkg.json tem o nome {package_name} e não corresponde ao diretório da porta \"{path}\".",
  "SpecifiedFeatureTurnedOff": "O recurso '{command_name}' foi especificamente desativado, mas --{option} foi especificado.",
  "SpecifyDirectoriesContaining": "Diretórios especificados que contêm arquivos de triplets.\n(também: '{env_var}')",
  "SpecifyDirectoriesWhenSearching": "Especificar5 os diretórios a serem usados ao procurar portas.\n(também: '{env_var}')",
  "SpecifyHostArch": "Especifique o tripleto da arquitetura do host. Consulte 'vcpkg help triplet'.\n(padrão: '{env_var}')",
  "SpecifyTargetArch": "Especificar o tripleto da arquitetura de destino. Consulte 'vcpkg help triplet'.\n(padrão: '{env_var}')",
  "StartCodeUnitInContinue": "unidade de código inicial encontrada na posição continuar",
  "StoreOptionMissingSha": "--store opção é inválida sem um sha512",
  "StoredBinaryCache": "Cache binário armazenado: \"{path}\"",
  "SuccessfulyExported": "Exportou {package_name} para {path}",
  "SuggestGitPull": "O resultado pode estar desatualizado. Execute `git pull` para obter os resultados mais recentes.",
  "SuggestResolution": "Para tentar resolver todos os erros de uma vez, execute:\nvcpkg {command_name} --{option}",
  "SuggestStartingBashShell": "Verifique se você iniciou um novo shell de bash para que a alteração entre em vigor.",
  "SuggestUpdateVcpkg": "Talvez seja necessário atualizar o binário vcpkg; tente executar {command_line} para atualizar.",
  "SupportedPort": "Há suporte para a porta {package_name}.",
  "SystemApiErrorMessage": "Falha ao chamar {system_api} com {exit_code} ({error_msg})",
  "ToRemovePackages": "Para remover somente pacotes desatualizados, execute\n{command_name} remove --outdated",
  "ToUpdatePackages": "Para atualizar esses pacotes e todas as dependências, execute\n {command_name} upgrade'",
  "ToolFetchFailed": "Não foi possível buscar {tool_name}.",
  "ToolInWin10": "Este utilitário é fornecido com o Windows 10 ou posterior.",
  "ToolOfVersionXNotFound": "Uma versão adequada de {tool_name} não foi encontrada (v{version} exigida) e não é possível baixar automaticamente uma versão portátil. Instale uma versão mais recente de {tool_name}",
  "TotalInstallTime": "Tempo total de instalação: {elapsed}",
  "TrailingCommaInArray": "Vírgula à direita na matriz",
  "TrailingCommaInObj": "Vírgula à direita em um objeto",
  "TripletFileNotFound": "Arquivo triplo {triplet}.cmake não encontrado",
  "TwoFeatureFlagsSpecified": "'{value}' e -'{value}' foram especificados como sinalizadores de recurso.",
  "UndeterminedToolChainForTriplet": "Não é possível determinar o uso da cadeia de ferramentas para {triplet} com CMAKE_SYSTEM_NAME {system_name}. Você quis usar o VCPKG_CHAINLOAD_TOOLCHAIN_FILE?",
  "UnexpectedByteSize": "Esperado {expected} bytes a serem gravados, mas {real} foram gravados.",
  "UnexpectedCharExpectedCloseBrace": "Caráter inesperado; propriedade esperada ou chave fechada",
  "UnexpectedCharExpectedColon": "Caráter inesperado; dois pontos esperados",
  "UnexpectedCharExpectedComma": "Caráter inesperado; vírgula esperada ou chave fechada",
  "UnexpectedCharExpectedName": "Caráter inesperado; nome da propriedade esperada",
  "UnexpectedCharExpectedValue": "Caráter inesperado; valor esperado",
  "UnexpectedCharMidArray": "Caractere inesperado no meio da matriz",
  "UnexpectedCharMidKeyword": "Caractere inesperado no meio da palavra-chave",
  "UnexpectedDigitsAfterLeadingZero": "Dígitos inesperados após um zero à esquerda",
  "UnexpectedEOFAfterEscape": "EOF inesperado após caractere de escape",
  "UnexpectedEOFAfterMinus": "EOF inesperado após o sinal de menos",
  "UnexpectedEOFExpectedChar": "Caráter inesperado; EOF esperado",
  "UnexpectedEOFExpectedCloseBrace": "EOF inesperado; propriedade esperada ou chave fechada",
  "UnexpectedEOFExpectedColon": "EOF inesperado; dois pontos esperados",
  "UnexpectedEOFExpectedName": "EOF inesperado; nome da propriedade esperada",
  "UnexpectedEOFExpectedProp": "EOF inesperado; propriedade esperada",
  "UnexpectedEOFExpectedValue": "EOF inesperado; valor esperado",
  "UnexpectedEOFMidArray": "EOF inesperado no meio da matriz",
  "UnexpectedEOFMidKeyword": "EOF inesperado no meio da palavra-chave",
  "UnexpectedEOFMidString": "EOF inesperado no meio da string",
  "UnexpectedEOFMidUnicodeEscape": "Fim inesperado do arquivo no meio do escape unicode",
  "UnexpectedErrorDuringBulkDownload": "ocorreu um erro inesperado durante o download em massa.",
  "UnexpectedEscapeSequence": "Continuação inesperada da sequência de escape",
  "UnexpectedExtension": "Extensão de arquivo morto inesperada: \"{extension}\".",
  "UnexpectedFormat": "O formato esperado é [{expected}], mas foi [{actual}].",
  "UnexpectedPortName": "a porta {esperada} é declarada como {actual} em {path}",
  "UnexpectedToolOutput": "{tool_name} ({path}) produziu uma saída inesperada ao tentar determinar a versão:",
  "UnknownBaselineFileContent": "entrada de linha de base irreconhecível; esperado 'porta: tripleto=(fail|skip|pass)'",
  "UnknownBinaryProviderType": "tipo de provedor binário desconhecido: os provedores válidos são 'clear', 'default', 'nuget', 'nugetconfig','nugettimeout', 'interactive', 'x-azblob', 'x-gcs', 'x-aws', 'x-aws-config', 'http' e 'files'",
  "UnknownMachineCode": "Código de tipo de máquina desconhecido {value}",
  "UnknownOptions": "Opções desconhecidas para o comando '{command_name}':",
  "UnknownParameterForIntegrate": "Parâmetro desconhecido \"{value}\" para integração.",
  "UnknownPolicySetting": "Configuração desconhecida para a política '{value}': {option}",
  "UnknownSettingForBuildType": "Configuração desconhecida para VCPKG_BUILD_TYPE {option}. As configurações válidas são '', 'debug' e 'release'.",
  "UnknownTool": "vcpkg não possui uma definição desta ferramenta para esta plataforma.",
  "UnknownTopic": "tópico desconhecido {value}",
  "UnknownVariablesInTemplate": "argumento inválido: o modelo de URL '{value}' contém variáveis desconhecidas: {list}",
  "UnrecognizedConfigField": "configuração contém os seguintes campos não reconhecidos:",
  "UnrecognizedIdentifier": "Nome do identificador não reconhecido {value}. Adicionar à lista de substituição no arquivo tripleto.",
  "UnsupportedFeature": "o recurso {feature} foi aprovado, mas esse não é um recurso compatível com os suportes de {package_name}.",
  "UnsupportedPort": "Não há suporte para a porta {package_name}.",
  "UnsupportedPortDependency": "- não há suporte para a dependência {value}.",
  "UnsupportedPortFeature": "{spec} é suportado apenas em '{supports_expression}'",
  "UnsupportedShortOptions": "não há suporte para opções curtas: '{value}'",
  "UnsupportedSyntaxInCDATA": "]]> não há suporte no bloco CDATA",
  "UnsupportedSystemName": "Não foi possível mapear VCPKG_CMAKE_SYSTEM_NAME '{system_name}' para uma plataforma vcvarsall. Os nomes de sistema suportados são '', 'Windows' e 'WindowsStore'.",
  "UnsupportedToolchain": "no triplo {triplet}: não é possível encontrar uma cadeia de ferramentas válida para a arquitetura de destino solicitada {arch}.\nA instância do Visual Studio selecionada está em: {path}\nAs combinações da cadeia de ferramentas disponíveis são: {list}",
  "UnsupportedUpdateCMD": "O comando de atualização atualmente não oferece suporte ao modo de manifesto. Em vez disso, modifique seu vcpkg.json e execute instalação.",
  "UpdateBaselineAddBaselineNoManifest": "a opção --{option} foi passada, mas não há nenhum arquivo de manifesto ao qual adicionar um campo 'builtin-baseline'.",
  "UpdateBaselineLocalGitError": "falha do git ao analisar HEAD para o registro vcpkg local em \"{path}\"",
  "UpdateBaselineNoConfiguration": "nem 'vcpkg.json' nem 'vcpkg-configuration.json' existem para atualizar.",
  "UpdateBaselineNoExistingBuiltinBaseline": "o arquivo de manifesto atualmente não contém um campo 'builtin-baseline'; para adicionar um, passe a opção --{option}.",
  "UpdateBaselineNoUpdate": "registro '{url}' não atualizado: '{value}'",
  "UpdateBaselineRemoteGitError": "falha do git ao buscar o repositório remoto '{url}'",
  "UpdateBaselineUpdatedBaseline": "registro atualizado '{url}': linha de base '{old_value}' -> '{new_value}'",
  "UpgradeInManifest": "O comando de atualização atualmente não oferece suporte ao modo de manifesto. Em vez disso, modifique seu vcpkg.json e execute instalação.",
  "UpgradeRunWithNoDryRun": "Se você tiver certeza de que deseja reconstruir os pacotes acima, execute este comando com a opção --no-dry-run.",
  "UploadedBinaries": "Binários carregados para {count} {vendor}.",
  "UploadedPackagesToVendor": "{count} pacote(s) carregado(s) para {vendor} em {elapsed}",
  "UploadingBinariesToVendor": "Carregando binários de \"{spec}\" para o \"{vendor}\" na origem \"{path}\".",
  "UploadingBinariesUsingVendor": "Carregando binários para \"{spec}\" usando o \"{vendor}\" \"{path}\"",
  "UseEnvVar": "-- Usando {env_var} nas variáveis de ambiente.",
  "UserWideIntegrationDeleted": "A integração para todo o usuário não está instalada.",
  "UserWideIntegrationRemoved": "A integração de todo o usuário foi removida.",
  "UsingCommunityTriplet": "-- Usando o triplet da comunidade {triplet}. Essa configuração triplet não tem garantia de êxito.",
  "UsingManifestAt": "Usando o arquivo de manifesto em {path}.",
  "Utf8ConversionFailed": "Falha ao converter para UTF-8",
  "VSExaminedInstances": "As seguintes instâncias do Visual Studio foram consideradas:",
  "VSExaminedPaths": "Os seguintes caminhos foram examinados para as instâncias do Visual Studio:",
  "VSNoInstances": "Não foi possível localizar uma instância completa do Visual Studio",
  "VcpkgCeIsExperimental": "vcpkg-ce ('configurar ambiente') é experimental e pode mudar a qualquer momento.",
  "VcpkgCommitTableHeader": "Confirmação de VCPKG",
  "VcpkgCompletion": "a conclusão do vcpkg {value} já foi importada para o arquivo \"{path}\".\nAs seguintes entradas foram encontradas:",
  "VcpkgDisallowedClassicMode": "Não foi possível localizar um manifesto (vcpkg.json) acima do diretório de trabalho atual.\nEsta distribuição vcpkg não tem uma instância de modo clássico.",
  "VcpkgHasCrashed": "o vcpkg falhou. Crie um problema em https://github.com/microsoft/vcpkg contendo um breve resumo do que você estava tentando fazer e as informações a seguir.",
  "VcpkgInVsPrompt": "vcpkg parece estar em um prompt do Visual Studio visando {value} mas instalando para {triplet}. Considere usar --triplet {value}-windows ou --triplet {value}-uwp.",
  "VcpkgInvalidCommand": "comando inválido: {command_name}",
  "VcpkgRegistriesCacheIsNotDirectory": "O valor de variável de ambiente X_VCPKG_REGISTRIES_CACHE não é um diretório: {path}",
  "VcpkgRootRequired": "A configuração VCPKG_ROOT é necessária para inicialização autônoma.",
  "VcpkgRootsDir": "Especificar o diretório raiz vcpkg.\n(padrão: '{env_var}')",
  "VcpkgSendMetricsButDisabled": "--sendmetrics passou, mas as métricas estão desabilitadas.",
  "VersionCommandHeader": "versão do programa de gerenciamento de pacotes vcpkg {version}\n\nConsulte LICENSE.txt para obter informações de licença.",
  "VersionConflictXML": "Versão {path} esperada: [{expected_version}], mas era [{actual_version}]. Execute bootstrap-vcpkg novamente.",
  "VersionConstraintViolated": "dependência {spec} deveria ser pelo menos a versão {expected_version}, mas atualmente é {actual_version}.",
  "VersionInvalidDate": "`{version}` não é uma versão de data válida. As datas devem seguir o formato AAAA-MM-DD e os desambiguadores devem ser valores inteiros positivos separados por ponto sem zeros à esquerda.",
  "VersionInvalidRelaxed": "`{version}` não é uma versão relaxada válida (semver com contagem de elementos numéricos arbitrários).",
  "VersionInvalidSemver": "`{version}` não é uma versão semântica válida, consulte <https://semver.org>.",
  "VersionSpecMismatch": "Falha ao carregar a porta porque as versões são inconsistentes. O arquivo \"{path}\" contém a versão {actual_version}, mas o banco de dados de versões indica que deve ser {expected_version}.",
  "VersionTableHeader": "Versão",
  "WaitingForChildrenToExit": "Aguardando a saída dos processos filhos...",
  "WaitingToTakeFilesystemLock": "esperando para ativar o bloqueio do sistema de arquivos {path}...",
  "WarningMessage": "aviso: ",
  "WarningMessageMustUsePrintWarning": "A mensagem chamada {value} começa com o aviso:, ela deve ser alterada para preceder WarningMessage no código.",
  "WarningsTreatedAsErrors": "avisos anteriores sendo interpretados como erros",
  "WhileLookingForSpec": "ao procurar {spec}:",
  "WindowsOnlyCommand": "Este comando oferece suporte apenas ao Windows.",
  "WroteNuGetPkgConfInfo": "Escreveu as informações de configuração do pacote NuGet para {path}"
}
