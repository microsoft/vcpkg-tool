{
  "AddArtifactOnlyOne": "\"{command_line}\" может добавлять только один артефакт за раз.",
  "AddFirstArgument": "Первым аргументом для \"{command_line}\" должен быть 'artifact' или 'port'.",
  "AddPortRequiresManifest": "\"{command_line}\" требуется активный файл манифеста.",
  "AddPortSucceded": "Порты успешно добавлены в файл vcpkg.json.",
  "AddTripletExpressionNotAllowed": "тройные выражения здесь не допускаются. Вы можете изменить `{package_name}:{triplet}` на `{package_name}`.",
  "AddVersionAddedVersionToFile": "добавлена версия {version} в {path}",
  "AddVersionCommitChangesReminder": "Вы не забыли зафиксировать изменения?",
  "AddVersionCommitResultReminder": "Не забудьте зафиксировать результат!",
  "AddVersionDetectLocalChangesError": "пропуск обнаружения локальных изменений из-за непредвиденного формата в выходных данных состояния git",
  "AddVersionFileNotFound": "не удалось найти необходимый файл {path}",
  "AddVersionFormatPortSuggestion": "Выполните \"{command_line}\", чтобы форматировать файл",
  "AddVersionIgnoringOptionAll": "пропуск --{option}, так как указан аргумент имени порта",
  "AddVersionLoadPortFailed": "не удалось загрузить порт {package_name}",
  "AddVersionNewFile": "(новый файл)",
  "AddVersionNewShaIs": "новый SHA: {value}",
  "AddVersionNoFilesUpdated": "Файлы не были обновлены",
  "AddVersionNoFilesUpdatedForPort": "Для {package_name} файлы не были обновлены",
  "AddVersionNoGitSha": "не удалось получить SHA для порта {package_name}",
  "AddVersionOldShaIs": "старый SHA: {value}",
  "AddVersionOverwriteOptionSuggestion": "Чтобы обойти эту проверку, используйте --{option}",
  "AddVersionPortDoesNotExist": "{package_name} не существует",
  "AddVersionPortFilesShaChanged": "зарегистрированные файлы для {package_name} изменились, но версия не обновлена",
  "AddVersionPortFilesShaUnchanged": "зарегистрированные файлы для {package_name} не изменялись с версии {version}",
  "AddVersionPortHasImproperFormat": "Неверный формат {package_name}",
  "AddVersionSuggestNewVersionScheme": "Используйте схему \"{new_scheme}\" вместо \"{old_scheme}\" в порте \"{package_name}\".\nЧтобы отключить эту проверку, используйте --{option}.",
  "AddVersionUnableToParseVersionsFile": "не удалось проанализировать файл версий {path}",
  "AddVersionUncommittedChanges": "для {package_name} есть незафиксированные изменения",
  "AddVersionUpdateVersionReminder": "Вы не забыли обновить версию или версию порта?",
  "AddVersionUseOptionAll": "Чтобы одновременно обновить все версии портов, для {command_name} без аргументов требуется передача параметра --{option}",
  "AddVersionVersionAlreadyInFile": "версия {version} уже находится в {path}",
  "AddVersionVersionIs": "версия: {version}",
  "AllFormatArgsRawArgument": "строка формата \"{value}\" содержит необработанный аргумент формата",
  "AllFormatArgsUnbalancedBraces": "несбалансированная фигурная скобка в строке формата \"{value}\"",
  "AlreadyInstalled": "Уже установлено: {spec}",
  "AlreadyInstalledNotHead": "{spec} уже установлено -- сборка не выполняется из HEAD",
  "AttemptingToFetchPackagesFromVendor": "Попытка получить {count} пакетов от {vendor}",
  "AutoSettingEnvVar": "-- Автоматическая установка переменных среды {env_var} в \"{url}\".",
  "BothYesAndNoOptionSpecifiedError": "не может одновременно указывать параметры --no-{option} и --{option}.",
  "BuildAlreadyInstalled": "{spec} — уже установлено. Удалите {spec}, прежде чем выполнять сборку.",
  "BuildDependenciesMissing": "Для команды сборки необходимо установить все зависимости.\nОтсутствуют следующие зависимости:",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "СКАЧАНО",
  "BuildResultExcluded": "ИСКЛЮЧЕНО",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "УДАЛЕНО",
  "BuildResultSucceeded": "УСПЕШНО",
  "BuildResultSummaryHeader": "СВОДКА ПО {triplet}",
  "BuildResultSummaryLine": "{build_result}: {count}",
  "BuildTroubleshootingMessage1": "Используйте последние файлы портов с \"git pull\" и \"vcpkg update\".\nЗатем проверьте наличие известных проблем в:",
  "BuildTroubleshootingMessage2": "Вы можете отправить новую проблему в:",
  "BuildTroubleshootingMessage3": "Добавьте \"Ошибка сборки [{package_name}]\" в название отчета об ошибке, следующие сведения о версии в описании ошибки и вложите любые релевантные журналы ошибок из раздела выше.",
  "BuildTroubleshootingMessage4": "Вы также можете использовать предварительно заполненный шаблон из {path}.",
  "BuildingFromHead": "Сборка {spec} из HEAD...",
  "BuildingPackage": "Сборка {spec}...",
  "BuildingPackageFailed": "сбой {spec} при построении: {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "из-за следующих отсутствующих зависимостей:",
  "CMakeTargetsUsage": "{package_name} предоставляет целевые объекты CMake:",
  "CMakeTargetsUsageHeuristicMessage": "# этот элемент создан эвристически и может быть неверным",
  "ChecksFailedCheck": "сбой vcpkg; дополнительные сведения недоступны.",
  "ChecksUnreachableCode": "достигнут недостижимый код",
  "ChecksUpdateVcpkg": "обновление vcpkg путем повторного запуска bootstrap-vcpkg может устранить этот сбой.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing-passing можно использовать, только если указан базовый план с помощью --ci-baseline.",
  "CiBaselineDisallowedCascade": "Регрессия: значение {spec} является каскадным, но необходима его передача ({path}).",
  "CiBaselineRegression": "РЕГРЕССИЯ: {spec} с ошибкой {build_result}. Если требуется, добавьте {spec}=fail в {path}.",
  "CiBaselineRegressionHeader": "РЕГРЕССИИ:",
  "CiBaselineUnexpectedPass": "ПЕРЕДАЧА, УДАЛЕНИЕ ИЗ СПИСКА СБОЕВ: {spec} ({path}).",
  "CmakeTargetsExcluded": "примечание. Дополнительные целевые объекты ({count}) не отображаются.",
  "CommandFailed": "команда:\n{command_line}\nсбой со следующими результатами:",
  "CompressFolderFailed": "Сбой сжатия папки \"{path}\":",
  "CouldNotDeduceNugetIdAndVersion": "Не удалось определить идентификатор nuget и версию по имени файла: {path}",
  "CurlReportedUnexpectedResults": "Служба curl сообщила о неожиданных результатах для vcpkg и что vcpkg не может продолжить работу.\nПожалуйста, обратитесь к следующему тексту для получения конфиденциальной информации и откройте на GitHub Microsoft/vcpkg проблему, чтобы решить этот вопрос!\n: {command_line}\n=== curl output ===\n{actual}\n=== end curl output ===",
  "DetectCompilerHash": "Обнаружение хэша компилятора для триплета \"{triplet}\"...",
  "DownloadAvailable": "Доступна загружаемая копия этого инструмента, которую можно использовать, отключив {env_var}.",
  "DownloadedSources": "Скачанные источники для {spec}",
  "DownloadingVcpkgCeBundle": "Скачивание пакета vcpkg-ce {version}...",
  "DownloadingVcpkgCeBundleLatest": "Скачивание последнего пакета vcpkg-ce...",
  "ElapsedForPackage": "Затраченное время на обработку {spec}: {elapsed}",
  "EmptyLicenseExpression": "Выражение лицензии SPDX было пустым.",
  "EnvStrFailedToExtract": "не удалось развернуть строку среды:",
  "ErrorDetectingCompilerInfo": "при обнаружении сведений о компиляторе:\nсодержимое файла журнала в \"{path}\":",
  "ErrorIndividualPackagesUnsupported": "В режиме манифеста \"установка vcpkg\" не поддерживает отдельные аргументы пакета. \nЧтобы установить дополнительные пакеты, отредактируете vcpkg.json и запустите \"vcpkg install\" без аргументов пакета.",
  "ErrorInvalidClassicModeOption": "Параметр --{option} не поддерживается в классическом режиме, и манифест не найден.",
  "ErrorInvalidManifestModeOption": "Параметр --{option} не поддерживается в режиме манифеста.",
  "ErrorMessage": "ошибка: ",
  "ErrorMessageMustUsePrintError": "Сообщение с именем {value} начинается с ошибки: вместо этого его необходимо изменить на prepend ErrorMessage в коде.",
  "ErrorMissingVcpkgRoot": "Не удалось обнаружить vcpkg-root. Если вы пытаетесь использовать созданную копию VCPKG, необходимо определить переменную среду VCPKG_ROOT, чтобы она указывала на клонированную копию https://github.com/Microsoft/vcpkg.",
  "ErrorNoVSInstance": "в триплете {triplet}: Не удается найти допустимый экземпляр Visual Studio",
  "ErrorNoVSInstanceAt": "в \"{path}\"",
  "ErrorNoVSInstanceFullVersion": "с префиксом версии набора инструментов {version}",
  "ErrorNoVSInstanceVersion": "с версией набора инструментов {version}",
  "ErrorRequireBaseline": "для взаимодействия с портами для этого экземпляра vcpkg требуется манифест с указанным базовым показателем. Пожалуйста, добавьте \"builtin-baseline\" или \"vcpkg-configuration.json\" в манифест, который переопределяет реестр по умолчанию.",
  "ErrorRequirePackagesList": "Для установки vcpkg требуется список пакетов для установки в классическом режиме.",
  "ErrorUnableToDetectCompilerInfo": "vcpkg не удалось обнаружить сведения об активном компиляторе. См. выше вывод об ошибке CMake.",
  "ErrorVcvarsUnsupported": "в триплете {triplet}: Использование запроса разработчика Visual Studio не поддерживается на узлах, отличных от Windows. \nОпределите \"VCPKG_CMAKE_SYSTEM_NAME\" или \"VCPKG_CHAINLOAD_TOOLCHAIN_FILE\" в файле триплета.",
  "ErrorVsCodeNotFound": "Visual Studio Code не найдена, и переменная среды '{env_var}' не задана или недопустима.",
  "ErrorVsCodeNotFoundPathExamined": "Рассмотрены следующие пути:",
  "ExcludedPackage": "Исключено: {spec}",
  "ExpectedCharacterHere": "здесь ожидается \"{expected}\"",
  "ExpectedFailOrSkip": "Ожидалось значение fail, skip или pass.",
  "ExpectedPortName": "здесь ожидается имя порта",
  "ExpectedTripletName": "здесь ожидается имя триплета",
  "FailedToProvisionCe": "Не удалось подготовить vcpkg-ce.",
  "FailedToRunToolToDetermineVersion": "Не удалось запустить {path} для определения версии {tool_name}.",
  "FailedToStoreBackToMirror": "не удалось сохранить обратно в зеркале:",
  "ForceSystemBinariesOnWeirdPlatforms": "Переменная среды VCPKG_FORCE_SYSTEM_BINARIES должна быть задана на платформах ARM, s390x и ppc64le.",
  "FormattedParseMessageExpression": "в выражении: {value}",
  "GenerateMsgErrorParsingFormatArgs": "строка формата синтаксического анализа для {value}:",
  "GenerateMsgIncorrectComment": "сообщение {value} содержит неправильный комментарий:",
  "GenerateMsgNoArgumentValue": "{{{value}}} указано в комментарии, но не использовалось в сообщении.",
  "GenerateMsgNoCommentValue": "{{{value}}} использовалось в сообщении, но не прокомментировано.",
  "GitCommandFailed": "не удалось выполнить: {command_line}",
  "GitStatusOutputExpectedFileName": "требуется имя файла",
  "GitStatusOutputExpectedNewLine": "ожидалась новая строка",
  "GitStatusOutputExpectedRenameOrNewline": "ожидался переименованный файл или новые строки",
  "GitStatusUnknownFileStatus": "неизвестное состояние файла: {value}",
  "GitUnexpectedCommandOutput": "непредвиденные выходные данные git",
  "GraphCycleDetected": "Обнаружен цикл в графе в {package_name}:",
  "HashFileFailureToRead": "не удалось прочитать файл \"{path}\" для хэширования: ",
  "HeaderOnlyUsage": "{package_name} является заголовочным и может использоваться из CMake через:",
  "IllegalFeatures": "Список функций не разрешен в этом контексте",
  "IllegalPlatformSpec": "Квалификатор платформы не разрешен в этом контексте",
  "InfoSetEnvVar": "Вы также можете задать переменную среды '{env_var}' в выбранном редакторе.",
  "InstallWithSystemManager": "Этот инструмент можно установить с помощью системного диспетчера пакетов.",
  "InstallWithSystemManagerMono": "Пользователям Ubuntu 18.04 может потребоваться более новая версия Mono, доступная по адресу {url}.",
  "InstallWithSystemManagerPkg": "Этот инструмент можно установить с помощью диспетчера системных пакетов ({command_line}).",
  "InstallingFromLocation": "-- Установка порта из расположения: {путь}",
  "InstallingPackage": "Выполняется установка {action_index}/{count} {spec}…",
  "InternalErrorMessage": "внутренняя ошибка: ",
  "InternalErrorMessageContact": "Откройте проблему на странице https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug с подробными инструкциями по ее воспроизведению.",
  "InvalidArgument": "недопустимый аргумент.",
  "InvalidArgumentRequiresAbsolutePath": "недопустимый аргумент: аргументы пути двоичной config \"{binary_source}\" для двоичных строк config должны быть абсолютными",
  "InvalidArgumentRequiresBaseUrl": "недопустимый аргумент: для двоичной config \"{binary_source}\" в качестве первого аргумента требуется базовый URL-адрес {base_url}",
  "InvalidArgumentRequiresBaseUrlAndToken": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется по крайней мере базовый URL-адрес и маркер SAS",
  "InvalidArgumentRequiresNoneArguments": "недопустимый аргумент: двоичная config \"{binary_source}\" не принимает аргументы",
  "InvalidArgumentRequiresOneOrTwoArguments": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется 1 или 2 аргумента",
  "InvalidArgumentRequiresPathArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" требует по крайней мере аргумент пути",
  "InvalidArgumentRequiresPrefix": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется по крайней мере префикс",
  "InvalidArgumentRequiresSingleArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" не принимает более 1 аргумента",
  "InvalidArgumentRequiresSingleStringArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" ожидает однострочного аргумента",
  "InvalidArgumentRequiresSource": "недопустимый аргумент: двоичная config \"{binary_source}\" требует непустого источника",
  "InvalidArgumentRequiresSourceArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" требует по крайней мере исходный аргумент",
  "InvalidArgumentRequiresTwoOrThreeArguments": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется 2 или 3 аргумента",
  "InvalidArgumentRequiresValidToken": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется маркер SAS без предварительного значения \"?\" в качестве второго аргумента",
  "InvalidFormatString": "Недопустимая строка формата: {actual}",
  "JsonErrorFailedToParse": "не удается выполнить анализ {path}:",
  "JsonErrorFailedToRead": "не удалось прочитать {path}: {error_msg}",
  "LaunchingProgramFailed": "Запуск средства {tool_name}:",
  "LicenseExpressionContainsExtraPlus": "Выражение лицензии SPDX содержит дополнительный знак \"+\". Они разрешены только непосредственно после идентификатора лицензии.",
  "LicenseExpressionContainsInvalidCharacter": "Выражение лицензии SPDX содержит недопустимый символ (0x{value:02X} '{value}').",
  "LicenseExpressionContainsUnicode": "Выражение лицензии SPDX содержит символ Юникода (U+{value:04X} '{pretty_value}'), но эти выражения предназначены только для ASCII.",
  "LicenseExpressionDocumentRefUnsupported": "Текущая реализация не поддерживает ссылки DocumentRef-SPDX.",
  "LicenseExpressionExpectCompoundFoundParen": "Ожидался составной элемент или конец строки, обнаружена круглая скобка.",
  "LicenseExpressionExpectCompoundFoundWith": "Ожидается либо AND, либо OR, найдено WITH (WITH допускается только после имен лицензий, а не выражений в скобках).",
  "LicenseExpressionExpectCompoundFoundWord": "Ожидается операция AND или OR, обнаружена лицензия или имя исключения: \"{value}\".",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "Ожидается операция AND, OR или WITH, обнаружена лицензия или имя исключения: \"{value}\".",
  "LicenseExpressionExpectExceptionFoundCompound": "Ожидалось имя исключения, обнаружено составное {value}.",
  "LicenseExpressionExpectExceptionFoundEof": "Ожидалось имя исключения, обнаружен конец строки.",
  "LicenseExpressionExpectExceptionFoundParen": "Ожидалось имя исключения, обнаружена скобка.",
  "LicenseExpressionExpectLicenseFoundCompound": "Ожидалось имя лицензии, обнаружено составное {value}.",
  "LicenseExpressionExpectLicenseFoundEof": "Ожидалось имя лицензии, обнаружен конец строки.",
  "LicenseExpressionExpectLicenseFoundParen": "Ожидалось имя лицензии, обнаружена круглая скобка.",
  "LicenseExpressionImbalancedParens": "Закрывающая круглая скобка без открывающей скобки.",
  "LicenseExpressionUnknownException": "Неизвестный идентификатор исключения лицензии \"{value}\". Известные значения перечислены по ссылке https://spdx.org/licenses/exceptions-index.html",
  "LicenseExpressionUnknownLicense": "Неизвестный идентификатор лицензии \"{value}\". Известные значения перечислены по адресу https://spdx.org/licenses/",
  "LoadingCommunityTriplet": "-- [СООБЩЕСТВО] Загрузка тройной конфигурации из: {путь}",
  "LoadingOverlayTriplet": "-- [OVERLAY] Загрузка тройной конфигурации из: {path}",
  "LocalizedMessageMustNotContainIndents": "Сообщение с именем {value} содержит отступ, который необходимо изменить, чтобы вместо этого использовать LocalizedString::append_indent.",
  "LocalizedMessageMustNotEndWithNewline": "Сообщение с именем {value} заканчивается новой строкой, которая должна быть добавлена форматированием, а не локализацией.",
  "MonoInstructions": "Это может быть вызвано неполной установкой Mono. Полная версия Mono доступна в некоторых системах по команде \"sudo apt install mono-complete\". Пользователям Ubuntu 18.04 может потребоваться более новая версия Mono, доступная по адресу https://www.mono-project.com/download/stable/",
  "MsiexecFailedToExtract": "сбой msiexec при извлечении \"{path}\" с кодом запуска или выхода {exit_code} и сообщением:",
  "NoLocalizationForMessages": "Нет локализации для следующих сообщений:",
  "NoRegistryForPort": "Не настроен реестр для порта {package_name}.",
  "NoteMessage": "примечание. ",
  "ParseControlErrorInfoInvalidFields": "Не ожидались следующие поля:",
  "ParseControlErrorInfoMissingFields": "Отсутствуют следующие поля:",
  "ParseControlErrorInfoTypesEntry": "{value} ожидалось {expected}",
  "ParseControlErrorInfoWhileLoading": "при загрузке {path}:",
  "ParseControlErrorInfoWrongTypeFields": "Следующие поля имели неправильные типы:",
  "PortNotInBaseline": "В базовом плане нет записи для порта {package_name}.",
  "ProcessorArchitectureMalformed": "Не удалось проанализировать %PROCESSOR_ARCHITECTURE% ({arch}) как допустимую архитектуру ЦП.",
  "ProcessorArchitectureMissing": "Отсутствует требуемая переменная среды %PROCESSOR_ARCHITECTURE%.",
  "ProcessorArchitectureW6432Malformed": "Не удалось проанализировать %PROCESSOR_ARCHITEW6432% ({arch}) как допустимую архитектуру ЦП. Возврат к %PROCESSOR_ARCHITECTURE%.",
  "ProgramReturnedNonzeroExitCode": "Сбой средства {tool_name} с кодом завершения {exit_code}.",
  "RemovingPackage": "Выполняется удаление {action_index}/{count} {spec}",
  "RestoredPackagesFromVendor": "Восстановлено {count} пакетов из {vendor} за {elapsed}",
  "ResultsHeader": "РЕЗУЛЬТАТЫ",
  "SeeURL": "Дополнительные сведения см. в {url}.",
  "SettingEnvVar": "-- Установка переменных среды \"{env_var}\" в \"{url}\".",
  "SourceFieldPortNameMismatch": "Поле \"Source\" в файле CONTROL или поле \"name\" в файле vcpkg.json содержит имя {package_name} и не соответствует каталогу портов {path}.",
  "SystemApiErrorMessage": "Сбой вызова API {system_api} с кодом завершения {exit_code} ({error_msg})",
  "ToolFetchFailed": "Не удалось получить {tool_name}.",
  "ToolInWin10": "Эта служебная программа поставляется в комплекте с Windows 10 и более поздней версии.",
  "UnexpectedErrorDuringBulkDownload": "произошла неожиданная ошибка при массовом скачивании.",
  "UnexpectedToolOutput": "Средство {tool_name} ({path}) отобразило непредвиденные выходные данные при попытке определить версию:",
  "UnknownBaselineFileContent": "Базовая запись не распознана; ожидалось \"port:triplet=(fail|skip|pass)\".",
  "UnknownBinaryProviderType": "неизвестный тип двоичного поставщика: допустимые поставщики: clear, default, nuget, nugetconfig, interactive и files",
  "UnknownTool": "vcpkg не имеет определения этого инструмента для этой платформы.",
  "UnknownVariablesInTemplate": "Недопустимый аргумент. URL-шаблон \"{value}\" содержит неизвестные переменные: {list}.",
  "UnsupportedSystemName": "Не удалось сопоставить VCPKG_CMAKE_SYSTEM_NAME \"{system_name}\" с платформой vcvarsall. Поддерживаемые имена систем: \"\", \"Windows\" и \"WindowsStore\".",
  "UnsupportedToolchain": "в триплете {triplet}: Не удалось найти допустимую цепочку инструментов для запрошенной целевой архитектуры {arch}.\nВыбранный экземпляр Visual Studio находится в: {path}\nДоступные сочетания наборов инструментов: {list}",
  "UpdateBaselineAddBaselineNoManifest": "ключ --{option} передан, но нет файла манифеста, в который можно было бы добавить поле \"builtin-baseline\".",
  "UpdateBaselineLocalGitError": "GIT не удалось проанализировать ЗАГОЛОВОК локального реестра vcpkg в \"{path}\"",
  "UpdateBaselineNoConfiguration": "невозможно обновить \"vcpkg.json\" или \"vcpkg-configuration.json\": файлы не существуют.",
  "UpdateBaselineNoExistingBuiltinBaseline": "файл манифеста в настоящее время не содержит поле \"builtin-baseline\"; чтобы добавить его, передайте ключ --{option}.",
  "UpdateBaselineNoUpdate": "реестр \"{url}\" не обновлен: \"{value}\"",
  "UpdateBaselineRemoteGitError": "GIT не удалось получить удаленный репозиторий \"{url}\"",
  "UpdateBaselineUpdatedBaseline": "обновленный реестр \"{url}\": базовый план \"{old_value}\" -> \"{new_value}\"",
  "UploadedPackagesToVendor": "Отправлено {count} пакетов из {vendor} за {elapsed}",
  "UseEnvVar": "-- Использование {env_var} в переменных окружения.",
  "UsingCommunityTriplet": "-- Использование триплета сообщества {triplet}. Успех этой тройной конфигурации не гарантируется.",
  "UsingManifestAt": "Использование файла манифеста в {path}.",
  "Utf8DecoderDereferencedAtEof": "Utf8Decoder без ссылки в конце строки.",
  "VSExaminedInstances": "Рассмотрены следующие экземпляры Visual Studio:",
  "VSExaminedPaths": "Следующие пути проверены на наличие экземпляров Visual Studio:",
  "VSNoInstances": "Не удалось найти полный экземпляр Visual Studio",
  "VcpkgCeIsExperimental": "vcpkg-ce ('configure environment') является экспериментальной функцией и может измениться в любое время.",
  "VcpkgDisallowedClassicMode": "Не удалось найти манифест (vcpkg.json) над текущим рабочим каталогом.\nЭто распределение vcpkg не имеет экземпляра классического режима.",
  "VcpkgHasCrashed": "Сбой vcpkg. Пожалуйста, создайте проблему на https://github.com/microsoft/vcpkg, содержащую краткую сводку о том, что вы пытались сделать, и следующую информацию.",
  "VcpkgInvalidCommand": "недопустимая команда: {command_name}",
  "VcpkgSendMetricsButDisabled": "передан --sendmetrics, но метрики отключены.",
  "VersionCommandHeader": "Версия программы управления пакетами vcpkg {version}\n\nСм. LICENSE.txt для получения сведений о лицензии.",
  "VersionConstraintViolated": "ожидалось, что версия зависимости {spec} будет не менее {expected_version}, но текущая версия — {actual_version}.",
  "VersionInvalidDate": "\"{version}\" не является допустимой версией даты. Даты должны быть в формате ГГГГ-ММ-ДД, а неоднозначные значения должны быть положительными целыми числами с разделителями-точками без начальных нулей.",
  "VersionInvalidRelaxed": "\"{version}\" не является допустимой нестрогой версией (semver с произвольным количеством числовых элементов).",
  "VersionInvalidSemver": "\"{version}\" не является допустимой семантической версией, см. <https://semver.org>.",
  "VersionSpecMismatch": "Не удалось загрузить порт, так как версии не согласованы. Файл \"{path}\" содержит версию {actual_version}, но база данных версий указывает, что она должна быть {expected_version}.",
  "WaitingForChildrenToExit": "Ожидание завершения дочерних процессов...",
  "WaitingToTakeFilesystemLock": "ожидание блокировки файловой системы в {path}...",
  "WarningMessage": "Предупреждение: ",
  "WarningMessageMustUsePrintWarning": "Сообщение с именем {value} начинается с предупреждения: вместо этого его необходимо изменить на prepend WarningMessage в коде.",
  "WarningsTreatedAsErrors": "предыдущие предупреждения, интерпретируемые как ошибки"
}
