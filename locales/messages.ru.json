{
  "AddArtifactOnlyOne": "\"{command_line}\" может добавлять только один артефакт за раз.",
  "AddCommandFirstArg": "Первым добавляемым параметром должен быть \"артефакт\" или \"порт\".",
  "AddFirstArgument": "Первым аргументом для \"{command_line}\" должен быть 'artifact' или 'port'.",
  "AddPortRequiresManifest": "\"{command_line}\" требуется активный файл манифеста.",
  "AddPortSucceeded": "Порты успешно добавлены в файл vcpkg.json.",
  "AddRecurseOption": "Если вы действительно хотите удалить их, выполните команду с параметром --recurse.",
  "AddTripletExpressionNotAllowed": "тройные выражения здесь не допускаются. Вы можете изменить `{package_name}:{triplet}` на `{package_name}`.",
  "AddVersionAddedVersionToFile": "добавлена версия {version} в {path}",
  "AddVersionCommitChangesReminder": "Вы не забыли зафиксировать изменения?",
  "AddVersionCommitResultReminder": "Не забудьте зафиксировать результат!",
  "AddVersionDetectLocalChangesError": "пропуск обнаружения локальных изменений из-за непредвиденного формата в выходных данных состояния git",
  "AddVersionFileNotFound": "не удалось найти необходимый файл {path}",
  "AddVersionFormatPortSuggestion": "Выполните \"{command_line}\", чтобы форматировать файл",
  "AddVersionIgnoringOptionAll": "пропуск --{option}, так как указан аргумент имени порта",
  "AddVersionLoadPortFailed": "не удалось загрузить порт {package_name}",
  "AddVersionNewFile": "(новый файл)",
  "AddVersionNewShaIs": "новый SHA: {value}",
  "AddVersionNoFilesUpdated": "Файлы не были обновлены",
  "AddVersionNoFilesUpdatedForPort": "Для {package_name} файлы не были обновлены",
  "AddVersionNoGitSha": "не удалось получить SHA для порта {package_name}",
  "AddVersionOldShaIs": "старый SHA: {value}",
  "AddVersionOverwriteOptionSuggestion": "Чтобы обойти эту проверку, используйте --{option}",
  "AddVersionPortDoesNotExist": "{package_name} не существует",
  "AddVersionPortFilesShaChanged": "зарегистрированные файлы для {package_name} изменились, но версия не обновлена",
  "AddVersionPortFilesShaUnchanged": "зарегистрированные файлы для {package_name} не изменялись с версии {version}",
  "AddVersionPortHasImproperFormat": "Неверный формат {package_name}",
  "AddVersionSuggestNewVersionScheme": "Используйте схему \"{new_scheme}\" вместо \"{old_scheme}\" в порте \"{package_name}\".\nЧтобы отключить эту проверку, используйте --{option}.",
  "AddVersionUnableToParseVersionsFile": "не удалось проанализировать файл версий {path}",
  "AddVersionUncommittedChanges": "для {package_name} есть незафиксированные изменения",
  "AddVersionUpdateVersionReminder": "Вы не забыли обновить версию или версию порта?",
  "AddVersionUseOptionAll": "Чтобы одновременно обновить все версии портов, для {command_name} без аргументов требуется передача параметра --{option}",
  "AddVersionVersionAlreadyInFile": "версия {version} уже находится в {path}",
  "AddVersionVersionIs": "версия: {version}",
  "AddingCompletionEntry": "Добавление записи завершения vcpkg в {path}.",
  "AdditionalPackagesToExport": "Для завершения этой операции необходимо экспортировать дополнительные пакеты.",
  "AdditionalPackagesToRemove": "Требуется удалить дополнительные пакеты (*) для завершения этой операции.",
  "AllFormatArgsRawArgument": "строка формата \"{value}\" содержит необработанный аргумент формата",
  "AllFormatArgsUnbalancedBraces": "несбалансированная фигурная скобка в строке формата \"{value}\"",
  "AllPackagesAreUpdated": "Все установленные пакеты обновлены с локальным профилем.",
  "AlreadyInstalled": "Уже установлено: {spec}",
  "AlreadyInstalledNotHead": "{spec} уже установлено -- сборка не выполняется из HEAD",
  "AmbiguousConfigDeleteConfigFile": "Неоднозначная конфигурация vcpkg, указанная как в манифесте, так и в файле конфигурации.\n-- Удалить {path} файла конфигурации",
  "AndroidHomeDirMissingProps": "В каталоге {env_var} отсутствует source.properties: {path}",
  "AnotherInstallationInProgress": "На машине выполняется другая установка, которая находится в спящем режиме в течение 6 секунд, прежде чем повторить попытку.",
  "AppliedUserIntegration": "Применена общепользовательская интеграция для этого корня vcpkg.",
  "ApplocalProcessing": "vcpkg applocal processing: {path}",
  "ArtifactsOptionIncompatibility": "--{option} не влияет на поиск артефакта.",
  "AssetSourcesArg": "Добавление источников для кэширования ресурсов. См. раздел 'vcpkg help assetcaching'.",
  "AttemptingToFetchPackagesFromVendor": "Попытка получить {count} пакетов от {vendor}",
  "AttemptingToSetBuiltInBaseline": "попытка задать встроенный базовый план в vcpkg.json при переопределения default-registry в vcpkg-configuration.json.\nБудет использоваться default-registry из vcpkg-configuration.json.",
  "AuthenticationMayRequireManualAction": "Один или несколько поставщиков учетных данных {vendor} запросили действие вручную. Добавьте двоичный источник «интерактивный», чтобы обеспечить интерактивность.",
  "AutoSettingEnvVar": "-- Автоматическая установка переменных среды {env_var} в \"{url}\".",
  "AutomaticLinkingForMSBuildProjects": "Все проекты MSBuild C++ теперь могут #include любые установленные библиотеки. Связывание будет выполнено автоматически. Установка новых библиотек сделает их мгновенно доступными.",
  "AvailableArchitectureTriplets": "Доступные триплеты архитектуры:",
  "AvailableHelpTopics": "Доступные разделы справки:",
  "BaselineConflict": "Указание vcpkg-configuration.default-registry в файле манифеста конфликтует со встроенным базовым планом.\nУдалите один из этих конфликтующих параметров.",
  "BaselineFileNoDefaultField": "Базовый файл при фиксации {commit_sha} был недопустимым (нет поля \"по умолчанию\").",
  "BaselineMissingDefault": "Файл baseline.json из фиксации \"{commit_sha}\" в репозитории {url} был недопустимым (не содержал поля \"по умолчанию\").",
  "BinarySourcesArg": "Добавьте источники для бинарного кэширования. См. \"vcpkg help binarycaching\".",
  "BinaryWithInvalidArchitecture": "{path}\n Ожидалась архитектура {expected}, а была {actual}",
  "BothYesAndNoOptionSpecifiedError": "не может одновременно указывать параметры --no-{option} и --{option}.",
  "BuildAlreadyInstalled": "{spec} — уже установлено. Удалите {spec}, прежде чем выполнять сборку.",
  "BuildDependenciesMissing": "Для команды сборки необходимо установить все зависимости.\nОтсутствуют следующие зависимости:",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "СКАЧАНО",
  "BuildResultExcluded": "ИСКЛЮЧЕНО",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "УДАЛЕНО",
  "BuildResultSucceeded": "УСПЕШНО",
  "BuildResultSummaryHeader": "СВОДКА ПО {triplet}",
  "BuildResultSummaryLine": "{build_result}: {count}",
  "BuildTreesRootDir": "(Экспериментально) Укажите корневой каталог buildtrees.",
  "BuildTroubleshootingMessage1": "Используйте последние файлы портов с \"git pull\" и \"vcpkg update\".\nЗатем проверьте наличие известных проблем в:",
  "BuildTroubleshootingMessage2": "Вы можете отправить новую проблему в:",
  "BuildTroubleshootingMessage3": "Добавьте \"Ошибка сборки [{package_name}]\" в название отчета об ошибке, следующие сведения о версии в описании ошибки и вложите любые релевантные журналы ошибок из раздела выше.",
  "BuildTroubleshootingMessage4": "Используйте предварительно заполненный шаблон из {path} при отправке сообщения о проблеме.",
  "BuildingFromHead": "Сборка {spec} из HEAD...",
  "BuildingPackage": "Сборка {spec}...",
  "BuildingPackageFailed": "сбой {spec} при построении: {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "из-за следующих отсутствующих зависимостей:",
  "BuiltInTriplets": "Встроенные триплеты vcpkg:",
  "BuiltWithIncorrectArchitecture": "Следующие файлы были созданы для неправильной архитектуры:",
  "CISettingsExclude": "Список разделенных запятыми портов, которые нужно пропустить",
  "CISettingsOptCIBase": "Путь к файлу ci.baseline.txt. Используется для пропуска портов и обнаружения регрессий.",
  "CISettingsOptExclude": "Список разделенных запятой портов, которые нужно пропустить",
  "CISettingsOptFailureLogs": "Каталог, в который будут скопированы журналы сбоев",
  "CISettingsOptHostExclude": "Разделенный запятыми список портов, которые нужно пропустить для триплета узла",
  "CISettingsOptOutputHashes": "Файл для вывода всех определенных хэшей пакетов",
  "CISettingsOptParentHashes": "Чтение файлов хэшей пакетов для родительского состояния CI для уменьшения набора измененных пакетов.",
  "CISettingsOptSkippedCascadeCount": "Указывает, что число параметров --exclude и supports в точности равно этому числу",
  "CISettingsOptXUnit": "Файл для вывода результатов в формате XUnit (внутренний)",
  "CISettingsVerifyGitTree": "Проверьте, каждый ли объект дерева git соответствует объявленной версии (это очень медленно)",
  "CISettingsVerifyVersion": "Печать результатов для каждого порта, а не только для ошибок.",
  "CISwitchOptAllowUnexpectedPassing": "Указывает, что результаты \"Передача, удаление из списка сбоев\" не должны выдаваться.",
  "CISwitchOptDryRun": "Распечатать план без исполнения",
  "CISwitchOptRandomize": "Произвольный порядок установки",
  "CISwitchOptSkipFailures": "Указывает, что порты с пометкой \"=fail\" в ci.baseline.txt следует пропускать.",
  "CISwitchOptXUnitAll": "Сообщать также о неизмененных портах на выходе XUnit (внутреннем)",
  "CMakeTargetsUsage": "{package_name} предоставляет целевые объекты CMake:",
  "CMakeTargetsUsageHeuristicMessage": "# этот элемент создан эвристически и может быть неверным",
  "CMakeToolChainFile": "В проектах CMake следует использовать: \"-DCMAKE_TOOLCHAIN_FILE={path}\"",
  "CMakeUsingExportedLibs": "Чтобы использовать экспортированные библиотеки в проектах CMake, добавьте {value} в командную строку CMake.",
  "ChecksFailedCheck": "сбой vcpkg; дополнительные сведения недоступны.",
  "ChecksUnreachableCode": "достигнут недостижимый код",
  "ChecksUpdateVcpkg": "обновление vcpkg путем повторного запуска bootstrap-vcpkg может устранить этот сбой.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing-passing можно использовать, только если указан базовый план с помощью --ci-baseline.",
  "CiBaselineDisallowedCascade": "Регрессия: значение {spec} является каскадным, но необходима его передача ({path}).",
  "CiBaselineRegression": "РЕГРЕССИЯ: {spec} с ошибкой {build_result}. Если требуется, добавьте {spec}=fail в {path}.",
  "CiBaselineRegressionHeader": "РЕГРЕССИИ:",
  "CiBaselineUnexpectedPass": "ПЕРЕДАЧА, УДАЛЕНИЕ ИЗ СПИСКА СБОЕВ: {spec} ({path}).",
  "ClearingContents": "Очистка содержимого {path}",
  "CmakeTargetsExcluded": "примечание. Дополнительные целевые объекты ({count}) не отображаются.",
  "CmdAddVersionOptAll": "Обработать версии для всех портов.",
  "CmdAddVersionOptOverwriteVersion": "Перезаписать \"git-tree\" существующей версии.",
  "CmdAddVersionOptSkipFormatChk": "Пропускает проверку форматирования файлов vcpkg.json.",
  "CmdAddVersionOptSkipVersionFormatChk": "Пропускает проверку формата версии.",
  "CmdAddVersionOptVerbose": "Печатать сообщения об успехе, а не только об ошибках.",
  "CmdContactOptSurvey": "Запуск браузера по умолчанию для текущего опроса VCPKG",
  "CmdDependInfoOptDGML": "Создает график на основе dgml",
  "CmdDependInfoOptDepth": "Показывать глубину рекурсии в выходных данных",
  "CmdDependInfoOptDot": "Создает график на основе точки",
  "CmdDependInfoOptMaxRecurse": "Установите максимальную глубину рекурсии, значение -1 указывает на отсутствие ограничений",
  "CmdDependInfoOptSort": "Установить порядок сортировки для списка зависимостей, допустимые значения: лексикографические, топологические (по умолчанию), x-tree, обратные",
  "CmdEditOptAll": "Откройте редактор в порте, а также в подпапке buildtree для конкретного порта.",
  "CmdEditOptBuildTrees": "Открыть редактор в подпапке дерева сборки для конкретного порта.",
  "CmdEnvOptions": "Добавить установленный {path} в {env_var}",
  "CmdExportOpt7Zip": "Экспорт в файл 7zip (.7z)",
  "CmdExportOptChocolatey": "Экспорт в пакет Chocolatey (экспериментальная функция)",
  "CmdExportOptDebug": "Включить отладку prefab",
  "CmdExportOptDryRun": "Не экспортировать фактически.",
  "CmdExportOptIFW": "Экспорт в установщик на основе IFW",
  "CmdExportOptInstalled": "Экспорт всех установленных пакетов",
  "CmdExportOptMaven": "Включить Maven",
  "CmdExportOptNuget": "Экспорт пакета NuGet",
  "CmdExportOptPrefab": "Экспорт в формат Prefab",
  "CmdExportOptRaw": "Экспорт в несжатый каталог",
  "CmdExportOptZip": "Экспорт в ZIP-файл",
  "CmdExportSettingChocolateyMaint": "Указать программу обслуживания для экспортированного пакета Chocolatey (экспериментальная функция)",
  "CmdExportSettingChocolateyVersion": "Укажите суффикс версии для добавления к экспортированному пакету Chocolatey (экспериментальная функция).",
  "CmdExportSettingConfigFile": "Указать путь к временному файлу для конфигурации установщика",
  "CmdExportSettingInstallerPath": "Указать путь к файлу экспортированного установщика",
  "CmdExportSettingNugetDesc": "Укажите описание для экспортированного пакета NuGet.",
  "CmdExportSettingNugetID": "Указать идентификатор для экспортированного пакета NuGet (переопределяет параметр --output).",
  "CmdExportSettingNugetVersion": "Указать версию экспортированного пакета NuGet.",
  "CmdExportSettingOutput": "Указать выходное имя (используется для создания имени файла)",
  "CmdExportSettingOutputDir": "Указать выходной каталог для производства артефактов",
  "CmdExportSettingPkgDir": "Указать временный путь к каталогу для переупакованных пакетов",
  "CmdExportSettingPrefabArtifactID": "Идентификатор артефакта — это имя проекта в соответствии со спецификациями Maven",
  "CmdExportSettingPrefabGroupID": "GroupId однозначно идентифицирует проект в соответствии со спецификациями Maven",
  "CmdExportSettingPrefabVersion": "Версия — это имя проекта в соответствии со спецификациями Maven",
  "CmdExportSettingRepoDir": "Указать путь к каталогу для экспортированного репозитория.",
  "CmdExportSettingRepoURL": "Указать URL-адрес удаленного репозитория для веб-установщика.",
  "CmdExportSettingSDKMinVersion": "Минимальная поддерживаемая версия Android SDK",
  "CmdExportSettingSDKTargetVersion": "Версия целевого SDK для Android",
  "CmdFetchOptXStderrStatus": "Направлять сообщения о состоянии и скачивании на stderr, а не на stdout. (Ошибки и сбои по-прежнему отправляются на stdout)",
  "CmdFormatManifestOptAll": "Форматирование файлов манифеста всех портов.",
  "CmdFormatManifestOptConvertControl": "Преобразование файлов CONTROL в файлы манифеста.",
  "CmdGenerateMessageMapOptNoOutputComments": "При создании карты сообщения исключить комментарии (полезно для создания файла локализации на английском языке)",
  "CmdGenerateMessageMapOptOutputComments": "При создании карты сообщений включите комментарии (по умолчанию)",
  "CmdInfoOptInstalled": "(экспериментально) Отчет об установленных пакетах вместо доступных",
  "CmdInfoOptTransitive": "(экспериментальная) Также сообщать о зависимостях установленных пакетов",
  "CmdNewOptApplication": "Создать манифест приложения (не требует имени или версии).",
  "CmdNewOptSingleFile": "Вставить vcpkg-configuration.json в vcpkg.json.",
  "CmdNewOptVersionDate": "Интерпретировать --version как дату ISO 8601. (ДД-ММ-ГГГГ)",
  "CmdNewOptVersionRelaxed": "Интерпретировать --version как упрощенно-числовую версию. (Неотрицательные числа разделены точками)",
  "CmdNewOptVersionString": "Интерпретировать --version как строку без поведения упорядочения.",
  "CmdNewSettingName": "Имя для нового манифеста.",
  "CmdNewSettingVersion": "Версия нового манифеста.",
  "CmdRegenerateOptDryRun": "фактически не выполняет действие, отображает только то, что было бы выполнено",
  "CmdRegenerateOptForce": "выполняется (потенциально опасное) действие без подтверждения",
  "CmdRegenerateOptNormalize": "применить любые нерекомендуемые исправления",
  "CmdRemoveOptDryRun": "Распечатать удаляемые пакеты, но не удалять их",
  "CmdRemoveOptOutdated": "Выбрать все пакеты с несоответствующими портам версиями",
  "CmdRemoveOptRecurse": "Разрешить удаление пакетов, не указанных явно в командной строке",
  "CmdSetInstalledOptDryRun": "Не создавать сборку и не устанавливать",
  "CmdSetInstalledOptNoUsage": "Не печатать сведения об использовании CMake после установки.",
  "CmdSetInstalledOptWritePkgConfig": "Записывает файл в формате NuGet packages.config для использования с внешним двоичным кэшированием.\nСмотрите \"vcpkg help binarycaching\" для получения дополнительных сведений.",
  "CmdSettingCopiedFilesLog": "Путь к создаваемому журналу скопированных файлов",
  "CmdSettingInstalledDir": "Путь к установленному дереву для использования",
  "CmdSettingTLogFile": "Путь к создаваемому TLOG-файлу",
  "CmdSettingTargetBin": "Путь к двоичному файлу для анализа",
  "CmdUpdateBaselineOptDryRun": "Распечатать план без исполнения",
  "CmdUpdateBaselineOptInitial": "добавить \"builtin-baseline\" в vcpkg.json, который его еще не содержит",
  "CmdUpgradeOptAllowUnsupported": "Вместо ошибки на неподдерживаемом порту продолжить с предупреждением.",
  "CmdUpgradeOptNoDryRun": "Фактическое обновление",
  "CmdUpgradeOptNoKeepGoing": "Остановить установку пакетов при сбое",
  "CmdXDownloadOptHeader": "Дополнительный заголовок для использования при извлечении из URL-адресов",
  "CmdXDownloadOptSha": "Хэш загружаемого файла",
  "CmdXDownloadOptSkipSha": "Не проверять SHA512 загруженного файла",
  "CmdXDownloadOptStore": "Указывает, что файл следует сохранить, а не извлечь",
  "CmdXDownloadOptUrl": "URL-адрес для скачивания и хранения, если он отсутствует в кэше",
  "CommandFailed": "команда:\n{command_line}\nсбой со следующими результатами:",
  "CommunityTriplets": "Триплеты сообщества VCPKG:",
  "ComparingUtf8Decoders": "Сравнение Utf8Decoders с разным происхождением — это всегда ошибка",
  "CompressFolderFailed": "Сбой сжатия папки \"{path}\":",
  "ComputingInstallPlan": "Вычисление плана установки...",
  "ConfigurationErrorRegistriesWithoutBaseline": "Конфигурация, определенная в {path}, недопустима..\n\nПри использовании реестров необходимо, чтобы для стандартного реестра были настроены базовые показатели или чтобы стандартному реестру было присвоено значение NULL.\n\nДополнительные сведения: {url}.",
  "ConflictingFiles": "Следующие файлы уже установлены в {path} и конфликтуют с {spec}",
  "ConflictingValuesForOption": "Для \"--{option}\" указаны конфликтующие щначения.",
  "ConstraintViolation": "Обнаружено нарушение ограничения:",
  "ContinueCodeUnitInStart": "найдена единица кода продолжения в начальной позиции",
  "ControlAndManifestFilesPresent": "Файл манифеста и файл CONTROL существуют в каталоге порта: {path}",
  "ControlCharacterInString": "Управляющий символ в строке",
  "CopyrightIsDir": "\"{path}\", являющийся каталогом, не рекомендуется.",
  "CorruptedDatabase": "База данных повреждена.",
  "CorruptedInstallTree": "Дерево vcpkg \"installed\" повреждено.",
  "CouldNotDeduceNugetIdAndVersion": "Не удалось определить идентификатор nuget и версию по имени файла: {path}",
  "CouldNotFindBaseline": "Не удалось найти явно указанный базовый план \"{commit_sha}\" в базовом файле {path}",
  "CouldNotFindBaselineForRepo": "Не удалось найти базовый план \"{commit_sha}\" для репозитория {package_name}",
  "CouldNotFindBaselineInCommit": "Не удалось найти базовый план в фиксации\"{commit_sha}\" из репозитория {package_name}:",
  "CouldNotFindGitTreeAtCommit": "не удалось найти дерево Git для \"versions\" в репозитории {package_name} фиксации {commit_sha}",
  "CouldNotFindToolVersion": "Не удалось найти <tools version=\"{version}\"> в {path}",
  "CreateFailureLogsDir": "Создание выходного каталога для журналов сбоев: {path}.",
  "CreatedNuGetPackage": "Создан пакет nupkg: {path}",
  "Creating7ZipArchive": "Создание архива 7zip...",
  "CreatingNugetPackage": "Создание пакета NuGet...",
  "CreatingZipArchive": "Создание архива Zip...",
  "CreationFailed": "Не удалось создать {path}.",
  "CurlFailedToExecute": "curl не удалось выполнить с кодом выхода {exit_code}.",
  "CurlFailedToPut": "curl не удалось поместить файл в {url} с кодом завершения {exit_code}.",
  "CurlFailedToPutHttp": "curl не удалось поместить файл в {url} с кодом завершения {exit_code} и HTTP-кодом {value}.",
  "CurlReportedUnexpectedResults": "Служба curl сообщила о неожиданных результатах для vcpkg и что vcpkg не может продолжить работу.\nПожалуйста, обратитесь к следующему тексту для получения конфиденциальной информации и откройте на GitHub Microsoft/vcpkg проблему, чтобы решить этот вопрос!\n: {command_line}\n=== curl output ===\n{actual}\n=== end curl output ===",
  "CurlReturnedUnexpectedResponseCodes": "curl вернул другое количество кодов ответа, чем ожидалось для данного запроса ({фактический} против ожидаемого {ожидаемого}).",
  "CurrentCommitBaseline": "Текущую фиксацию можно использовать в качестве базового плана:\n\t\"builtin-baseline\": \"{value}\"",
  "DateTableHeader": "Дата",
  "DefaultBrowserLaunched": "Браузер по умолчанию запущен на {url}.",
  "DefaultFlag": "По умолчанию включено --{option}.",
  "DefaultTriplet": "Starting with the September 2023 release, the default triplet for vcpkg libraries will change from x86-windows to the detected host triplet ({triplet}). To resolve this message, add --triplet x86-windows to keep the same behavior.",
  "DeleteVcpkgConfigFromManifest": "-- Или удалите \"vcpkg-configuration\" из {path} файла манифеста.",
  "DeprecatedPrefabDebugOption": "Параметр --prefab-debug упразднен.",
  "DetectCompilerHash": "Обнаружение хэша компилятора для триплета {triplet}...",
  "DocumentedFieldsSuggestUpdate": "Если это задокументированные поля, которые следует распознать, попробуйте обновить средство VCPKG.",
  "DownloadAvailable": "Доступна загружаемая копия этого инструмента, которую можно использовать, отключив {env_var}.",
  "DownloadFailedCurl": "{url}: не удалось скачать curl с кодом завершения {exit_code}",
  "DownloadFailedHashMismatch": "Файл не содержит ожидаемого хэша:\nURL-адрес: {url}\nФайл: {path}\nОжидаемый хэш: {expected}\nФактический хэш: {actual}",
  "DownloadFailedRetrying": "Сбой скачивания — повторная попытка через {value} мс",
  "DownloadFailedStatusCode": "{url}: сбой: код состояния {value}",
  "DownloadRootsDir": "Укажите корневой каталог загрузки.\n(по умолчанию: {env_var})",
  "DownloadWinHttpError": "{url}: сбой {system_api} с кодом завершения {exit_code}",
  "DownloadedSources": "Скачанные источники для {spec}",
  "DownloadingPortableToolVersionX": "Не найдена подходящая версия {tool_name} (требуется v{version}) Скачивание переносимой версии {tool_name} {version}...",
  "DownloadingTool": "Скачивание {tool_name}...\n{url}->{path}",
  "DownloadingUrl": "Выполняется скачивание {url}",
  "DownloadingVcpkgCeBundle": "Загрузка пакета артефактов vcpkg {version}...",
  "DownloadingVcpkgCeBundleLatest": "Загрузка последней версии пакета артефактов vcpkg...",
  "DownloadingVcpkgStandaloneBundle": "Скачивание изолированного пакета {version}.",
  "DownloadingVcpkgStandaloneBundleLatest": "Скачивание новейшего изолированного пакета.",
  "DuplicateCommandOption": "Параметр --{option} можно передать только один раз.",
  "DuplicateOptions": "'--{value}' указано несколько раз.",
  "DuplicatePackagePattern": "Пакет \"{package_name}\" дублируется.",
  "DuplicatePackagePatternFirstOcurrence": "Первое объявление в:",
  "DuplicatePackagePatternIgnoredLocations": "Следующие повторные объявления будут пропущены.",
  "DuplicatePackagePatternLocation": "расположение: {path}",
  "DuplicatePackagePatternRegistry": "реестр: {url}",
  "DuplicatedKeyInObj": "Дублированный ключ \"{value}\" в объекте",
  "ElapsedForPackage": "Затраченное время на обработку {spec}: {elapsed}",
  "ElapsedInstallTime": "Общее затраченное время: {count}",
  "ElapsedTimeForChecks": "Время определения успешного выполнения или сбоя: {elapsed}",
  "EmailVcpkgTeam": "Отправьте электронное письмо с любым отзывом на адрес {url}.",
  "EmbeddingVcpkgConfigInManifest": "Внедрение \"vcpkg-configuration\" в файл манифеста является ЭКСПЕРИМЕНТАЛЬНОЙ возможностью.",
  "EmptyArg": "Параметр --{option} должен быть передан непустым аргументом.",
  "EmptyLicenseExpression": "Выражение лицензии SPDX было пустым.",
  "EndOfStringInCodeUnit": "найден конец строки в середине кодовой точки",
  "EnvInvalidMaxConcurrency": "{env_var} имеет значение {value}, но должно быть > 0",
  "EnvPlatformNotSupported": "Build environment commands are not supported on this platform",
  "EnvStrFailedToExtract": "не удалось развернуть строку среды:",
  "ErrorDetectingCompilerInfo": "при обнаружении сведений о компиляторе:\nсодержимое файла журнала в \"{path}\":",
  "ErrorIndividualPackagesUnsupported": "В режиме манифеста \"установка vcpkg\" не поддерживает отдельные аргументы пакета. \nЧтобы установить дополнительные пакеты, отредактируете vcpkg.json и запустите \"vcpkg install\" без аргументов пакета.",
  "ErrorInvalidClassicModeOption": "Параметр --{option} не поддерживается в классическом режиме, и манифест не найден.",
  "ErrorInvalidManifestModeOption": "Параметр --{option} не поддерживается в режиме манифеста.",
  "ErrorMessage": "ошибка: ",
  "ErrorMessageMustUsePrintError": "Сообщение с именем {value} начинается с ошибки: вместо этого его необходимо изменить на prepend ErrorMessage в коде.",
  "ErrorMissingVcpkgRoot": "Не удалось обнаружить vcpkg-root. Если вы пытаетесь использовать созданную копию VCPKG, необходимо определить переменную среду VCPKG_ROOT, чтобы она указывала на клонированную копию https://github.com/Microsoft/vcpkg.",
  "ErrorNoVSInstance": "в триплете {triplet}: Не удается найти допустимый экземпляр Visual Studio",
  "ErrorNoVSInstanceAt": "в \"{path}\"",
  "ErrorNoVSInstanceFullVersion": "с префиксом версии набора инструментов {version}",
  "ErrorNoVSInstanceVersion": "с версией набора инструментов {version}",
  "ErrorParsingBinaryParagraph": "при анализе абзаца двоичного файла для {spec}",
  "ErrorRequireBaseline": "для взаимодействия с портами для этого экземпляра vcpkg требуется манифест с указанным базовым показателем. Пожалуйста, добавьте \"builtin-baseline\" или \"vcpkg-configuration.json\" в манифест, который переопределяет реестр по умолчанию.",
  "ErrorRequirePackagesList": "Для установки vcpkg требуется список пакетов для установки в классическом режиме.",
  "ErrorUnableToDetectCompilerInfo": "vcpkg не удалось обнаружить сведения об активном компиляторе. См. выше вывод об ошибке CMake.",
  "ErrorVcvarsUnsupported": "в триплете {triplet}: Использование запроса разработчика Visual Studio не поддерживается на узлах, отличных от Windows. \nОпределите \"VCPKG_CMAKE_SYSTEM_NAME\" или \"VCPKG_CHAINLOAD_TOOLCHAIN_FILE\" в файле триплета.",
  "ErrorVsCodeNotFound": "Visual Studio Code не найден, а переменная среды {env_var} не задана или недействительна.",
  "ErrorVsCodeNotFoundPathExamined": "Рассмотрены следующие пути:",
  "ErrorWhileFetchingBaseline": "при получении базового плана \"{value}\" из репозитория {package_name}:",
  "ErrorWhileParsing": "При анализе {path} возникли ошибки.",
  "ErrorWhileWriting": "Произошла ошибка при записи {path}",
  "ErrorsFound": "Обнаружены следующие ошибки:",
  "ExceededRecursionDepth": "Превышена глубина рекурсии.",
  "ExcludedPackage": "Исключено: {spec}",
  "ExcludedPackages": "Исключены следующие пакеты:",
  "ExpectedAtMostOneSetOfTags": "Найдено {count} наборов {old_value}.*{new_value}, но ожидается не более 1, в блоке:\n{value}",
  "ExpectedCascadeFailure": "Ожидаемое количество каскадных сбоев: {expected}, фактическое количество: {actual}.",
  "ExpectedCharacterHere": "здесь ожидается \"{expected}\"",
  "ExpectedDigitsAfterDecimal": "Ожидаемые цифры после десятичной запятой",
  "ExpectedFailOrSkip": "Ожидалось значение fail, skip или pass.",
  "ExpectedOneSetOfTags": "Найдено {count} наборов {old_value}.*{new_value}, но ожидается ровно 1, в блоке:\n{value}",
  "ExpectedPathToExist": "Ожидается, что {path} будет существовать после получения",
  "ExpectedPortName": "здесь ожидается имя порта",
  "ExpectedStatusField": "В абзаце состояния ожидалось поле \"status\"",
  "ExpectedTripletName": "здесь ожидается имя триплета",
  "ExpectedValueForOption": "Ожидаемое значение после --{option}.",
  "ExportArchitectureReq": "Для экспорта prefab требуется выбор хотя бы одной из следующих целевых архитектур: arm64-v8a, armeabi-v7a, x86_64, x86.",
  "ExportPrefabRequiresAndroidTriplet": "Для экспорта prefab требуется триплет Android.",
  "ExportUnsupportedInManifest": "Экспорт vcpkg не поддерживает режим манифеста в соответствии с соображениями перспективного проектирования. Можно использовать экспорт в классическом режиме, запустив vcpkg вне проекта на основе манифеста.",
  "Exported7zipArchive": "Архив 7zip экспортирован в папку: {path}",
  "ExportedZipArchive": "Архив Zip экспортирован в папку: {path}",
  "ExportingAlreadyBuiltPackages": "Следующие пакеты уже созданы и будут экспортированы:",
  "ExportingMaintenanceTool": "Экспорт средства обслуживания...",
  "ExportingPackage": "Экспорт {package_name}...",
  "ExtendedDocumentationAtUrl": "Расширенная документация доступна по адресу '{url}'.",
  "ExtractingTool": "Извлечение {tool_name}...",
  "FailedPostBuildChecks": "Обнаружено столько проблем при проверке после сборки: {count}. Чтобы отправить эти порты в проверенные каталоги, сначала исправьте файл порта: {path}",
  "FailedToCheckoutRepo": "не удалось извлечь \"versions\" из репозитория {package_name}",
  "FailedToDetermineArchitecture": "не удается определить архитектуру {path}.\n{command_line}",
  "FailedToDetermineCurrentCommit": "Не удалось определить текущую фиксацию:",
  "FailedToDownloadFromMirrorSet": "Не удалось скачать из зеркального набора",
  "FailedToExtract": "Сбой извлечения \" {path}\":",
  "FailedToFetchError": "{error_msg}\nНе удалось получить {package_name}:",
  "FailedToFindBaseline": "Не удалось найти baseline.json",
  "FailedToFindPortFeature": "{package_name} не содержит функции с именем {feature}.",
  "FailedToFormatMissingFile": "Нет файлов для форматирования.\nПередайте либо --all, либо явные файлы для форматирования или преобразования.",
  "FailedToLoadInstalledManifest": "Не удалось загрузить файл управления или манифеста для {package_name} из-за следующей ошибки. Удалите {package_name} и повторите попытку.",
  "FailedToLoadManifest": "Не удалось загрузить манифест из {path} каталога",
  "FailedToLoadPort": "Не удалось загрузить порт {package_name} из {path}",
  "FailedToLoadPortFrom": "Не удалось загрузить порт из {path}",
  "FailedToLoadUnnamedPortFromPath": "Не удалось загрузить порт из {path}",
  "FailedToLocateSpec": "Сбой поиска спецификации в графе: {spec}",
  "FailedToObtainDependencyVersion": "Не удается найти нужную версию зависимостей.",
  "FailedToObtainLocalPortGitSha": "Не удалось получить Git SHA для локальных портов.",
  "FailedToObtainPackageVersion": "Не удается найти нужную версию пакета.",
  "FailedToParseCMakeConsoleOut": "Сбой анализа выходных данных консоли CMake для поиска маркеров начала или конца блока.",
  "FailedToParseConfig": "Не удалось проанализировать {path} конфигурации",
  "FailedToParseControl": "Не удалось проанализировать управляющий файл: {path}",
  "FailedToParseJson": "Не удалось проанализировать файл JSON: {path}",
  "FailedToParseManifest": "Не удалось проанализировать файл манифеста: {path}",
  "FailedToParseNoTopLevelObj": "Не удалось проанализировать {path}, ожидался объект верхнего уровня.",
  "FailedToParseSerializedBinParagraph": "[проверка работоспособности] Не удалось проанализировать абзац сериализованного двоичного файла.\nОткройте проблему на странице https://github.com/microsoft/vcpkg со следующими выходными данными:\n{error_msg}\nАбзац сериализованного двоичного файла:",
  "FailedToParseVersionXML": "Не удалось проанализировать версию инструмента {tool_name}. Строка версии: {version}",
  "FailedToProvisionCe": "Не удалось подготовить артефакты vcpkg.",
  "FailedToRead": "Не удалось прочитать {path}: {error_msg}",
  "FailedToReadParagraph": "Не удалось прочитать абзацы из {path}",
  "FailedToRemoveControl": "Не удалось удалить файл управления {path}",
  "FailedToRunToolToDetermineVersion": "Сбой запуска \"{path}\" для определения версии {tool_name}.",
  "FailedToStoreBackToMirror": "не удалось сохранить обратно в зеркале:",
  "FailedToStoreBinaryCache": "Сбой сохранения двоичного кэша {path}",
  "FailedToTakeFileSystemLock": "Не удалось заблокировать файловую систему в {path}",
  "FailedToWriteManifest": "Не удалось записать файл манифеста {path}",
  "FailedVendorAuthentication": "Одному или нескольким поставщикам учетных данных {vendor} не удалось пройти аутентификацию. См. «{url}» для получения дополнительной информации о том, как предоставить учетные данные.",
  "FeedbackAppreciated": "Спасибо за отзыв!",
  "FetchingBaselineInfo": "Извлечение базовой информации из {package_name}...",
  "FetchingRegistryInfo": "Получение сведений реестра из {url} ({value})...",
  "FileNotFound": "{path}: файл не найден",
  "FileReadFailed": "Не удалось прочитать {count} байт из {path} по смещению {byte_offset}.",
  "FileSeekFailed": "Не удалось найти расположение {byte_offset} в {path}.",
  "FileSystemOperationFailed": "Сбой операции файловой системы:",
  "FilesContainAbsolutePath1": "В установленном пакете не должно быть абсолютных путей, таких как следующие:",
  "FilesContainAbsolutePath2": "Абсолютные пути найдены в следующих файлах:",
  "FilesExported": "Файлы экспортированы в папку: {path}",
  "FishCompletion": "Завершение vcpkg fish уже полностью добавлено в \"{path}\".",
  "FloatingPointConstTooBig": "Слишком большая константа с плавающей запятой: {count}",
  "FollowingPackagesMissingControl": "Следующие пакеты не содержат допустимый CONTROL или vcpkg.json.",
  "FollowingPackagesNotInstalled": "Следующие пакеты не установлены.",
  "FollowingPackagesUpgraded": "Следующие пакеты обновлены.",
  "ForceSystemBinariesOnWeirdPlatforms": "Environment variable VCPKG_FORCE_SYSTEM_BINARIES must be set on arm, s390x, ppc64le and riscv platforms.",
  "FormattedParseMessageExpression": "в выражении: {value}",
  "GenerateMsgErrorParsingFormatArgs": "строка формата синтаксического анализа для {value}:",
  "GenerateMsgIncorrectComment": "сообщение {value} содержит неправильный комментарий:",
  "GenerateMsgNoArgumentValue": "{{{value}}} указано в комментарии, но не использовалось в сообщении.",
  "GenerateMsgNoCommentValue": "{{{value}}} использовалось в сообщении, но не прокомментировано.",
  "GeneratedConfiguration": "Созданная конфигурация {path}.",
  "GeneratedInstaller": "Установщик {path} создан.",
  "GeneratingConfiguration": "Создание конфигурации {path}...",
  "GeneratingInstaller": "Создание установщика {path}...",
  "GeneratingRepo": "Создание репозитория {path}...",
  "GetParseFailureInfo": "Используйте \"--debug\", чтобы получить дополнительные сведения о сбоях анализа.",
  "GitCommandFailed": "не удалось выполнить: {command_line}",
  "GitRegistryMustHaveBaseline": "Запись реестра Git для \"{package_name}\" должна иметь поле \"baseline\", которое является допустимым SHA фиксации Git (40 шестнадцатеричных символов).\nТекущим HEAD этого репозитория является \"{value}\".",
  "GitStatusOutputExpectedFileName": "требуется имя файла",
  "GitStatusOutputExpectedNewLine": "ожидалась новая строка",
  "GitStatusOutputExpectedRenameOrNewline": "ожидался переименованный файл или новые строки",
  "GitStatusUnknownFileStatus": "неизвестное состояние файла: {value}",
  "GitUnexpectedCommandOutput": "непредвиденные выходные данные git",
  "GraphCycleDetected": "Обнаружен цикл в графе в {package_name}:",
  "HashFileFailureToRead": "сбой при чтении файла \"{path}\" для хеширования: ",
  "HeaderOnlyUsage": "{package_name} является заголовочным и может использоваться из CMake через:",
  "HelpAssetCaching": "**Experimental feature: this may change or be removed at any time**\n\nvcpkg can use mirrors to cache downloaded assets, ensuring continued operation even if the original source changes or disappears.\n\nAsset caching can be configured either by setting the environment variable X_VCPKG_ASSET_SOURCES to a semicolon-delimited list of sources or by passing a sequence of --x-asset-sources=<source> command line options. Command line sources are interpreted after environment sources. Commas, semicolons, and backticks can be escaped using backtick (`).\n\nThe <rw> optional parameter for certain strings controls how they will be accessed. It can be specified as \"read\", \"write\", or \"readwrite\" and defaults to \"read\".\n\nValid sources:",
  "HelpAssetCachingAzUrl": "Adds an Azure Blob Storage source, optionally using Shared Access Signature validation. URL should include the container path and be terminated with a trailing \"/\". <sas>, if defined, should be prefixed with a \"?\". Non-Azure servers will also work if they respond to GET and PUT requests of the form: \"<url><sha512><sas>\".",
  "HelpAssetCachingBlockOrigin": "Disables fallback to the original URLs in case the mirror does not have the file available.",
  "HelpAssetCachingScript": "Dispatches to an external tool to fetch the asset. Within the template, \"{{url}}\" will be replaced by the original url, \"{{sha512}}\" will be replaced by the SHA512 value, and \"{{dst}}\" will be replaced by the output path to save to. These substitutions will all be properly shell escaped, so an example template would be: \"curl -L {{url}} --output {{dst}}\". \"{{{{\" will be replaced by \"}}\" and \"}}}}\" will be replaced by \"}}\" to avoid expansion. Note that this will be executed inside the build environment, so the PATH and other environment variables will be modified by the triplet.",
  "HelpBinaryCaching": "vcpkg can cache compiled packages to accelerate restoration on a single machine or across the network. By default, vcpkg will save builds to a local machine cache. This can be disabled by passing \"--binarysource=clear\" as the last option on the command line.\n\nBinary caching can be further configured by either passing \"--binarysource=<source>\" options to every command line or setting the `VCPKG_BINARY_SOURCES` environment variable to a set of sources (Example: \"<source>;<source>;...\"). Command line sources are interpreted after environment sources.\n\nThe \"<rw>\" optional parameter for certain strings controls whether they will be consulted for downloading binaries and whether on-demand builds will be uploaded to that remote. It can be specified as \"read\", \"write\", or \"readwrite\".\n\nGeneral sources:",
  "HelpBinaryCachingAws": "**Experimental: will change or be removed without warning**\nAdds an AWS S3 source. Uses the aws CLI for uploads and downloads. Prefix should include s3:// scheme and be suffixed with a \"/\".",
  "HelpBinaryCachingAwsConfig": "**Experimental: will change or be removed without warning**\nAdds an AWS S3 source. Adds an AWS configuration; currently supports only 'no-sign-request' parameter that is an equivalent to the --no-sign-request parameter of the AWS CLI.",
  "HelpBinaryCachingAwsHeader": "Azure Web Services sources",
  "HelpBinaryCachingAzBlob": "**Experimental: will change or be removed without warning**\nAdds an Azure Blob Storage source. Uses Shared Access Signature validation. <url> should include the container path. <sas> must be be prefixed with a \"?\".",
  "HelpBinaryCachingCos": "**Experimental: will change or be removed without warning**\nAdds an COS source. Uses the cos CLI for uploads and downloads. <prefix> should include the scheme 'cos://' and be suffixed with a \"/\".",
  "HelpBinaryCachingDefaults": "Adds the default file-based location. Based on your system settings, the default path to store binaries is \"{path}\". This consults %LOCALAPPDATA%/%APPDATA% on Windows and $XDG_CACHE_HOME or $HOME on other platforms.",
  "HelpBinaryCachingDefaultsError": "Adds the default file-based location.",
  "HelpBinaryCachingFiles": "Adds a custom file-based location.",
  "HelpBinaryCachingGcs": "**Experimental: will change or be removed without warning**\nAdds a Google Cloud Storage (GCS) source. Uses the gsutil CLI for uploads and downloads. Prefix should include the gs:// scheme and be suffixed with a \"/\".",
  "HelpBinaryCachingHttp": "Adds a custom http-based location. GET, HEAD and PUT request are done to download, check and upload the binaries. You can use the variables {{name}}, {{version}}, {{sha}} and {{triplet}}. An example url would be'https://cache.example.com/{{triplet}}/{{name}}/{{version}}/{{sha}}'. Via the header field you can set a custom header to pass an authorization token.",
  "HelpBinaryCachingNuGet": "Adds a NuGet-based source; equivalent to the \"-Source\" parameter of the NuGet CLI.",
  "HelpBinaryCachingNuGetConfig": "Adds a NuGet-config-file-based source; equivalent to the \"-Config\" parameter of the NuGet CLI. This config should specify \"defaultPushSource\" for uploads.",
  "HelpBinaryCachingNuGetFooter": "NuGet's cache is not used by default. To use it for every NuGet-based source, set the environment variable \"VCPKG_USE_NUGET_CACHE\" to \"true\" (case-insensitive) or \"1\".\nThe \"nuget\" and \"nugetconfig\" source providers respect certain environment variables while generating NuGet packages. If the appropriate environment variables are defined and non-empty, \"metadata.repository\" field will be generated like one of the following examples:",
  "HelpBinaryCachingNuGetHeader": "NuGet sources",
  "HelpBinaryCachingNuGetInteractive": "Enables NuGet interactive credential management; the opposite of the \"-NonInteractive\" parameter in the NuGet CLI.",
  "HelpBinaryCachingNuGetTimeout": "Specifies a NuGet timeout for NuGet network operations; equivalent to the \"-Timeout\" parameter of the NuGet CLI.",
  "HelpBuiltinBase": "Базовый план ссылается на фиксацию в репозитории vcpkg, устанавливающую минимальную версию для каждой зависимости в графе. Например, если никакие другие ограничения не указаны (напрямую или транзитивно), версия будет разрешаться в базовый план манифеста верхнего уровня. Базовые линии транзитивных зависимостей игнорируются.",
  "HelpCachingClear": "Removes all previous sources, including defaults.",
  "HelpContactCommand": "Отображение контактных данных для отправки отзыва.",
  "HelpCreateCommand": "Создайте новый порт.",
  "HelpDependInfoCommand": "Отобразить список зависимостей для портов.",
  "HelpEditCommand": "Откройте порт для редактирования (используйте переменную среды \"{env_var}\", чтобы установить программу-редактор, по умолчанию 'code').",
  "HelpEnvCommand": "Создает среду чистой оболочки для разработки или компиляции.",
  "HelpExampleCommand": "Дополнительную справку (включая примеры) см. в прилагаемой папке README.md и docs.",
  "HelpExampleManifest": "Пример манифеста:",
  "HelpExportCommand": "Экспортирует пакет.",
  "HelpFormatManifestCommand": "Форматирует все файлы vcpkg.json. Запустите это перед фиксацией в vcpkg.",
  "HelpHashCommand": "Хешировать файл по определенному алгоритму, по умолчанию SHA512.",
  "HelpInitializeRegistryCommand": "Инициализирует реестр в каталоге <path>.",
  "HelpInstallCommand": "Установка пакета",
  "HelpListCommand": "Список установленных пакетов.",
  "HelpManifestConstraints": "Манифесты могут накладывать три типа ограничений на используемые версии.",
  "HelpMinVersion": "Vcpkg выберет минимальную найденную версию, соответствующую всем применимым ограничениям, включая версию из базовой линии, указанной на верхнем уровне, а также любые ограничения \"version>=\" в графе.",
  "HelpOverrides": "При использовании в качестве манифеста верхнего уровня (например, при запуске \"vcpkg install\" в каталоге) переопределения позволяют манифесту сократить разрешение зависимостей и точно указать используемую версию. Их можно использовать для обработки конфликтов версий, например, с зависимостями \"version-string\". Они не будут рассматриваться, когда от них зависит транзитивно.",
  "HelpOwnsCommand": "Поиск файлов в установленных пакетах.",
  "HelpPackagePublisher": "Кроме того, издатели пакетов могут использовать ограничения \"version>=\" для обеспечения использования потребителями хотя бы некоторой минимальной версии данной зависимости. Например, если библиотеке требуется API, добавленный в boost-asio в версии 1.70, ограничение \"version>=\" гарантирует, что переходные пользователи будут использовать достаточную версию даже при переопределении отдельных версий или перекрестных ссылках реестра.",
  "HelpPortVersionScheme": "Каждая версия дополнительно содержит \"версию порта\", представляющую собой неотрицательное целое число. При отображении в виде текста версия порта (если она не равна нулю) добавляется как суффикс к тексту основной версии, разделенному решеткой (#). Порт-версии сортируются лексографически после текста основной версии, например:\n1.0.0 < 1.0.0#1 < 1.0.1 < 1.0.1#5 < 2.0.0",
  "HelpRemoveCommand": "Удалить пакет.",
  "HelpRemoveOutdatedCommand": "Удалите все устаревшие пакеты.",
  "HelpResponseFileCommand": "Укажите файл отклика для предоставления дополнительных параметров.",
  "HelpSearchCommand": "Поиск пакетов, доступных для сборки.",
  "HelpTextOptFullDesc": "Не обрезать длинный текст",
  "HelpTopicCommand": "Отображение справки по определенной теме.",
  "HelpTopicsCommand": "Показать список разделов справки.",
  "HelpTxtOptAllowUnsupportedPort": "Вместо ошибки на неподдерживаемом порту продолжить с предупреждением.",
  "HelpTxtOptCleanAfterBuild": "Очистка деревьев сборки, пакетов и загрузок после сборки каждого пакета.",
  "HelpTxtOptCleanBuildTreesAfterBuild": "Очистка деревьев сборки после сборки каждого пакета",
  "HelpTxtOptCleanDownloadsAfterBuild": "Очистка загрузки после сборки каждого пакета",
  "HelpTxtOptCleanPkgAfterBuild": "Очистка пакетов после создания каждого пакета",
  "HelpTxtOptDryRun": "Не создавать сборку фактически и не устанавливать.",
  "HelpTxtOptEditable": "Отключить повторное извлечение исходного кода и кэширование двоичных файлов для библиотек в командной строке (классический режим)",
  "HelpTxtOptEnforcePortChecks": "Ошибка установки, если порт обнаружил проблемы или пытается использовать устаревшую функцию.",
  "HelpTxtOptKeepGoing": "Продолжить установку пакетов в случае сбоя",
  "HelpTxtOptManifestFeature": "Дополнительная функция из манифеста верхнего уровня для установки (режим манифеста).",
  "HelpTxtOptManifestNoDefault": "Не устанавливайте функции по умолчанию из манифеста верхнего уровня (режим манифеста).",
  "HelpTxtOptNoDownloads": "Не скачивайте новые источники",
  "HelpTxtOptNoUsage": "Не распечатывайте информацию об использовании CMake после установки.",
  "HelpTxtOptOnlyBinCache": "Сбой, если кэшированные двоичные файлы недоступны",
  "HelpTxtOptOnlyDownloads": "Загружайте исходники, но не собирайте пакеты",
  "HelpTxtOptRecurse": "Разрешить удаление пакетов в процессе установки",
  "HelpTxtOptUseAria2": "Используйте aria2 для выполнения задач загрузки",
  "HelpTxtOptUseHeadVersion": "Установите библиотеки из командной строки, используя последние исходные коды основной ветки разработки (классический режим).",
  "HelpTxtOptWritePkgConfig": "Записывает файл в формате NuGet packages.config для использования с внешним двоичным кэшированием.\nСмотрите `vcpkg help binarycaching` для получения дополнительной информации.",
  "HelpUpdateBaseline": "Лучший способ поддержания библиотек в актуальном состоянии — обновление базового эталона. Это обеспечит обновление всех пакетов, включая транзитивные. Но если вам нужно обновить пакет независимо, вы можете использовать ограничение \"version>=\".",
  "HelpUpdateCommand": "Список пакетов, которые можно обновить.",
  "HelpUpgradeCommand": "Пересоберите все устаревшие пакеты.",
  "HelpVersionCommand": "Отображение сведений о версии.",
  "HelpVersionDateScheme": "Дата (2021-01-01.5)",
  "HelpVersionGreater": "В поле \"зависимости\" для каждой зависимости может быть указано минимальное ограничение. Эти минимальные ограничения будут использоваться при транзитивной зависимости от этой библиотеки. Минимальная версия порта может быть дополнительно указана с суффиксом \"#\".",
  "HelpVersionScheme": "Последовательность чисел, разделенных точками (1.2.3.4)",
  "HelpVersionSchemes": "Принимаются следующие схемы управления версиями.",
  "HelpVersionSemverScheme": "Семантическая версия 2.0 (2.1.0-rc2)",
  "HelpVersionStringScheme": "Точная несовместимая версия (Vista)",
  "HelpVersioning": "Управление версиями позволяет вам детерминированно управлять точными версиями зависимостей, используемых вашим проектом, из своего файла манифеста.",
  "IgnoringVcpkgRootEnvironment": "vcpkg {value} использует обнаруженный корень vcpkg {actual} и пропускает несовпадающее значение среды VCPKG_ROOT {path}. Чтобы скрыть это сообщение, удалите переменную среды или воспользуйтесь переключателем командной строки --vcpkg-root.",
  "IllegalFeatures": "Список функций не разрешен в этом контексте",
  "IllegalPlatformSpec": "Квалификатор платформы не разрешен в этом контексте",
  "ImproperShaLength": "Длина SHA512 должна составлять 128 шестнадцатеричных символов: {value}",
  "IncorrectArchiveFileSignature": "Неверная подпись файла архива",
  "IncorrectNumberOfArgs": "'{command_name}' требует '{ожидаемых}' аргументов, но были предоставлены '{actual}'.",
  "IncorrectPESignature": "Неверная подпись PE",
  "IncrementedUtf8Decoder": "Добавочный Utf8Decoder в конце строки",
  "InfoSetEnvVar": "Вы также можете задать переменную среды '{env_var}' в выбранном редакторе.",
  "InitRegistryFailedNoRepo": "Не удалось создать реестр в {path}: это не корневой каталог репозитория Git.\nИспользуйте команду \"git init {command_line}\", чтобы создать репозиторий Git в этой папке.",
  "InstallCopiedFile": "{path_source} -> {path_destination} done",
  "InstallFailed": "сбой: {path}: {error_msg}",
  "InstallPackageInstruction": "Открыв проект, перейдите в Инструменты->Диспетчер пакетов NuGet->Консоль диспетчера пакетов и вставьте:\n Install-Package \"{value}\" -Source \"{path}\"",
  "InstallRootDir": "(Экспериментально) Укажите корневой каталог установки.",
  "InstallSkippedUpToDateFile": "{path_source} -> {path_destination} skipped, up to date",
  "InstallWithSystemManager": "Этот инструмент можно установить с помощью системного диспетчера пакетов.",
  "InstallWithSystemManagerMono": "Пользователям Ubuntu 18.04 может потребоваться более новая версия Mono, доступная по адресу {url}.",
  "InstallWithSystemManagerPkg": "Этот инструмент можно установить с помощью диспетчера системных пакетов ({command_line}).",
  "InstalledBy": "Установлено посредством {path}",
  "InstalledPackages": "Следующие пакеты уже установлены:",
  "InstalledRequestedPackages": "Все запрашиваемые пакеты сейчас установлены.",
  "InstallingFromLocation": "-- Установка порта из расположения: {путь}",
  "InstallingMavenFile": "{path}: установка файла Maven",
  "InstallingPackage": "Выполняется установка {action_index}/{count} {spec}…",
  "IntegrationFailed": "Интеграция не применена.",
  "InternalCICommand": "vcpkg ci — внутренняя команда, она может измениться несовместимым образом или может быть удалена в любое время.",
  "InternalErrorMessage": "внутренняя ошибка: ",
  "InternalErrorMessageContact": "Откройте проблему на странице https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug с подробными инструкциями по ее воспроизведению.",
  "InvalidArgMustBeAnInt": "Значение --{option} должно быть целым числом.",
  "InvalidArgMustBePositive": "Значение --{option} должно быть неотрицательным.",
  "InvalidArgument": "недопустимый аргумент.",
  "InvalidArgumentRequiresAbsolutePath": "недопустимый аргумент: аргументы пути двоичной config \"{binary_source}\" для двоичных строк config должны быть абсолютными",
  "InvalidArgumentRequiresBaseUrl": "недопустимый аргумент: для двоичной config \"{binary_source}\" в качестве первого аргумента требуется базовый URL-адрес {base_url}",
  "InvalidArgumentRequiresBaseUrlAndToken": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется по крайней мере базовый URL-адрес и маркер SAS",
  "InvalidArgumentRequiresNoneArguments": "недопустимый аргумент: двоичная config \"{binary_source}\" не принимает аргументы",
  "InvalidArgumentRequiresOneOrTwoArguments": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется 1 или 2 аргумента",
  "InvalidArgumentRequiresPathArgument": "недопустимый аргумент: двоичная конфигурация '{binary_source}' требует по крайней мере один аргумент пути",
  "InvalidArgumentRequiresPrefix": "недопустимый аргумент: двоичная конфигурация '{binary_source}' требует по крайней мере один префикс",
  "InvalidArgumentRequiresSingleArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" не принимает более 1 аргумента",
  "InvalidArgumentRequiresSingleStringArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" ожидает однострочного аргумента",
  "InvalidArgumentRequiresSourceArgument": "недопустимый аргумент: двоичная конфигурация '{binary_source}' требует по крайней мере один исходный аргумент",
  "InvalidArgumentRequiresTwoOrThreeArguments": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется 2 или 3 аргумента",
  "InvalidArgumentRequiresValidToken": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется маркер SAS без предварительного значения \"?\" в качестве второго аргумента",
  "InvalidBuildInfo": "Недопустимый файл BUILD_INFO для пакета: {error_msg}",
  "InvalidBuiltInBaseline": "встроенный базовый план верхнего уровня ({value}) не является допустимым SHA фиксации: ожидалось 40 шестнадцатеричных символов.",
  "InvalidBundleDefinition": "Недопустимое определение пакета.",
  "InvalidCodePoint": "Недопустимая кодовая точка передана в utf8_encoded_code_point_count",
  "InvalidCodeUnit": "недопустимая кодовая единица",
  "InvalidCommandArgSort": "Значением --sort должен быть один из следующих вариантов: \"lexicographical\", \"topographical\", \"reverse\".",
  "InvalidCommentStyle": "vcpkg не поддерживает комментарии в стиле C, однако большинство объектов позволяют использовать в качестве комментариев поля с префиксом $.",
  "InvalidCommitId": "Недопустимый ИД фиксации: {commit_sha}",
  "InvalidFileType": "сбой: {path} не может обработать тип файла",
  "InvalidFilename": "Имя файла не может содержать недопустимые символы {value}, но использовалось имя {path}",
  "InvalidFloatingPointConst": "Недопустимые константы с плавающей точкой: {count}",
  "InvalidFormatString": "Недопустимая строка формата: {actual}",
  "InvalidHexDigit": "Недопустимая шестнадцатеричная цифра в escape-коде Юникода",
  "InvalidIntegerConst": "Недопустимая целая константа: {count}",
  "InvalidLibraryMissingLinkerMembers": "Недопустимая библиотека: не удалось найти элемент компоновщика.",
  "InvalidLinkage": "Недопустимый тип связи {system_name}: [{value}]",
  "InvalidOptionForRemove": "\"remove\" принимает библиотеки или \"--outdated\"",
  "InvalidPortVersonName": "Обнаружено недопустимое имя файла версии порта: \"{path}\".",
  "InvalidString": "Недопустимый utf8 передается значению Value::string(std::string)",
  "InvalidTriplet": "Недопустимая триада: {triplet}",
  "InvalidUri": "не удалось проанализировать URI: {value}",
  "IrregularFile": "путь не является обычным файлом: {path}",
  "JsonErrorMustBeAnObject": "Ожидается, что \"{path}\" будет объектом.",
  "JsonFileMissingExtension": "файл JSON {path} должен иметь расширение .json (все строчные буквы)",
  "JsonSwitch": "(Экспериментально) Запрос вывода JSON.",
  "JsonValueNotArray": "значение json не является массивом",
  "JsonValueNotObject": "Значение JSON не является объектом",
  "JsonValueNotString": "значение json не является строкой",
  "LaunchingProgramFailed": "Запуск средства {tool_name}:",
  "LibraryArchiveMemberTooSmall": "Архивный элемент библиотеки был слишком мал, чтобы содержать ожидаемый тип данных.",
  "LibraryFirstLinkerMemberMissing": "Не удалось найти имя первого элемента компоновщика.",
  "LicenseExpressionContainsExtraPlus": "Выражение лицензии SPDX содержит дополнительный знак \"+\". Они разрешены только непосредственно после идентификатора лицензии.",
  "LicenseExpressionContainsInvalidCharacter": "Выражение лицензии SPDX содержит недопустимый символ (0x{value:02X} '{value}').",
  "LicenseExpressionContainsUnicode": "Выражение лицензии SPDX содержит символ Юникода (U+{value:04X} '{pretty_value}'), но эти выражения предназначены только для ASCII.",
  "LicenseExpressionDocumentRefUnsupported": "Текущая реализация не поддерживает ссылки DocumentRef-SPDX.",
  "LicenseExpressionExpectCompoundFoundParen": "Ожидался составной элемент или конец строки, обнаружена круглая скобка.",
  "LicenseExpressionExpectCompoundFoundWith": "Ожидается либо AND, либо OR, найдено WITH (WITH допускается только после имен лицензий, а не выражений в скобках).",
  "LicenseExpressionExpectCompoundFoundWord": "Ожидается операция AND или OR, обнаружена лицензия или имя исключения: \"{value}\".",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "Ожидается операция AND, OR или WITH, обнаружена лицензия или имя исключения: \"{value}\".",
  "LicenseExpressionExpectExceptionFoundCompound": "Ожидалось имя исключения, обнаружено составное {value}.",
  "LicenseExpressionExpectExceptionFoundEof": "Ожидалось имя исключения, обнаружен конец строки.",
  "LicenseExpressionExpectExceptionFoundParen": "Ожидалось имя исключения, обнаружена скобка.",
  "LicenseExpressionExpectLicenseFoundCompound": "Ожидалось имя лицензии, обнаружено составное {value}.",
  "LicenseExpressionExpectLicenseFoundEof": "Ожидалось имя лицензии, обнаружен конец строки.",
  "LicenseExpressionExpectLicenseFoundParen": "Ожидалось имя лицензии, обнаружена круглая скобка.",
  "LicenseExpressionImbalancedParens": "Закрывающая круглая скобка без открывающей скобки.",
  "LicenseExpressionUnknownException": "Неизвестный идентификатор исключения лицензии \"{value}\". Известные значения перечислены по ссылке https://spdx.org/licenses/exceptions-index.html",
  "LicenseExpressionUnknownLicense": "Неизвестный идентификатор лицензии \"{value}\". Известные значения перечислены по адресу https://spdx.org/licenses/",
  "LinkageDynamicDebug": "Динамическая отладка (/MDD)",
  "LinkageDynamicRelease": "Динамический выпуск (/MD)",
  "LinkageStaticDebug": "Статическая отладка (/MTd)",
  "LinkageStaticRelease": "Статический выпуск (/MT)",
  "ListOfValidFieldsForControlFiles": "Список допустимых полей для файлов CONTROL (с учетом регистра):",
  "LoadingCommunityTriplet": "-- [СООБЩЕСТВО] Загрузка тройной конфигурации из: {путь}",
  "LoadingDependencyInformation": "Загрузка сведений о зависимостях для пакетов {count}...",
  "LoadingOverlayTriplet": "-- [OVERLAY] Загрузка тройной конфигурации из: {path}",
  "LocalPortfileVersion": "Использование локальных версий файлов портов. Чтобы обновить локальные файлы портов, используйте \"git pull\".",
  "LocalizedMessageMustNotContainIndents": "Сообщение с именем {value} содержит отступ, который необходимо изменить, чтобы вместо этого использовать LocalizedString::append_indent.",
  "LocalizedMessageMustNotEndWithNewline": "Сообщение с именем {value} заканчивается новой строкой, которая должна быть добавлена форматированием, а не локализацией.",
  "ManifestConflict": "Обнаружен файл манифеста и файл CONTROL в порте \"{path}\". Переименуйте один из них",
  "ManifestFormatCompleted": "Файлы манифеста отформатированы успешно.",
  "MismatchedFiles": "файл для хранения не соответствует хэшу",
  "MismatchedManifestAfterReserialize": "Сериализованный манифест отличался от исходного манифеста. Откройте проблему на странице https://github.com/microsoft/vcpkg со следующими выходными данными:",
  "MismatchedNames": "имена не совпадают: \"{package_name}\" != \"{actual}\"",
  "Missing7zHeader": "Не удалось найти заголовок 7z.",
  "MissingAndroidEnv": "Отсутствует переменная среды ANDROID_NDK_HOME",
  "MissingAndroidHomeDir": "Каталог ANDROID_NDK_HOME не существует: {path}",
  "MissingArgFormatManifest": "манифест формата был передан --convert-control без '--all'.\nЭто ничего не делает: явно переданные управляющие файлы преобразуются автоматически.",
  "MissingDependency": "Пакет {spec} установлен, но зависимость {package_name} не установлена.",
  "MissingExtension": "Отсутствует расширение \"{extension}\".",
  "MissingOption": "Для этой команды требуется --{option}",
  "MissingPortSuggestPullRequest": "Если вашего порта нет в списке, откройте вопрос и рассмотрите возможность размещения запроса на вытягивание.",
  "MissmatchedBinParagraphs": "Абзац сериализованного двоичного файла отличался от абзаца исходного двоичного файла. Откройте проблему на странице https://github.com/microsoft/vcpkg со следующими выходными данными:",
  "MonoInstructions": "Это может быть вызвано неполной установкой Mono. Полная версия Mono доступна в некоторых системах по команде \"sudo apt install mono-complete\". Пользователям Ubuntu 18.04 может потребоваться более новая версия Mono, доступная по адресу https://www.mono-project.com/download/stable/",
  "MsiexecFailedToExtract": "сбой msiexec при извлечении \"{path}\" с кодом запуска или выхода {exit_code} и сообщением:",
  "MultiArch": "Значение Multi-Arch должно быть \"то же\", но было {option}",
  "MutuallyExclusiveOption": "--{value} нельзя использовать с --{option}.",
  "NavigateToNPS": "Пожалуйста, перейдите на {url} в предпочитаемом вами браузере.",
  "NewConfigurationAlreadyExists": "При создании манифеста файл vcpkg-configuration.json по адресу {path} будет перезаписан.",
  "NewManifestAlreadyExists": "Манифест уже присутствует в {path}.",
  "NewNameCannotBeEmpty": "--name не может быть пустым.",
  "NewOnlyOneVersionKind": "Можно указать только одно из --version-relaxed, --version-date или --version-string.",
  "NewSpecifyNameVersionOrApplication": "Чтобы указать, что манифест не предназначен для использования в качестве порта, определите --name и --version для создания манифеста, предназначенного для библиотек C++, или укажите --application.",
  "NewVersionCannotBeEmpty": "--version не может быть пустой.",
  "NoArgumentsForOption": "Параметр --{option} не принимает аргумент.",
  "NoCachedPackages": "Никакие пакеты не кэшируются.",
  "NoError": "нет ошибок",
  "NoInstalledPackages": "Нет установленных пакетов. Вы имели в виду \"search\"?",
  "NoLocalizationForMessages": "Нет локализованных сообщений для следующего: ",
  "NoOutdatedPackages": "Нет устаревших пакетов.",
  "NoRegistryForPort": "Не настроен реестр для порта {package_name}.",
  "NoUrlsAndHashSpecified": "Не указаны URL-адреса для скачивания SHA: {sha}",
  "NoUrlsAndNoHashSpecified": "URL-адреса и хэш не указаны.",
  "NoteMessage": "примечание. ",
  "NugetPackageFileSucceededButCreationFailed": "Создание пакета NuGet выполнено успешно, но .nupkg не создан. Ожидается: \"{path}\"",
  "OptionMustBeInteger": "Значение --{option} должно быть целым числом.",
  "OptionRequired": "Требуется параметр --{option}.",
  "OptionRequiresOption": "Для значения --{value} требуется --{option}",
  "OriginalBinParagraphHeader": "\nАбзац исходного двоичного файла",
  "OverlayPatchDir": "Путь наложения \"{path}\" должен существовать и быть каталогом.",
  "OverlayTriplets": "Триплеты наложения из {path}:",
  "OverwritingFile": "Файл {path} уже существует и будет перезаписан",
  "PECoffHeaderTooShort": "При синтаксическом анализе переносимого исполняемого файла {путь} размер заголовка COFF слишком мал для того, чтобы содержать действительный заголовок PE.",
  "PEConfigCrossesSectionBoundary": "При синтаксическом анализе переносимого исполняемого файла {путь} каталог конфигурации изображения пересекает границу раздела.",
  "PEImportCrossesSectionBoundary": "При разборе Portable Executable {path} таблица импорта пересекает границу раздела.",
  "PEPlusTagInvalid": "При синтаксическом анализе Portable Executable {path} необязательный заголовок не был ни PE32, ни PE32+.",
  "PERvaNotFound": "При синтаксическом анализе Portable Executable {path} не удалось найти RVA {value:#X}.",
  "PESignatureMismatch": "При синтаксическом анализе Portable Executable {path} несоответствие подписи.",
  "PackageAlreadyRemoved": "не удается удалить {spec}: уже удалено",
  "PackageFailedtWhileExtracting": "Сбой \"{value}\" при извлечении {path}.",
  "PackageRootDir": "(Экспериментально) Укажите корневой каталог пакетов.",
  "PackagesToInstall": "Будут собраны и установлены следующие пакеты:",
  "PackagesToInstallDirectly": "Следующие пакеты будут непосредственно установлены:",
  "PackagesToModify": "Дополнительные пакеты (*) будут изменены для завершения этой операции.",
  "PackagesToRebuild": "Будут повторно собраны следующие пакеты:",
  "PackagesToRebuildSuggestRecurse": "Если вы действительно хотите повторно собрать перечисленные выше пакеты, запустите команду с параметром --recurse.",
  "PackagesToRemove": "Будут удалены следующие пакеты:",
  "PackagesUpToDate": "Нет пакетов, которые требуется обновить.",
  "PackingVendorFailed": "Сбой упаковки {vendor}. Используйте --debug для получения дополнительной информации.",
  "PairedSurrogatesAreInvalid": "конечный суррогат, следующий за ведущим суррогатом (парные суррогаты недействительны)",
  "ParseControlErrorInfoInvalidFields": "Не ожидались следующие поля:",
  "ParseControlErrorInfoMissingFields": "Отсутствуют следующие поля:",
  "ParseControlErrorInfoTypesEntry": "{value} ожидалось {expected}",
  "ParseControlErrorInfoWhileLoading": "при загрузке {path}:",
  "ParseControlErrorInfoWrongTypeFields": "Следующие поля имели неправильные типы:",
  "ParseIdentifierError": "\"{value}\" не является допустимым идентификатором. Идентификаторы должны содержать строчные буквы, цифры и дефисы, но не зарезервированные символы (см. {url} для получения дополнительных сведений)",
  "ParsePackageNameError": "\"{package_name}\" не является допустимым именем пакета. Имена пакетов должны содержать строчные буквы, цифры и дефисы, но не зарезервированные символы (см. {url} для получения дополнительных сведений)",
  "ParsePackagePatternError": "\"{package_name}\" не является недопустимым шаблоном пакета. Шаблоны пакетов должны использовать только один подстановочный знак (*), который должен быть последним символом в шаблоне (см. {url} для получения дополнительных сведений)",
  "PathMustBeAbsolute": "Значение переменной среды X_VCPKG_REGISTRIES_CACHE не является абсолютным: {path}",
  "PerformingPostBuildValidation": "-- Выполнение проверки после сборки",
  "PortBugAllowRestrictedHeaders": "В исключительных случаях эту политику можно отключить с помощью {env_var}",
  "PortBugBinDirExists": "Хотя в статической сборке не должно быть каталога bin\\, имеется {path}.",
  "PortBugDebugBinDirExists": "Хотя в статической сборке не должно быть каталога debug\\bin\\, имеется {path}.",
  "PortBugDebugShareDir": "Каталог /debug/share не должен существовать. Переупорядочьте все важные файлы, а затем используйте\nfile(REMOVE_RECURSE \"${{CURRENT_PACKAGES_DIR}}/debug/share\")",
  "PortBugDllAppContainerBitNotSet": "Необходимо задать бит контейнера приложений для приложений Магазина Windows. Для следующих DLL бит контейнера приложений не задан:",
  "PortBugDllInLibDir": "Следующие библиотеки DLL найдены в /lib или /debug/lib. Переместите их в /bin или /debug/bin соответственно.",
  "PortBugDuplicateIncludeFiles": "Включаемые файлы не должны дублироваться в каталоге /debug/include. Если не удается отключить этот параметр в CMake проекта, используйте\nfile(REMOVE_RECURSE \"${{CURRENT_PACKAGES_DIR}}/debug/include\")",
  "PortBugFoundCopyrightFiles": "Следующие файлы могут быть защищены авторским правом:",
  "PortBugFoundDebugBinaries": "Найдено столько двоичных файлов отладки: {count}",
  "PortBugFoundDllInStaticBuild": "Хотя в статической сборке не должно быть DLL, найдены следующие DLL:",
  "PortBugFoundEmptyDirectories": "В {path} не должно быть пустых каталогов. Найдены следующие пустые каталоги:",
  "PortBugFoundExeInBinDir": "Указанные ниже EXE найдены в /bin или /debug/bin. EXE не являются допустимыми целевыми объектами распространения.",
  "PortBugFoundReleaseBinaries": "Найдено столько двоичных файлов выпуска: {count}",
  "PortBugIncludeDirInCMakeHelperPort": "Папка /include существует во вспомогательном порте CMake. Это неправильно, так как следует устанавливать только файлы cmake",
  "PortBugInspectFiles": "Для проверки файлов {extension} используйте:",
  "PortBugInvalidCrtLinkage": "Следующие двоичные файлы должны использовать CRT {expected}.",
  "PortBugInvalidCrtLinkageEntry": "{path} связывается с:",
  "PortBugMergeLibCMakeDir": "Папку /lib/cmake следует объединить с /debug/lib/cmake и переместить в /share/{package_name}/cmake. Используйте вспомогательную функцию \"vcpkg_cmake_config_fixup()\" из порта vcpkg-cmake-config.",
  "PortBugMismatchedNumberOfBinaries": "Несоответствие количества двоичных файлов отладки и выпуска.",
  "PortBugMisplacedCMakeFiles": "Указанные ниже файлы cmake найдены за пределами /share/{spec}. Поместите файлы cmake в /share/{spec}.",
  "PortBugMisplacedFiles": "В {path} помещены следующие файлы:",
  "PortBugMisplacedFilesCont": "Файлы не могут присутствовать в этих каталогах.",
  "PortBugMisplacedPkgConfigFiles": "Каталоги pkgconfig должны быть share/pkgconfig (только для библиотек заголовков), lib/pkgconfig или lib/debug/pkgconfig. Найдены следующие неправильно размещенные файлы pkgconfig:",
  "PortBugMissingDebugBinaries": "Двоичные файлы отладки не найдены.",
  "PortBugMissingFile": "Файл /{path} не существует. Этот файл должен существовать для вспомогательных портов CMake.",
  "PortBugMissingImportedLibs": "Библиотеки импорта отсутствуют в {path}.\nЕсли так и должно быть, добавьте следующую строку в файл порта:\nset(VCPKG_POLICY_DLLS_WITHOUT_LIBS enabled)",
  "PortBugMissingIncludeDir": "Папка /include пуста или отсутствует. Это означает, что библиотека установлена неправильно.",
  "PortBugMissingLicense": "Лицензия на программное обеспечение должна быть доступна в ${{CURRENT_PACKAGES_DIR}}/share/{package_name}/copyright",
  "PortBugMissingProvidedUsage": "Порт указал \"usage\", но забыл установить в /share/{package_name}/usage, добавьте в файл порта следующую строку:",
  "PortBugMissingReleaseBinaries": "Двоичные файлы выпуска не найдены.",
  "PortBugMovePkgConfigFiles": "Файлы pkgconfig можно перемещать с помощью таких команд:",
  "PortBugOutdatedCRT": "Обнаружен устаревший динамический CRT в следующих файлах:",
  "PortBugRemoveBinDir": "Если не удается отключить создание bin\\ и/или debug\\bin\\, используйте эту команду в файле порта, чтобы удалить их",
  "PortBugRemoveEmptyDirectories": "Если каталог должен быть заполнен, но он пуст, это может указывать на ошибку в файле порта.\nЕсли каталоги не требуются, но не удается отключить их создание, используйте следующие команды в файле порта, чтобы удалить их:",
  "PortBugRemoveEmptyDirs": "file(REMOVE_RECURSE пустые каталоги, оставшиеся после операций переименования)",
  "PortBugRestrictedHeaderPaths": "Следующие ограниченные заголовки могут препятствовать правильной компиляции основной среды выполнения C++ и других пакетов. В исключительных случаях эту политику можно отключить с помощью {env_var}.",
  "PortBugSetDllsWithoutExports": "DLL без операций экспорта, скорее всего, являются ошибкой в скрипте сборки. Если так и должно быть, добавьте следующую строку в файл порта:\nset(VCPKG_POLICY_DLLS_WITHOUT_EXPORTS enabled)\nСледующие DLL не содержат операций экспорта:",
  "PortDependencyConflict": "Порт {package_name} имеет следующие неподдерживаемые зависимости:",
  "PortNotInBaseline": "В базовом плане нет записи для порта {package_name}.",
  "PortSupportsField": "(поддерживает: \"{supports_expression}\")",
  "PortVersionConflict": "Следующие пакеты отличаются от версий портов:",
  "PortsAdded": "Добавлены следующие порты ({count}):",
  "PortsNoDiff": "Порты между двумя фиксациями не изменились.",
  "PortsRemoved": "Удалены следующие порты ({count}):",
  "PortsUpdated": "\nОбновлены следующие порты ({count}):",
  "PrebuiltPackages": "Существуют несобранные пакеты. Чтобы собрать их, выполните:",
  "PreviousIntegrationFileRemains": "Предыдущий файл интеграции не был удален.",
  "ProgramReturnedNonzeroExitCode": "Сбой средства {tool_name} с кодом завершения {exit_code}.",
  "ProvideExportType": "Требуется хотя бы один из следующих параметров: --raw --nuget --ifw --zip --7zip --chocolatey --prefab.",
  "PushingVendorFailed": "Сбой отправки {vendor} в \"{path}\". Для получения дополнительных сведений, используйте --debug.",
  "RegistryCreated": "Реестр успешно создан в {path}",
  "RemoveDependencies": "Чтобы удалить зависимости в режиме манифеста, измените манифест (vcpkg.json) и выполните команду \"install\".",
  "RemovePackageConflict": "{spec} не установлено, но {package_name} установлено для {triplet}. Вы имели в виду {package_name}:{triplet}?",
  "RemovingPackage": "Выполняется удаление {action_index}/{count} {spec}",
  "RestoredPackage": "Восстановлен пакет из \"{path}\"",
  "RestoredPackagesFromVendor": "Восстановлено {count} пакетов из {value} за {elapsed}. Используйте --debug, чтобы увидеть больше деталей.",
  "ResultsHeader": "РЕЗУЛЬТАТЫ",
  "SecretBanner": "*** СЕКРЕТ ***",
  "SeeURL": "Дополнительные сведения см. в {url}.",
  "SerializedBinParagraphHeader": "\nАбзац сериализованного двоичного файла",
  "SettingEnvVar": "-- Установка переменных среды \"{env_var}\" в \"{url}\".",
  "ShaPassedAsArgAndOption": "SHA512 передан как аргумент и как параметр. Передайте только один из этих вариантов.",
  "ShaPassedWithConflict": "Передано SHA512, но также передан параметр --skip-sha512. Выберите только один из этих вариантов.",
  "ShallowRepositoryDetected": "VCPKG-файл клонирован как неполный репозиторий в: {path}\nПовторите попытку с полным клонированием vcpkg.",
  "SkipClearingInvalidDir": "Очистка содержимого {path} пропущена: это не каталог.",
  "SourceFieldPortNameMismatch": "Поле \"Source\" в файле CONTROL или поле \"name\" в файле vcpkg.json содержит имя {package_name} и не соответствует каталогу порта {path}.",
  "SpecifiedFeatureTurnedOff": "Функция '{command_name}' специально отключена, но указан --{option}.",
  "SpecifyDirectoriesContaining": "Указывает каталоги, содержащие файлы триплетов.\n(также: '{env_var}')",
  "SpecifyDirectoriesWhenSearching": "Укажите каталоги для использования при поиске портов.\n(также: '{env_var}')",
  "SpecifyHostArch": "Укажите триплет архитектуры узла. См. 'vcpkg help triplet'.\n(по умолчанию: '{env_var}')",
  "SpecifyTargetArch": "Укажите триплет целевой архитектуры. См. 'vcpkg help triplet'.\n(по умолчанию: '{env_var}')",
  "StartCodeUnitInContinue": "найдена единица начального кода в позиции продолжения",
  "StoreOptionMissingSha": "Параметр --store недопустим без sha512",
  "StoredBinaryCache": "Сохраненный двоичный кэш: \"{path}\"",
  "SuccessfulyExported": "Пакет {package_name} экспортирован в папку {path}",
  "SuggestGitPull": "Результат может быть устаревшим. Чтобы получить последние результаты, запустите \"git pull\".",
  "SuggestResolution": "Чтобы попытаться устранить все ошибки сразу, запустите: \nvcpkg {command_name} --{option}",
  "SuggestStartingBashShell": "Чтобы изменения вступили в силу, пожалуйста, проверьте, запустили ли вы новую оболочку bash,",
  "SuggestUpdateVcpkg": "Возможно, нужно обновить двоичный файл vcpkg; попробуйте запустить {command_line} для обновления.",
  "SupportedPort": "Порт {package_name} поддерживается.",
  "SystemApiErrorMessage": "Сбой вызова API {system_api} с кодом завершения {exit_code} ({error_msg})",
  "ToRemovePackages": "Чтобы удалить только устаревшие пакеты, запустите команду\n{command_name} remove --outdated",
  "ToUpdatePackages": "Чтобы обновить эти пакеты и все зависимости, запустите команду обновления\n{command_name}",
  "ToolFetchFailed": "Не удалось получить {tool_name}.",
  "ToolInWin10": "Эта служебная программа поставляется в комплекте с Windows 10 и более поздней версии.",
  "ToolOfVersionXNotFound": "Подходящая версия {tool_name} не найдена (требуется v{version}) и не может автоматически загрузить портативную версию. Установите более новую версию {tool_name}",
  "TotalInstallTime": "Общее время установки: {elapsed}",
  "TrailingCommaInArray": "Конечная запятая в массиве",
  "TrailingCommaInObj": "Конечная запятая в объекте",
  "TripletFileNotFound": "Файл Triplet {triplet}.cmake не найден",
  "TwoFeatureFlagsSpecified": "И '{value}', и -'{value}' были указаны как флаги функций.",
  "UndeterminedToolChainForTriplet": "Не удалось определить использование цепочки инструментов для {triplet} с CMAKE_SYSTEM_NAME {system_name}. Вы хотели использовать VCPKG_CHAINLOAD_TOOLCHAIN_FILE?",
  "UnexpectedByteSize": "Ожидалась запись: {expected}, записано: {actual}.",
  "UnexpectedCharExpectedCloseBrace": "Непредвиденный символ; требуется свойство или закрывающая фигурная скобка",
  "UnexpectedCharExpectedColon": "Непредвиденный символ; ожидается двоеточие",
  "UnexpectedCharExpectedComma": "Непредвиденный символ; ожидается запятая или закрывающая фигурная скобка",
  "UnexpectedCharExpectedName": "Непредвиденный символ; ожидается имя свойства",
  "UnexpectedCharExpectedValue": "Непредвиденный символ; ожидаемое значение",
  "UnexpectedCharMidArray": "Непредвиденный символ в середине массива",
  "UnexpectedCharMidKeyword": "Непредвиденный символ в середине ключевого слова",
  "UnexpectedDigitsAfterLeadingZero": "Непредвиденные цифры после начального нуля",
  "UnexpectedEOFAfterEscape": "Непредвиденный EOF после escape-символа",
  "UnexpectedEOFAfterMinus": "Непредвиденный EOF после знака минуса",
  "UnexpectedEOFExpectedChar": "Непредвиденный символ; ожидается EOF",
  "UnexpectedEOFExpectedCloseBrace": "Непредвиденный EOF; ожидается свойство или закрывающая фигурная скобка",
  "UnexpectedEOFExpectedColon": "Непредвиденный EOF; ожидается двоеточие",
  "UnexpectedEOFExpectedName": "Непредвиденный EOF; ожидается имя свойства",
  "UnexpectedEOFExpectedProp": "Непредвиденный EOF; ожидается свойство",
  "UnexpectedEOFExpectedValue": "Непредвиденный EOF; ожидаемое значение",
  "UnexpectedEOFMidArray": "Непредвиденный EOF в середине массива",
  "UnexpectedEOFMidKeyword": "Непредвиденный EOF в середине ключевого слова",
  "UnexpectedEOFMidString": "Непредвиденный EOF в середине строки",
  "UnexpectedEOFMidUnicodeEscape": "Непредвиденный конец файла в середине escape-кода Юникода",
  "UnexpectedErrorDuringBulkDownload": "произошла неожиданная ошибка при массовом скачивании.",
  "UnexpectedEscapeSequence": "Непредвиденное продолжение escape-последовательности",
  "UnexpectedExtension": "Неожиданное расширение архива: \"{extension}\".",
  "UnexpectedFormat": "Ожидается формат [{expected}], а был [{actual}].",
  "UnexpectedPortName": "порт {expected} объявлен как {actual} в {path}",
  "UnexpectedToolOutput": "Средство {tool_name} ({path}) отобразило непредвиденные выходные данные при попытке определить версию:",
  "UnknownBaselineFileContent": "Базовая запись не распознана; ожидалось \"port:triplet=(fail|skip|pass)\".",
  "UnknownBinaryProviderType": "неизвестный тип бинарного провайдера: допустимыми провайдерами являются «clear», «default», «nuget», «nugetconfig», «nugettimeout», «interactive», «x-azblob», «x-gcs», «x-aws», «x-aws-config», «http» и «файлы»",
  "UnknownOptions": "Неизвестные параметры для команды '{command_namнеизвестныйe}':",
  "UnknownParameterForIntegrate": "Неизвестный параметр \"{value}\" для интеграции.",
  "UnknownPolicySetting": "Неизвестный параметр политики '{value}': {option}",
  "UnknownSettingForBuildType": "Неизвестный параметр для VCPKG_BUILD_TYPE {опция}. Допустимые параметры: '', 'debug', и 'release'.",
  "UnknownTool": "vcpkg не имеет определения этого инструмента для этой платформы.",
  "UnknownTopic": "неизвестная тема {value}",
  "UnknownVariablesInTemplate": "Недопустимый аргумент. URL-шаблон \"{value}\" содержит неизвестные переменные: {list}.",
  "UnrecognizedConfigField": "конфигурация содержит следующие нераспознанные поля:",
  "UnrecognizedIdentifier": "Нераспознанное имя идентификатора {value}. Добавьте в список переопределений в файле триады.",
  "UnsupportedFeature": "компонент {feature} передан, но он не является компонентом, поддерживаемым {package_name}.",
  "UnsupportedFeatureSupportsExpression": "{feature_spec} поддерживается только в \"{supports_expression}\", что не соответствует {triplet}. Обычно это означает, что при сборке других платформ возникают известные сбои сборки или проблемы во время выполнения. Чтобы игнорировать это и попытаться выполнить сборку {package_name}, перезапустите vcpkg с параметром \"--allow-unsupported\".",
  "UnsupportedFeatureSupportsExpressionWarning": "{feature_spec} поддерживается только в \"{supports_expression}\", что не соответствует {triplet}. Обычно это означает, что при сборке других платформ возникают известные сбои сборки или проблемы во время выполнения. В любом случае выполняется продолжение из-за параметра \"--allow-unsupported\".",
  "UnsupportedPort": "Порт {package_name} не поддерживается.",
  "UnsupportedPortDependency": "- зависимость {value} не поддерживается.",
  "UnsupportedShortOptions": "краткие параметры не поддерживаются: '{value}'",
  "UnsupportedSupportsExpression": "{package_name} поддерживается только в \"{supports_expression}\", что не соответствует {triplet}. Обычно это означает, что при сборке других платформ возникают известные сбои сборки или проблемы во время выполнения. Чтобы игнорировать это и попытаться выполнить сборку {package_name}, перезапустите vcpkg с параметром \"--allow-unsupported\".",
  "UnsupportedSupportsExpressionWarning": "{package_name} поддерживается только в \"{supports_expression}\", что не соответствует {triplet}. Обычно это означает, что при сборке других платформ возникают известные сбои сборки или проблемы во время выполнения. В любом случае выполняется продолжение из-за параметра \"--allow-unsupported\".",
  "UnsupportedSyntaxInCDATA": "]]> не поддерживается в блоке CDATA",
  "UnsupportedSystemName": "Не удалось сопоставить VCPKG_CMAKE_SYSTEM_NAME \"{system_name}\" с платформой vcvarsall. Поддерживаемые имена систем: \"\", \"Windows\" и \"WindowsStore\".",
  "UnsupportedToolchain": "в триплете {triplet}: Не удалось найти допустимую цепочку инструментов для запрошенной целевой архитектуры {arch}.\nВыбранный экземпляр Visual Studio находится в: {path}\nДоступные сочетания наборов инструментов: {list}",
  "UnsupportedUpdateCMD": "команда обновления сейчас не поддерживает режим манифеста. Вместо этого измените vcpkg.json и запустите установку.",
  "UpdateBaselineAddBaselineNoManifest": "ключ --{option} передан, но нет файла манифеста, в который можно было бы добавить поле \"builtin-baseline\".",
  "UpdateBaselineLocalGitError": "сбой GIT при попытке анализа HEAD локального реестра vcpkg в \"{path}\"",
  "UpdateBaselineNoConfiguration": "невозможно обновить \"vcpkg.json\" или \"vcpkg-configuration.json\": файлы не существуют.",
  "UpdateBaselineNoExistingBuiltinBaseline": "файл манифеста в настоящее время не содержит поле \"builtin-baseline\"; чтобы добавить его, передайте ключ --{option}.",
  "UpdateBaselineNoUpdate": "реестр \"{url}\" не обновлен: \"{value}\"",
  "UpdateBaselineRemoteGitError": "GIT не удалось получить удаленный репозиторий \"{url}\"",
  "UpdateBaselineUpdatedBaseline": "обновленный реестр \"{url}\": базовый план \"{old_value}\" -> \"{new_value}\"",
  "UpgradeInManifest": "Команда обновления сейчас не поддерживает режим манифеста. Вместо этого измените vcpkg.json и запустите установку.",
  "UpgradeRunWithNoDryRun": "Если вы действительно хотите повторно собрать перечисленные выше пакеты, запустите эту команду с параметром --no-dry-run.",
  "UploadedBinaries": "Загружены двоичные файлы {count} {vendor}.",
  "UploadedPackagesToVendor": "Отправлено {count} пакетов из {vendor} за {elapsed}",
  "UploadingBinariesToVendor": "Загрузка двоичных файлов для \"{spec}\" в источник \"{vendor}\" \"{path}\".",
  "UploadingBinariesUsingVendor": "Загрузка двоичных файлов для \"{spec}\" с использованием \"{vendor}\" \"{path}\".",
  "UseEnvVar": "-- Использование {env_var} в переменных окружения.",
  "UserWideIntegrationDeleted": "Общепользовательская интеграция не установлена.",
  "UserWideIntegrationRemoved": "Общепользовательская интеграция удалена.",
  "UsingCommunityTriplet": "-- Использование триплета сообщества {triplet}. Успех этой тройной конфигурации не гарантируется.",
  "UsingManifestAt": "Использование файла манифеста в {path}.",
  "Utf8ConversionFailed": "Не удалось преобразовать в UTF-8",
  "VSExaminedInstances": "Рассмотрены следующие экземпляры Visual Studio:",
  "VSExaminedPaths": "Следующие пути проверены на наличие экземпляров Visual Studio:",
  "VSNoInstances": "Не удалось найти полный экземпляр Visual Studio",
  "VcpkgCeIsExperimental": "vcpkg-ce ('configure environment') является экспериментальной функцией и может измениться в любое время.",
  "VcpkgCommitTableHeader": "Фиксация VCPKG",
  "VcpkgCompletion": "Завершение vcpkg {value} уже импортировано в ваш файл \"{path}\".\nНайдены следующие записи:",
  "VcpkgDisallowedClassicMode": "Не удалось найти манифест (vcpkg.json) над текущим рабочим каталогом.\nЭто распределение vcpkg не имеет экземпляра классического режима.",
  "VcpkgHasCrashed": "Сбой vcpkg. Пожалуйста, создайте проблему на https://github.com/microsoft/vcpkg, содержащую краткую сводку о том, что вы пытались сделать, и следующую информацию.",
  "VcpkgInVsPrompt": "Похоже, vcpkg находится в запросе Visual Studio, предназначенном для {value}, но устанавливается для {triplet}. Попробуйте использовать --triplet {value}-windows или --triplet {value}-uwp.",
  "VcpkgInvalidCommand": "недопустимая команда: {command_name}",
  "VcpkgRegistriesCacheIsNotDirectory": "Значение переменной среды X_VCPKG_REGISTRIES_CACHE не является каталогом: {path}",
  "VcpkgRootRequired": "Для изолированной начальной загрузки необходимо настроить VCPKG_ROOT.",
  "VcpkgRootsDir": "Укажите корневой каталог vcpkg. (по умолчанию:\n'{env_var}')",
  "VcpkgSendMetricsButDisabled": "передан --sendmetrics, но метрики отключены.",
  "VersionCommandHeader": "Версия программы управления пакетами vcpkg {version}\n\nСм. LICENSE.txt для получения сведений о лицензии.",
  "VersionConflictXML": "Ожидаемая версия {path}: [{expected_version}], но была [{actual_version}]. Повторно запустите bootstrap-vcpkg.",
  "VersionConstraintViolated": "ожидалось, что версия зависимости {spec} будет не менее {expected_version}, но текущая версия — {actual_version}.",
  "VersionInvalidDate": "\"{version}\" не является допустимой версией даты. Даты должны быть в формате ГГГГ-ММ-ДД, а неоднозначные значения должны быть положительными целыми числами с разделителями-точками без начальных нулей.",
  "VersionInvalidRelaxed": "\"{version}\" не является допустимой нестрогой версией (semver с произвольным количеством числовых элементов).",
  "VersionInvalidSemver": "\"{version}\" не является допустимой семантической версией, см. <https://semver.org>.",
  "VersionSpecMismatch": "Не удалось загрузить порт, так как версии не согласованы. Файл \"{path}\" содержит версию {actual_version}, но база данных версий указывает, что она должна быть {expected_version}.",
  "VersionTableHeader": "Версия",
  "WaitingForChildrenToExit": "Ожидание завершения дочерних процессов...",
  "WaitingToTakeFilesystemLock": "ожидание блокировки файловой системы в {path}...",
  "WarnOnParseConfig": "Обнаружены следующие предупреждения в конфигурации {path}:",
  "WarningMessage": "Предупреждение: ",
  "WarningMessageMustUsePrintWarning": "Сообщение с именем {value} начинается с предупреждения: вместо этого его необходимо изменить на prepend WarningMessage в коде.",
  "WarningsTreatedAsErrors": "предыдущие предупреждения, интерпретируемые как ошибки",
  "WhileLookingForSpec": "при поиске {spec}:",
  "WindowsOnlyCommand": "Эта команда поддерживает только Windows.",
  "WroteNuGetPkgConfInfo": "Сведения о конфигурации пакета NuGet записаны в {path}",
  "UnrecognizedCommand$": "Нераспознанная команда \"${p0}\"",
  "Use$ToGetHelp": "Используйте ${p0} для получения справки",
  "FatalTheRootFolder$CanNotBeCreated": "Неустранимая ошибка: не удается создать корневую папку \"${p0}\"",
  "FatalTheGlobalConfigurationFile$CanNotBeCreated": "Неустранимая ошибка: не удается создать глобальный файл конфигурации \"${p0}\".",
  "VCPKGCOMMANDWasNotSet": "VCPKG_COMMAND не настроена",
  "RunningVcpkgInternallyReturnedANonzeroExitCode$": "Запуск vcpkg внутренне вернул ненулевой код выхода: ${p0}",
  "failedToDownloadFrom$": "не удалось скачать из ${p0}",
  "failedToDownload$FromAnySource": "не удалось скачать ${p0} из источника",
  "ErrorParsingConditionalDemand$$": "Ошибка анализа условного запроса \"${p0}\"- ${p1}",
  "MissingIdentity$": "Отсутствует удостоверение \"${p0}\"",
  "infoidShouldBeOfTypestringFound$": "Параметр info.id должен иметь тип \"string\", обнаружено \"${p0}\"",
  "MissingVersion$": "Отсутствует версия \"${p0}\"",
  "infoversionShouldBeOfTypestringFound$": "Параметр info.version должен иметь тип \"string\", обнаружено \"${p0}\"",
  "infosummaryShouldBeOfTypestringFound$": "Параметр info.summary должен иметь тип \"string\", обнаружено \"${p0}\"",
  "infodescriptionShouldBeOfTypestringFound$": "Параметр info.description должен иметь тип \"string\", обнаружено \"${p0}\"",
  "infooptionsShouldBeASequenceFound$": "Параметр info.options должен быть последовательностью, обнаружено \"${p0}\"",
  "TheInfoBlockIsDeprecatedForConsistencyWithVcpkgjsonMoveInfoMembersToTheOutside": "Информационный блок не рекомендуется для согласованности с vcpkg.json. Переместите элементы сведений во внешнюю среду.",
  "idShouldBeOfTypestringFound$": "Параметр id должен иметь тип \"string\", обнаружено \"${p0}\"",
  "versionShouldBeOfTypestringFound$": "Параметр version должен иметь тип \"string\", обнаружено \"${p0}\"",
  "summaryShouldBeOfTypestringFound$": "Параметр summary должен иметь тип \"string\", обнаружено \"${p0}\"",
  "descriptionShouldBeOfTypestringFound$": "Параметр description должен иметь тип \"string\", обнаружено \"${p0}\"",
  "optionsShouldBeASequenceFound$": "Параметр options должен быть последовательностью, обнаружено \"${p0}\"",
  "DuplicateKeysDetectedInManifest$": "В манифесте обнаружены повторяющиеся ключи: \"${p0}\"",
  "in$Skipping$BecauseItIsA$": "в ${p0} пропускается ${p1}, так как это ${p2}",
  "DuplicateDefine$DuringActivationNewValueWillReplaceOld": "Дублировать определение ${p0} во время активации. Новое значение заменит старое.",
  "DuplicateToolDeclared$DuringActivationNewValueWillReplaceOld": "Во время активации объявлено дублирующее средство ${p0}. Новое значение заменит старое.",
  "DuplicateAliasDeclared$DuringActivationNewValueWillReplaceOld": "Во время активации объявлен дублирующий псевдоним ${p0}. Новое значение заменит старое.",
  "DuplicateLocationDeclared$DuringActivationNewValueWillReplaceOld": "Во время активации было объявлено дублирующее расположение ${p0}. Новое значение заменит старое.",
  "CircularVariableReferenceDetected$": "Обнаружена циклическая ссылка на переменную: ${p0}",
  "CircularVariableReferenceDetected$$": "Обнаружена циклическая ссылка на переменную: ${p0} - ${p1}",
  "VariableReferenceFound$$$ThatIsReferencingAnUnknownBaseObject": "Обнаружена ссылка на переменную \"$${p0}.${p1}\", которая указывает на неизвестный базовый объект.",
  "UnresolvedVariableReferenceFound$$$DuringVariableSubstitution": "Обнаружена неразрешенная ссылка на переменную ($${p0}.${p1}) во время подстановки переменных.",
  "InvalidPathDoesNotExist$": "Недопустимый путь — не существует: ${p0}",
  "InvalidArtifactId$": "Недопустимый идентификатор артефакта \"${p0}\"",
  "UnknownInstallerType$": "Неизвестный тип установщика ${p0}",
  "WhileResolvingDependenciesOf$$In$CouldNotBeResolvedToARegistry": "Когда выполнялось разрешение зависимостей ${p0}, ${p1} в ${p2} не удалось разрешить в реестр.",
  "WhileResolvingDependenciesOfTheProjectFile$$DidNotSpecifyARegistry": "Когда выполнялось разрешение зависимостей файла проекта ${p0}, ${p1} не указал реестр.",
  "UnableToResolveDependency$In$": "Не удается разрешить зависимость ${p0} в ${p1}.",
  "Artifact": "Артефакт",
  "Version": "Версия",
  "Status": "Состояние",
  "Dependency": "Зависимость",
  "Summary": "Сводка",
  "progressUnknown": "(ход выполнения неизвестен)",
  "verifying": "проверка",
  "downloading$$": "скачивание ${p0} -> ${p1}",
  "unpacking": "распаковка",
  "unpacking$": "распаковка ${p0}",
  "Installing$": "Установка ${p0}...",
  "$AlreadyInstalled": "Уже установлено: ${p0}",
  "Downloading$": "Скачивание ${p0}...",
  "Unpacking$": "Распаковка ${p0}...",
  "ErrorInstalling$$": "Ошибка при установке ${p0} - ${p1}",
  "ExpectedASingleValueFor$FoundMultiple": "Ожидалось одиночное значение для ${p0} — найдено несколько",
  "Synopsis": "Описание",
  "Description": "Описание",
  "Switches": "Переходы",
  "SeeAlso": "См. также",
  "UnableToActivateProject": "Не удается активировать проект",
  "ExpectedASingleValueFor$": "Ожидалось одиночное значение для \"--${p0}\".",
  "Assuming$IsCorrectSupplyAHashInTheArtifactMetadataToSuppressThisMessage": "Предполагается, что \"${p0}\" правильный; предоставьте хэш в метаданных артефакта, чтобы подавить это сообщение.",
  "DownloadedFile$DidNotHaveTheCorrectHash$$": "Скачанный файл \"${p0}\" не содержит правильного хэша (${p1}: ${p2}) ",
  "packageReference$IsNotAValidNugetPackageReferencenameversion": "ссылка на пакет \"${p0}\" не является допустимой ссылкой на пакет NuGet ({name}/{version})",
  "statsMayNotBeUndefined": "статистика не может быть неопределенной",
  "CannotRenameFilesAcrossFilesystems": "Не удается переименовать файлы в разных файловых системах",
  "CopyFailedSource$IsAFolderTarget$IsAFile": "Сбой копирования: источник (${p0}) является папкой, целевой объект (${p1}) является файлом",
  "UriMayNotBeEmpty": "URI не может быть пустым",
  "scheme$AlreadyRegistered": "схема \"${p0}\" уже зарегистрирована",
  "uri$HasNoScheme": "URI ${p0} не содержит схемы",
  "scheme$HasNoFilesystemAssociatedWithIt": "со схемой ${p0} не связана файловая система",
  "mayNotRenameAcrossFilesystems": "не может переименовывать в файловых системах",
  "CouldNotActivateEspidfPythonWasNotFound": "Не удалось активировать esp-idf: Python не найден.",
  "GitIsNotInstalled": "Git не установлен",
  "InitializingRepositoryFolder": "Инициализация папки репозитория",
  "FailedToInitializeGitRepositoryFolder$": "Не удалось инициализировать папку репозитория Git (${p0})",
  "AddingRemote$ToGitRepositoryFolder": "Добавление удаленного ${p0} в папку репозитория Git",
  "FailedToSetGitOrigin$InFolder$": "Не удалось установить источник Git (${p0}) в папке (${p1})",
  "FetchingRemote$ForGitRepositoryFolder": "Извлечение удаленного ${p0} для папки репозитория Git",
  "UnableToFetchGitDataFor$InFolder$": "Не удается получить данные Git для (${p0}) в папке (${p1})",
  "CheckingOutCommit$For$ToGitRepositoryFolder": "Проверка фиксации ${p0} для ${p1} в папке репозитория Git",
  "UnableToCheckoutDataFor$InFolder$": "Не удается извлечь данные для (${p0}) в папке (${p1})",
  "UpdatingSubmodulesForRepository$InTheGitRepositoryFolder": "Обновление подмодулей для репозитория ${p0} в папке репозитория Git",
  "UnableToSetSubmoduleShallowDataFor$InFolder$": "Не удается задать поверхностные данные подмодуля для (${p0}) в папке (${p1})",
  "UnableUpdateSubmodulesFor$InFolder$": "Не удается обновить подмодули для (${p0}) в папке (${p1})",
  "ExpectedCommaFound$": "Ожидалась запятая, найдено ${p0}",
  "ExpectedOneOfNumberBooleanIdentifierStringFoundToken$": "Ожидается одно из {Number, Boolean, Identifier, String}, найден маркер ${p0}",
  "ExpressionSpecifiedNOTTwice": "Выражение указано НЕ дважды",
  "ExpectedCloseParenthesisForExpressionFound$": "Для выражения ожидалась закрывающая круглая скобка, обнаружено ${p0}",
  "ExpectedExpressionFound$": "Ожидаемое выражение, найдено ${p0}",
  "ParseErrorDigitExpected": "ParseError: ожидается цифра (0-9)",
  "ParseErrorHexDigitExpectedFf": "ParseError: ожидается шестнадцатеричная цифра (0-F, 0-f)",
  "ParseErrorBinaryDigitExpected": "ParseError: ожидается двоичная цифра (0,1)",
  "UnexpectedEndOfFileWhileSearchingFor$": "Непредвиденный конец файла при поиске \"${p0}\"",
  "InvalidEscapeSequence": "Недопустимая escape-последовательность",
  "FailedToDeserializeIndex$": "Не удалось десериализовать индекс ${p0}",
  "$MatchedMoreThanOneResult$": "\"${p0}\" соответствует более чем одному результату (${p1}).",
  "UnsupportedRegistryScheme$": "Неподдерживаемая схема реестра \"${p0}\"",
  "TriedToAdd$As$But$IsAlready$": "Попытка добавить ${p0} как ${p1}, но ${p2} уже ${p3}.",
  "UnknownRegistry$in$TheFollowingAreKnown$": "Неизвестный реестр ${p0} (в ${p1}). Известно следующее: ${p2}",
  "UpdatingRegistryDataFrom$": "Обновление данных реестра из ${p0}",
  "$MustBeAString": "${p0} должен быть строкой",
  "$MustBeABool": "${p0} должно быть логическим",
  "$MustBeAnArrayOfStringsOrUnset": "${p0} должен быть массивом строк или не задан",
  "FoundAMismatched$In$ForALiteral$Use$$Instead": "Обнаружено несоответствие ${p0} в \"${p1}\". Вместо этого для литерала ${p2} используйте ${p3}${p4}.",
  "CouldNotFindAValueFor$In$ToWriteTheLiteralValueUse$Instead": "Не удалось найти значение для {${p0}} в \"${p1}\". Чтобы записать литерал, используйте вместо этого \"{{${p2}}}\".",
  "MatchedMoreThanOneInstallBlock$": "Соответствует более чем одному блоку установки [${p0}]",
  "AcquiresEverythingReferencedByAProjectWithoutActivating": "Получает все, на что ссылается проект, без активации",
  "ThisAllowsTheConsumerToPredownloadToolsRequiredForAProject": "Это позволяет потребителю предварительно скачать инструменты, необходимые для проекта.",
  "UnableToFindProjectInFolderorParentFoldersFor$": "Не удается найти проект в папке (или родительских папках) для ${p0}",
  "UnableToAcquireProject": "Не удается получить проект",
  "AcquireArtifactsInTheRegistry": "Получение артефактов в реестре",
  "ThisAllowsTheConsumerToAcquiredownloadAndUnpackArtifactsArtifactsMustBeActivatedToBeUsed": "Это позволяет потребителю приобретать (скачивать и распаковывать) артефакты. Артефакты должны быть активированы для использования",
  "NoArtifactsSpecified": "Артефакты не указаны",
  "MultiplePackagesSpecifiedButNotAnEqualNumberOf$Switches": "Указано несколько пакетов, но не равное число коммутаторов ${p0}",
  "NoArtifactsAreAcquired": "Артефакты не приобретены",
  "AllArtifactsAreAlreadyInstalled": "Все артефакты уже установлены",
  "$ArtifactsInstalledSuccessfully": "Артефакты ${p0} успешно установлены",
  "InstallationFailedStopping": "Сбой установки — остановка",
  "ActivatesTheToolsRequiredForAProject": "Активирует инструменты, необходимые для проекта",
  "ThisAllowsTheConsumerToActivateTheToolsRequiredForAProjectIfTheToolsAreNotAlreadyInstalledThisWillForceThemToBeDownloadedAndInstalledBeforeActivation": "Это позволяет клиенту активировать средства, необходимые для проекта. Если средства еще не установлены, то перед активацией их нужно будет скачать и установить.",
  "Project$Activated": "Проект ${p0} активирован",
  "FailedToActivateProject$": "Не удалось активировать проект ${p0}",
  "AddsAnArtifactToTheProject": "Добавляет артефакт в проект",
  "ThisAllowsTheConsumerToAddAnArtifactToTheProjectThisWillActivateTheProjectAsWell": "Это позволяет потребителю добавить артефакт в проект. Это также активирует проект.",
  "MultipleArtifactsSpecifiedButNotAnEqualNumberOf$Switches": "Указано несколько артефактов, но не равное число переключателей ${p0}",
  "TriedToAddAnArtifact$$ButCouldNotDetermineTheRegistryToUse": "Попытка добавить артефакт [${p0}]:${p1}, но не удалось определить используемый реестр.",
  "TriedToAddRegistry$As$ButItWasAlready$PleaseAdd$ToThisProjectManuallyAndReattempt": "Попытка добавить реестр ${p0} как ${p1}, но он уже был ${p2}. Добавьте ${p3} в этот проект вручную и повторите попытку.",
  "RunvcpkgActivateToApplyToTheCurrentTerminal": "Запустите команду \\\"vcpkg activate\\\", чтобы применить к текущему терминалу",
  "ManagesTheDownloadCache": "Управляет кэшем загрузки",
  "DownloadsFolderCleared$": "Папка загрузок очищена (${p0}) ",
  "cleansOutEverythingcacheInstalledArtifacts": "очищает все (кэш, установленные артефакты)",
  "cleansOutTheDownloadsCache": "очищает кэш загрузки",
  "removesAllTheArtifactsThatAreInstalled": "удаляет все установленные артефакты",
  "cleansUp": "очищает",
  "AllowsTheUserToCleanOutTheCacheInstalledArtifactsEtc": "Позволяет пользователю очистить кэш, установленные артефакты и т. д.",
  "DeactivatingProject": "Отключение проекта",
  "InstalledArtifactFolderCleared$": "Папка с установленными артефактами очищена (${p0}) ",
  "CacheFolderCleared$": "Папка кэша очищена (${p0}) ",
  "DeactivatesTheCurrentSession": "Деактивирует текущий сеанс",
  "ThisAllowsTheConsumerToRemoveEnvironmentSettingsForTheCurrentlyActiveSession": "Это позволяет клиенту удалять параметры среды для текущего активного сеанса.",
  "DeactivatingProject$": "Отключение проекта ${p0}",
  "DeletesAnArtifactFromTheArtifactFolder": "Удаляет артефакт из папки артефактов",
  "ThisAllowsTheConsumerToRemoveAnArtifactFromDisk": "Это позволяет потребителю удалить артефакт с диска.",
  "DeletingArtifact$From$": "Удаление артефакта ${p0} из ${p1}",
  "FindArtifactsInTheRegistry": "Поиск артефактов в реестре",
  "ThisAllowsTheUserToFindArtifactsBasedOnSomeCriteria": "Это позволяет пользователю находить артефакты на основе некоторых условий.",
  "NoArtifactsFoundMatchingCriteria$": "Не найдены артефакты, соответствующие критериям: ${p0}",
  "GeneratesMSBuildPropertiesForAnActivationWithoutDownloadingAnythingForAProject": "Создает свойства MSBuild для активации без скачивания чего-либо для проекта",
  "generatemsbuildpropsRequiresmsbuildprops": "generate-msbuild-props требует --msbuild-props",
  "theNameOfTheCommandForWhichYouWantHelp": "имя команды, по которой требуется справка",
  "getHelpOn$OrOneOfTheCommands": "получить справку по ${p0} или одной из команд",
  "GetsDetailedHelpOn$OrOneOfTheCommands": "Получает подробную справку по ${p0} или по одной из команд",
  "Arguments": "Аргументы:",
  "Use$ToGetTheListOfAvailableCommands": "Используйте ${p0} для получения списка доступных команд",
  "Usage": "Использование",
  "$COMMANDargumentsswitches": "${p0} COMMAND <arguments> [--switches]",
  "Available$Commands": "Доступные команды ${p0}:",
  "ListsTheArtifacts": "Перечисляет артефакты",
  "ThisAllowsTheConsumerToListArtifacts": "Это позволяет потребителю перечислить артефакты.",
  "regenerateTheIndexForARegistry": "повторно создать индекс для реестра",
  "ThisAllowsTheUserToRegenerateThe$FilesForA$Registry": "Это позволяет пользователю повторно создавать файлы ${p0} для реестра ${p1}.",
  "RegeneratingIndexFor$": "Повторное индексирование для ${p0}",
  "RegenerationCompleteIndexContains$MetadataFiles": "Восстановление завершено. Индекс содержит файлы метаданных ${p0}",
  "Registry$ContainsNoArtifacts": "Реестр: \"${p0}\" не содержит артефактов.",
  "error$": "ошибка ${p0}: ",
  "RemovesAnArtifactFromAProject": "Удаляет артефакт из проекта",
  "ThisAllowsTheConsumerToRemoveAnArtifactFromTheProjectForcesReactivationInThisWindow": "Это позволяет потребителю удалить артефакт из проекта. Принудительно выполняет повторную активацию в этом окне.",
  "Removing$FromProjectManifest": "Удаление ${p0} из манифеста проекта",
  "unableToFindArtifact$InTheProjectManifest": "не удается найти артефакт ${p0} в манифесте проекта",
  "updateTheRegistryFromTheRemote": "обновить реестр из удаленного расположения",
  "ThisDownloadsTheLatestContentsOfTheRegistryFromTheRemoteService": "Это приведет к скачиванию последнего содержимого реестра из удаленной службы.",
  "DownloadingRegistryData": "Скачивание данных реестра",
  "Updated$RegistryContains$MetadataFiles": "Обновлено ${p0}. Реестр содержит файлы метаданных ${p1}",
  "UnableToDownloadRegistrySnapshot": "Не удается скачать моментальный снимок реестра",
  "UnableToFindRegistry$": "Не удается найти реестр ${p0}",
  "ArtifactRegistryDataIsNotLoaded": "Данные реестра артефактов не загружены",
  "AttemptingToUpdateArtifactRegistry": "Попытка обновить реестр артефактов",
  "UnableToLoadRegistryIndex": "Не удается загрузить индекс реестра",
  "InstantlyActivatesAnArtifactOutsideOfTheProject": "Мгновенно активирует артефакт вне проекта",
  "ThisWillInstantlyActivateAnArtifact": "Это мгновенно активирует артефакт.",
  "NoArtifactsAreBeingAcquired": "Артефакты не приобретаются",
  "ActivatingIndividualArtifacts": "Активация отдельных артефактов",
  "removesAllFilesInTheLocalCache": "удаляет все файлы в локальном кэше",
  "enablesDebugModeDisplaysInternalMesssagesAboutHow$Works": "включает режим отладки, отображает внутренние сообщения о том, как работает ${p0}",
  "proceedsWithThepotentiallyDangerousActionWithoutConfirmation": "выполняется (потенциально опасное) действие без подтверждения",
  "showsTheinstalledArtifacts": "отображает _установленные_ артефакты",
  "DumpEnvironmentVariablesAndOtherPropertiesToAJsonFileWithThePathProvidedByTheUser": "Дамп переменных среды и других свойств в файл JSON с путем, предоставленным пользователем.",
  "FullPathToTheFileInWhichMSBuildPropertiesWillBeWritten": "Полный путь к файлу, в который будут записаны свойства MSBuild.",
  "ApplyAnyDeprecationFixups": "Примените любые исправления устаревания.",
  "overrideThePathToTheProjectFolder": "переопределить путь к папке проекта",
  "UnableToFindProjectEnvironment$": "Не удается найти среду проекта ${p0}",
  "enablesVerboseModeDisplaysVerboseMesssagesAboutTheProcess": "включает подробный режим, отображает подробные сообщения о процессе",
  "aVersionOrVersionRangeToMatch": "версия или диапазон версий для сопоставления"
}
