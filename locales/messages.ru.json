{
  "AddArtifactOnlyOne": "\"{command_line}\" может добавлять только один артефакт за раз.",
  "AddCommandFirstArg": "Первым добавляемым параметром должен быть \"артефакт\" или \"порт\".",
  "AddFirstArgument": "Первым аргументом для \"{command_line}\" должен быть 'artifact' или 'port'.",
  "AddPortRequiresManifest": "\"{command_line}\" требуется активный файл манифеста.",
  "AddPortSucceeded": "Порты успешно добавлены в файл vcpkg.json.",
  "AddTripletExpressionNotAllowed": "тройные выражения здесь не допускаются. Вы можете изменить `{package_name}:{triplet}` на `{package_name}`.",
  "AddVersionAddedVersionToFile": "добавлена версия {version} в {path}",
  "AddVersionCommitChangesReminder": "Вы не забыли зафиксировать изменения?",
  "AddVersionCommitResultReminder": "Не забудьте зафиксировать результат!",
  "AddVersionDetectLocalChangesError": "пропуск обнаружения локальных изменений из-за непредвиденного формата в выходных данных состояния git",
  "AddVersionFileNotFound": "не удалось найти необходимый файл {path}",
  "AddVersionFormatPortSuggestion": "Выполните \"{command_line}\", чтобы форматировать файл",
  "AddVersionIgnoringOptionAll": "пропуск --{option}, так как указан аргумент имени порта",
  "AddVersionLoadPortFailed": "не удалось загрузить порт {package_name}",
  "AddVersionNewFile": "(новый файл)",
  "AddVersionNewShaIs": "новый SHA: {value}",
  "AddVersionNoFilesUpdated": "Файлы не были обновлены",
  "AddVersionNoFilesUpdatedForPort": "Для {package_name} файлы не были обновлены",
  "AddVersionNoGitSha": "не удалось получить SHA для порта {package_name}",
  "AddVersionOldShaIs": "старый SHA: {value}",
  "AddVersionOverwriteOptionSuggestion": "Чтобы обойти эту проверку, используйте --{option}",
  "AddVersionPortDoesNotExist": "{package_name} не существует",
  "AddVersionPortFilesShaChanged": "зарегистрированные файлы для {package_name} изменились, но версия не обновлена",
  "AddVersionPortFilesShaUnchanged": "зарегистрированные файлы для {package_name} не изменялись с версии {version}",
  "AddVersionPortHasImproperFormat": "Неверный формат {package_name}",
  "AddVersionSuggestNewVersionScheme": "Используйте схему \"{new_scheme}\" вместо \"{old_scheme}\" в порте \"{package_name}\".\nЧтобы отключить эту проверку, используйте --{option}.",
  "AddVersionUnableToParseVersionsFile": "не удалось проанализировать файл версий {path}",
  "AddVersionUncommittedChanges": "для {package_name} есть незафиксированные изменения",
  "AddVersionUpdateVersionReminder": "Вы не забыли обновить версию или версию порта?",
  "AddVersionUseOptionAll": "Чтобы одновременно обновить все версии портов, для {command_name} без аргументов требуется передача параметра --{option}",
  "AddVersionVersionAlreadyInFile": "версия {version} уже находится в {path}",
  "AddVersionVersionIs": "версия: {version}",
  "AddingCompletionEntry": "Добавление записи завершения vcpkg в {path}.",
  "AllFormatArgsRawArgument": "строка формата \"{value}\" содержит необработанный аргумент формата",
  "AllFormatArgsUnbalancedBraces": "несбалансированная фигурная скобка в строке формата \"{value}\"",
  "AllPackagesAreUpdated": "Все установленные пакеты обновлены с локальным профилем.",
  "AlreadyInstalled": "Уже установлено: {spec}",
  "AlreadyInstalledNotHead": "{spec} уже установлено -- сборка не выполняется из HEAD",
  "AnotherInstallationInProgress": "На машине выполняется другая установка, которая находится в спящем режиме в течение 6 секунд, прежде чем повторить попытку.",
  "AppliedUserIntegration": "Применена общепользовательская интеграция для этого корня vcpkg.",
  "ArtifactsOptionIncompatibility": "--{option} не влияет на поиск артефакта.",
  "AssetSourcesArg": "Добавление источников для кэширования ресурсов. См. раздел 'vcpkg help assetcaching'.",
  "AttemptingToFetchPackagesFromVendor": "Попытка получить {count} пакетов от {vendor}",
  "AuthenticationMayRequireManualAction": "Один или несколько поставщиков учетных данных {vendor} запросили действие вручную. Добавьте двоичный источник «интерактивный», чтобы обеспечить интерактивность.",
  "AutoSettingEnvVar": "-- Автоматическая установка переменных среды {env_var} в \"{url}\".",
  "AutomaticLinkingForMSBuildProjects": "Все проекты MSBuild C++ теперь могут #include любые установленные библиотеки. Связывание будет выполнено автоматически. Установка новых библиотек сделает их мгновенно доступными.",
  "BinarySourcesArg": "Добавьте источники для бинарного кэширования. См. \"vcpkg help binarycaching\".",
  "BothYesAndNoOptionSpecifiedError": "не может одновременно указывать параметры --no-{option} и --{option}.",
  "BuildAlreadyInstalled": "{spec} — уже установлено. Удалите {spec}, прежде чем выполнять сборку.",
  "BuildDependenciesMissing": "Для команды сборки необходимо установить все зависимости.\nОтсутствуют следующие зависимости:",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "СКАЧАНО",
  "BuildResultExcluded": "ИСКЛЮЧЕНО",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "УДАЛЕНО",
  "BuildResultSucceeded": "УСПЕШНО",
  "BuildResultSummaryHeader": "СВОДКА ПО {triplet}",
  "BuildResultSummaryLine": "{build_result}: {count}",
  "BuildTreesRootDir": "(Экспериментально) Укажите корневой каталог buildtrees.",
  "BuildTroubleshootingMessage1": "Используйте последние файлы портов с \"git pull\" и \"vcpkg update\".\nЗатем проверьте наличие известных проблем в:",
  "BuildTroubleshootingMessage2": "Вы можете отправить новую проблему в:",
  "BuildTroubleshootingMessage3": "Добавьте \"Ошибка сборки [{package_name}]\" в название отчета об ошибке, следующие сведения о версии в описании ошибки и вложите любые релевантные журналы ошибок из раздела выше.",
  "BuildTroubleshootingMessage4": "Вы также можете использовать предварительно заполненный шаблон из {path}.",
  "BuildingFromHead": "Сборка {spec} из HEAD...",
  "BuildingPackage": "Сборка {spec}...",
  "BuildingPackageFailed": "сбой {spec} при построении: {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "из-за следующих отсутствующих зависимостей:",
  "CMakeTargetsUsage": "{package_name} предоставляет целевые объекты CMake:",
  "CMakeTargetsUsageHeuristicMessage": "# этот элемент создан эвристически и может быть неверным",
  "CMakeToolChainFile": "В проектах CMake следует использовать: \"-DCMAKE_TOOLCHAIN_FILE={path}\"",
  "ChecksFailedCheck": "сбой vcpkg; дополнительные сведения недоступны.",
  "ChecksUnreachableCode": "достигнут недостижимый код",
  "ChecksUpdateVcpkg": "обновление vcpkg путем повторного запуска bootstrap-vcpkg может устранить этот сбой.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing-passing можно использовать, только если указан базовый план с помощью --ci-baseline.",
  "CiBaselineDisallowedCascade": "Регрессия: значение {spec} является каскадным, но необходима его передача ({path}).",
  "CiBaselineRegression": "РЕГРЕССИЯ: {spec} с ошибкой {build_result}. Если требуется, добавьте {spec}=fail в {path}.",
  "CiBaselineRegressionHeader": "РЕГРЕССИИ:",
  "CiBaselineUnexpectedPass": "ПЕРЕДАЧА, УДАЛЕНИЕ ИЗ СПИСКА СБОЕВ: {spec} ({path}).",
  "ClearingContents": "Очистка содержимого {path}",
  "CmakeTargetsExcluded": "примечание. Дополнительные целевые объекты ({count}) не отображаются.",
  "CommandFailed": "команда:\n{command_line}\nсбой со следующими результатами:",
  "CompressFolderFailed": "Сбой сжатия папки \"{path}\":",
  "ConflictingValuesForOption": "Для \"--{option}\" указаны конфликтующие щначения.",
  "ConstraintViolation": "Обнаружено нарушение ограничения:",
  "ControlAndManifestFilesPresent": "Файл манифеста и файл CONTROL существуют в каталоге порта: {path}",
  "CopyrightIsDir": "\"{path}\", являющийся каталогом, не рекомендуется.",
  "CorruptedDatabase": "База данных повреждена.",
  "CouldNotDeduceNugetIdAndVersion": "Не удалось определить идентификатор nuget и версию по имени файла: {path}",
  "CreateFailureLogsDir": "Создание выходного каталога для журналов сбоев: {path}.",
  "CreatedNuGetPackage": "Создан nupkg: \"{путь}\"",
  "CurlReportedUnexpectedResults": "Служба curl сообщила о неожиданных результатах для vcpkg и что vcpkg не может продолжить работу.\nПожалуйста, обратитесь к следующему тексту для получения конфиденциальной информации и откройте на GitHub Microsoft/vcpkg проблему, чтобы решить этот вопрос!\n: {command_line}\n=== curl output ===\n{actual}\n=== end curl output ===",
  "DateTableHeader": "Дата",
  "DefaultBrowserLaunched": "Браузер по умолчанию запущен на {url}.",
  "DefaultFlag": "По умолчанию включено --{option}.",
  "DefaultPathToBinaries": "В соответствии с настройками вашей системы путь по умолчанию для хранения двоичных файлов — \"{path}\". Это консультируется с %LOCALAPPDATA%/%APPDATA% в Windows и $XDG_CACHE_HOME или $HOME на других платформах.",
  "DetectCompilerHash": "Обнаружение хэша компилятора для триплета {triplet}...",
  "DocumentedFieldsSuggestUpdate": "Если это задокументированные поля, которые следует распознать, попробуйте обновить средство VCPKG.",
  "DownloadAvailable": "Доступна загружаемая копия этого инструмента, которую можно использовать, отключив {env_var}.",
  "DownloadRootsDir": "Укажите корневой каталог загрузки.\n(по умолчанию: {env_var})",
  "DownloadedSources": "Скачанные источники для {spec}",
  "DownloadingVcpkgCeBundle": "Скачивание пакета vcpkg-ce {version}...",
  "DownloadingVcpkgCeBundleLatest": "Скачивание последнего пакета vcpkg-ce...",
  "DownloadingVcpkgStandaloneBundle": "Скачивание изолированного пакета {version}.",
  "DownloadingVcpkgStandaloneBundleLatest": "Скачивание новейшего изолированного пакета.",
  "DuplicateCommandOption": "Параметр --{option} можно передать только один раз.",
  "DuplicateOptions": "'--{value}' указано несколько раз.",
  "ElapsedForPackage": "Затраченное время на обработку {spec}: {elapsed}",
  "ElapsedTimeForChecks": "Время определения успешного выполнения или сбоя: {elapsed}",
  "EmailVcpkgTeam": "Отправьте электронное письмо с любым отзывом на адрес {url}.",
  "EmptyArg": "Параметр --{option} должен быть передан непустым аргументом.",
  "EmptyLicenseExpression": "Выражение лицензии SPDX было пустым.",
  "EnvStrFailedToExtract": "не удалось развернуть строку среды:",
  "ErrorDetectingCompilerInfo": "при обнаружении сведений о компиляторе:\nсодержимое файла журнала в \"{path}\":",
  "ErrorIndividualPackagesUnsupported": "В режиме манифеста \"установка vcpkg\" не поддерживает отдельные аргументы пакета. \nЧтобы установить дополнительные пакеты, отредактируете vcpkg.json и запустите \"vcpkg install\" без аргументов пакета.",
  "ErrorInvalidClassicModeOption": "Параметр --{option} не поддерживается в классическом режиме, и манифест не найден.",
  "ErrorInvalidManifestModeOption": "Параметр --{option} не поддерживается в режиме манифеста.",
  "ErrorMessage": "ошибка: ",
  "ErrorMessageMustUsePrintError": "Сообщение с именем {value} начинается с ошибки: вместо этого его необходимо изменить на prepend ErrorMessage в коде.",
  "ErrorMissingVcpkgRoot": "Не удалось обнаружить vcpkg-root. Если вы пытаетесь использовать созданную копию VCPKG, необходимо определить переменную среду VCPKG_ROOT, чтобы она указывала на клонированную копию https://github.com/Microsoft/vcpkg.",
  "ErrorNoVSInstance": "в триплете {triplet}: Не удается найти допустимый экземпляр Visual Studio",
  "ErrorNoVSInstanceAt": "в \"{path}\"",
  "ErrorNoVSInstanceFullVersion": "с префиксом версии набора инструментов {version}",
  "ErrorNoVSInstanceVersion": "с версией набора инструментов {version}",
  "ErrorParsingBinaryParagraph": "при анализе абзаца двоичного файла для {spec}",
  "ErrorRequireBaseline": "для взаимодействия с портами для этого экземпляра vcpkg требуется манифест с указанным базовым показателем. Пожалуйста, добавьте \"builtin-baseline\" или \"vcpkg-configuration.json\" в манифест, который переопределяет реестр по умолчанию.",
  "ErrorRequirePackagesList": "Для установки vcpkg требуется список пакетов для установки в классическом режиме.",
  "ErrorUnableToDetectCompilerInfo": "vcpkg не удалось обнаружить сведения об активном компиляторе. См. выше вывод об ошибке CMake.",
  "ErrorVcvarsUnsupported": "в триплете {triplet}: Использование запроса разработчика Visual Studio не поддерживается на узлах, отличных от Windows. \nОпределите \"VCPKG_CMAKE_SYSTEM_NAME\" или \"VCPKG_CHAINLOAD_TOOLCHAIN_FILE\" в файле триплета.",
  "ErrorVsCodeNotFound": "Visual Studio Code не найден, а переменная среды {env_var} не задана или недействительна.",
  "ErrorVsCodeNotFoundPathExamined": "Рассмотрены следующие пути:",
  "ErrorWhileParsing": "При анализе {path} возникли ошибки.",
  "ErrorWhileWriting": "Произошла ошибка при записи {path}",
  "ErrorsFound": "Обнаружены следующие ошибки:",
  "ExceededRecursionDepth": "Превышена глубина рекурсии.",
  "ExcludedPackage": "Исключено: {spec}",
  "ExcludedPackages": "Исключены следующие пакеты:",
  "ExpectedCascadeFailure": "Ожидаемое количество каскадных сбоев: {expected}, фактическое количество: {actual}.",
  "ExpectedCharacterHere": "здесь ожидается \"{expected}\"",
  "ExpectedFailOrSkip": "Ожидалось значение fail, skip или pass.",
  "ExpectedPortName": "здесь ожидается имя порта",
  "ExpectedTripletName": "здесь ожидается имя триплета",
  "ExpectedValueForOption": "Ожидаемое значение после --{option}.",
  "ExportingPackage": "Экспорт {package_name}...",
  "ExtendedDocumentationAtUrl": "Расширенная документация доступна по адресу '{url}'.",
  "FailedToExtract": "Сбой извлечения \" {path}\":",
  "FailedToFindPortFeature": "Не удалось найти {feature} в {spec}.",
  "FailedToFormatMissingFile": "Нет файлов для форматирования.\nПередайте либо --all, либо явные файлы для форматирования или преобразования.",
  "FailedToLoadInstalledManifest": "Не удалось загрузить файл управления или MNAIFEST для {spec} из-за следующей ошибки. Удалите {spec} и повторите попытку.",
  "FailedToLocateSpec": "Сбой поиска спецификации в графе: {spec}",
  "FailedToObtainDependencyVersion": "Не удается найти нужную версию зависимостей.",
  "FailedToObtainLocalPortGitSha": "Не удалось получить Git SHA для локальных портов.",
  "FailedToObtainPackageVersion": "Не удается найти нужную версию пакета.",
  "FailedToParseCMakeConsoleOut": "Сбой анализа выходных данных консоли CMake для поиска маркеров начала или конца блока.",
  "FailedToParseControl": "Не удалось проанализировать управляющий файл: {path}",
  "FailedToParseJson": "Не удалось проанализировать файл JSON: {path}",
  "FailedToParseManifest": "Не удалось проанализировать файл манифеста: {path}",
  "FailedToParseSerializedBinParagraph": "[проверка работоспособности] Не удалось проанализировать абзац сериализованного двоичного файла.\nОткройте проблему на странице https://github.com/microsoft/vcpkg со следующими выходными данными:\n{error_msg}\nАбзац сериализованного двоичного файла:",
  "FailedToProvisionCe": "Не удалось подготовить vcpkg-ce.",
  "FailedToRead": "Не удалось прочитать {path}: {error_msg}",
  "FailedToReadParagraph": "Не удалось прочитать абзацы из {path}",
  "FailedToRemoveControl": "Не удалось удалить файл управления {path}",
  "FailedToRunToolToDetermineVersion": "Сбой запуска \"{path}\" для определения версии {tool_name}.",
  "FailedToStoreBackToMirror": "не удалось сохранить обратно в зеркале:",
  "FailedToStoreBinaryCache": "Сбой сохранения двоичного кэша {path}",
  "FailedToWriteManifest": "Не удалось записать файл манифеста {path}",
  "FailedVendorAuthentication": "Одному или нескольким поставщикам учетных данных {vendor} не удалось пройти аутентификацию. См. «{url}» для получения дополнительной информации о том, как предоставить учетные данные.",
  "FeedbackAppreciated": "Спасибо за отзыв!",
  "FishCompletion": "Завершение vcpkg fish уже полностью добавлено в \"{path}\".",
  "FollowingPackagesMissingControl": "Следующие пакеты не содержат допустимый CONTROL или vcpkg.json.",
  "FollowingPackagesNotInstalled": "Следующие пакеты не установлены.",
  "FollowingPackagesUpgraded": "Следующие пакеты обновлены.",
  "ForceSystemBinariesOnWeirdPlatforms": "Переменная среды VCPKG_FORCE_SYSTEM_BINARIES должна быть задана на платформах ARM, s390x и ppc64le.",
  "FormattedParseMessageExpression": "в выражении: {value}",
  "GenerateMsgErrorParsingFormatArgs": "строка формата синтаксического анализа для {value}:",
  "GenerateMsgIncorrectComment": "сообщение {value} содержит неправильный комментарий:",
  "GenerateMsgNoArgumentValue": "{{{value}}} указано в комментарии, но не использовалось в сообщении.",
  "GenerateMsgNoCommentValue": "{{{value}}} использовалось в сообщении, но не прокомментировано.",
  "GitCommandFailed": "не удалось выполнить: {command_line}",
  "GitStatusOutputExpectedFileName": "требуется имя файла",
  "GitStatusOutputExpectedNewLine": "ожидалась новая строка",
  "GitStatusOutputExpectedRenameOrNewline": "ожидался переименованный файл или новые строки",
  "GitStatusUnknownFileStatus": "неизвестное состояние файла: {value}",
  "GitUnexpectedCommandOutput": "непредвиденные выходные данные git",
  "GraphCycleDetected": "Обнаружен цикл в графе в {package_name}:",
  "HashFileFailureToRead": "сбой при чтении файла \"{path}\" для хеширования: ",
  "HeaderOnlyUsage": "{package_name} является заголовочным и может использоваться из CMake через:",
  "HelpContactCommand": "Отображение контактных данных для отправки отзыва.",
  "HelpCreateCommand": "Создайте новый порт.",
  "HelpDependInfoCommand": "Отобразить список зависимостей для портов.",
  "HelpEditCommand": "Откройте порт для редактирования (используйте переменную среды \"{env_var}\", чтобы установить программу-редактор, по умолчанию 'code').",
  "HelpEnvCommand": "Создает среду чистой оболочки для разработки или компиляции.",
  "HelpExampleCommand": "Дополнительную справку (включая примеры) см. в прилагаемой папке README.md и docs.",
  "HelpExportCommand": "Экспортирует пакет.",
  "HelpFormatManifestCommand": "Форматирует все файлы vcpkg.json. Запустите это перед фиксацией в vcpkg.",
  "HelpHashCommand": "Хешировать файл по определенному алгоритму, по умолчанию SHA512.",
  "HelpHistoryCommand": "(Экспериментально) Показать журнал версий пакета.",
  "HelpInitializeRegistryCommand": "Инициализирует реестр в каталоге <path>.",
  "HelpInstallCommand": "Установка пакета",
  "HelpListCommand": "Список установленных пакетов.",
  "HelpOwnsCommand": "Поиск файлов в установленных пакетах.",
  "HelpRemoveCommand": "Удалить пакет.",
  "HelpRemoveOutdatedCommand": "Удалите все устаревшие пакеты.",
  "HelpResponseFileCommand": "Укажите файл отклика для предоставления дополнительных параметров.",
  "HelpSearchCommand": "Поиск пакетов, доступных для сборки.",
  "HelpTopicCommand": "Отображение справки по определенной теме.",
  "HelpTopicsCommand": "Показать список разделов справки.",
  "HelpUpdateCommand": "Список пакетов, которые можно обновить.",
  "HelpUpgradeCommand": "Пересоберите все устаревшие пакеты.",
  "HelpVersionCommand": "Отображение сведений о версии.",
  "IllegalFeatures": "Список функций не разрешен в этом контексте",
  "IllegalPlatformSpec": "Квалификатор платформы не разрешен в этом контексте",
  "ImproperShaLength": "Длина SHA512 должна составлять 128 шестнадцатеричных символов: {value}",
  "IncorrectNumberOfArgs": "'{command_name}' требует '{ожидаемых}' аргументов, но были предоставлены '{actual}'.",
  "InfoSetEnvVar": "Вы также можете задать переменную среды '{env_var}' в выбранном редакторе.",
  "InitRegistryFailedNoRepo": "Не удалось создать реестр в {path}: это не корневой каталог репозитория Git.\nИспользуйте команду \"git init {command_line}\", чтобы создать репозиторий Git в этой папке.",
  "InstallPackageInstruction": "Открыв проект, перейдите в Инструменты->Диспетчер пакетов NuGet->Консоль диспетчера пакетов и вставьте:\n Install-Package \"{value}\" -Source \"{path}\"",
  "InstallRootDir": "(Экспериментально) Укажите корневой каталог установки.",
  "InstallWithSystemManager": "Этот инструмент можно установить с помощью системного диспетчера пакетов.",
  "InstallWithSystemManagerMono": "Пользователям Ubuntu 18.04 может потребоваться более новая версия Mono, доступная по адресу {url}.",
  "InstallWithSystemManagerPkg": "Этот инструмент можно установить с помощью диспетчера системных пакетов ({command_line}).",
  "InstalledPackages": "Следующие пакеты уже установлены:",
  "InstalledRequestedPackages": "Все запрашиваемые пакеты сейчас установлены.",
  "InstallingFromLocation": "-- Установка порта из расположения: {путь}",
  "InstallingPackage": "Выполняется установка {action_index}/{count} {spec}…",
  "IntegrationFailed": "Интеграция не применена.",
  "InternalCICommand": "vcpkg ci — внутренняя команда, она может измениться несовместимым образом или может быть удалена в любое время.",
  "InternalErrorMessage": "внутренняя ошибка: ",
  "InternalErrorMessageContact": "Откройте проблему на странице https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug с подробными инструкциями по ее воспроизведению.",
  "InvalidArgMustBeAnInt": "Значение --{option} должно быть целым числом.",
  "InvalidArgMustBePositive": "Значение --{option} должно быть неотрицательным.",
  "InvalidArgument": "недопустимый аргумент.",
  "InvalidArgumentRequiresAbsolutePath": "недопустимый аргумент: аргументы пути двоичной config \"{binary_source}\" для двоичных строк config должны быть абсолютными",
  "InvalidArgumentRequiresBaseUrl": "недопустимый аргумент: для двоичной config \"{binary_source}\" в качестве первого аргумента требуется базовый URL-адрес {base_url}",
  "InvalidArgumentRequiresBaseUrlAndToken": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется по крайней мере базовый URL-адрес и маркер SAS",
  "InvalidArgumentRequiresNoneArguments": "недопустимый аргумент: двоичная config \"{binary_source}\" не принимает аргументы",
  "InvalidArgumentRequiresOneOrTwoArguments": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется 1 или 2 аргумента",
  "InvalidArgumentRequiresPathArgument": "недопустимый аргумент: двоичная конфигурация '{binary_source}' требует по крайней мере один аргумент пути",
  "InvalidArgumentRequiresPrefix": "недопустимый аргумент: двоичная конфигурация '{binary_source}' требует по крайней мере один префикс",
  "InvalidArgumentRequiresSingleArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" не принимает более 1 аргумента",
  "InvalidArgumentRequiresSingleStringArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" ожидает однострочного аргумента",
  "InvalidArgumentRequiresSourceArgument": "недопустимый аргумент: двоичная конфигурация '{binary_source}' требует по крайней мере один исходный аргумент",
  "InvalidArgumentRequiresTwoOrThreeArguments": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется 2 или 3 аргумента",
  "InvalidArgumentRequiresValidToken": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется маркер SAS без предварительного значения \"?\" в качестве второго аргумента",
  "InvalidBuildInfo": "Недопустимый файл BUILD_INFO для пакета: {error_msg}",
  "InvalidCommandArgSort": "Значением --sort должен быть один из следующих вариантов: \"lexicographical\", \"topographical\", \"reverse\".",
  "InvalidCommitId": "Недопустимый идентификатор фиксации {value}",
  "InvalidFilename": "Имя файла не может содержать недопустимые символы {value}, но использовалось имя {path}",
  "InvalidFormatString": "Недопустимая строка формата: {actual}",
  "InvalidLinkage": "Недопустимый тип связи {system_name}: [{value}]",
  "IrregularFile": "путь не является обычным файлом: {path}",
  "JsonErrorMustBeAnObject": "Ожидается, что \"{path}\" будет объектом.",
  "JsonSwitch": "(Экспериментально) Запрос вывода JSON.",
  "LaunchingProgramFailed": "Запуск средства {tool_name}:",
  "LicenseExpressionContainsExtraPlus": "Выражение лицензии SPDX содержит дополнительный знак \"+\". Они разрешены только непосредственно после идентификатора лицензии.",
  "LicenseExpressionContainsInvalidCharacter": "Выражение лицензии SPDX содержит недопустимый символ (0x{value:02X} '{value}').",
  "LicenseExpressionContainsUnicode": "Выражение лицензии SPDX содержит символ Юникода (U+{value:04X} '{pretty_value}'), но эти выражения предназначены только для ASCII.",
  "LicenseExpressionDocumentRefUnsupported": "Текущая реализация не поддерживает ссылки DocumentRef-SPDX.",
  "LicenseExpressionExpectCompoundFoundParen": "Ожидался составной элемент или конец строки, обнаружена круглая скобка.",
  "LicenseExpressionExpectCompoundFoundWith": "Ожидается либо AND, либо OR, найдено WITH (WITH допускается только после имен лицензий, а не выражений в скобках).",
  "LicenseExpressionExpectCompoundFoundWord": "Ожидается операция AND или OR, обнаружена лицензия или имя исключения: \"{value}\".",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "Ожидается операция AND, OR или WITH, обнаружена лицензия или имя исключения: \"{value}\".",
  "LicenseExpressionExpectExceptionFoundCompound": "Ожидалось имя исключения, обнаружено составное {value}.",
  "LicenseExpressionExpectExceptionFoundEof": "Ожидалось имя исключения, обнаружен конец строки.",
  "LicenseExpressionExpectExceptionFoundParen": "Ожидалось имя исключения, обнаружена скобка.",
  "LicenseExpressionExpectLicenseFoundCompound": "Ожидалось имя лицензии, обнаружено составное {value}.",
  "LicenseExpressionExpectLicenseFoundEof": "Ожидалось имя лицензии, обнаружен конец строки.",
  "LicenseExpressionExpectLicenseFoundParen": "Ожидалось имя лицензии, обнаружена круглая скобка.",
  "LicenseExpressionImbalancedParens": "Закрывающая круглая скобка без открывающей скобки.",
  "LicenseExpressionUnknownException": "Неизвестный идентификатор исключения лицензии \"{value}\". Известные значения перечислены по ссылке https://spdx.org/licenses/exceptions-index.html",
  "LicenseExpressionUnknownLicense": "Неизвестный идентификатор лицензии \"{value}\". Известные значения перечислены по адресу https://spdx.org/licenses/",
  "ListOfValidFieldsForControlFiles": "Список допустимых полей для файлов CONTROL (с учетом регистра):",
  "LoadingCommunityTriplet": "-- [СООБЩЕСТВО] Загрузка тройной конфигурации из: {путь}",
  "LoadingDependencyInformation": "Загрузка сведений о зависимостях для пакетов {count}...",
  "LoadingOverlayTriplet": "-- [OVERLAY] Загрузка тройной конфигурации из: {path}",
  "LocalizedMessageMustNotContainIndents": "Сообщение с именем {value} содержит отступ, который необходимо изменить, чтобы вместо этого использовать LocalizedString::append_indent.",
  "LocalizedMessageMustNotEndWithNewline": "Сообщение с именем {value} заканчивается новой строкой, которая должна быть добавлена форматированием, а не локализацией.",
  "ManifestFormatCompleted": "Файлы манифеста отформатированы успешно.",
  "MismatchedFiles": "файл для хранения не соответствует хэшу",
  "Missing7zHeader": "Не удалось найти заголовок 7z.",
  "MissingArgFormatManifest": "манифест формата был передан --convert-control без '--all'.\nЭто ничего не делает: явно переданные управляющие файлы преобразуются автоматически.",
  "MissingDependency": "Пакет {spec} установлен, но зависимость {package_name} не установлена.",
  "MissingExtension": "Отсутствует расширение \"{extension}\".",
  "MissingOption": "Для этой команды требуется --{option}",
  "MissingPortSuggestPullRequest": "Если вашего порта нет в списке, откройте вопрос и рассмотрите возможность размещения запроса на вытягивание.",
  "MissmatchedBinParagraphs": "Абзац сериализованного двоичного файла отличался от абзаца исходного двоичного файла. Откройте проблему на странице https://github.com/microsoft/vcpkg со следующими выходными данными:",
  "MonoInstructions": "Это может быть вызвано неполной установкой Mono. Полная версия Mono доступна в некоторых системах по команде \"sudo apt install mono-complete\". Пользователям Ubuntu 18.04 может потребоваться более новая версия Mono, доступная по адресу https://www.mono-project.com/download/stable/",
  "MsiexecFailedToExtract": "сбой msiexec при извлечении \"{path}\" с кодом запуска или выхода {exit_code} и сообщением:",
  "MultiArch": "Значение Multi-Arch должно быть \"то же\", но было {option}",
  "NavigateToNPS": "Пожалуйста, перейдите на {url} в предпочитаемом вами браузере.",
  "NewConfigurationAlreadyExists": "При создании манифеста файл vcpkg-configuration.json по адресу {path} будет перезаписан.",
  "NewManifestAlreadyExists": "Манифест уже присутствует в {path}.",
  "NewNameCannotBeEmpty": "--name не может быть пустым.",
  "NewOnlyOneVersionKind": "Можно указать только одно из --version-relaxed, --version-date или --version-string.",
  "NewSpecifyNameVersionOrApplication": "Чтобы указать, что манифест не предназначен для использования в качестве порта, определите --name и --version для создания манифеста, предназначенного для библиотек C++, или укажите --application.",
  "NewVersionCannotBeEmpty": "--version не может быть пустой.",
  "NoArgumentsForOption": "Параметр --{option} не принимает аргумент.",
  "NoCachedPackages": "Никакие пакеты не кэшируются.",
  "NoInstalledPackages": "Нет установленных пакетов. Вы имели в виду \"search\"?",
  "NoLocalizationForMessages": "Нет локализованных сообщений для следующего: ",
  "NoRegistryForPort": "Не настроен реестр для порта {package_name}.",
  "NoteMessage": "примечание. ",
  "NugetPackageFileSucceededButCreationFailed": "Создание пакета NuGet выполнено успешно, но .nupkg не создан. Ожидается: \"{path}\"",
  "OptionMustBeInteger": "Значение --{option} должно быть целым числом.",
  "OptionRequired": "Требуется параметр --{option}.",
  "OptionRequiresOption": "Для значения --{value} требуется --{option}",
  "OriginalBinParagraphHeader": "\nАбзац исходного двоичного файла",
  "PackageFailedtWhileExtracting": "Сбой \"{value}\" при извлечении {path}.",
  "PackageRootDir": "(Экспериментально) Укажите корневой каталог пакетов.",
  "PackagesToInstall": "Будут собраны и установлены следующие пакеты:",
  "PackagesToInstallDirectly": "Следующие пакеты будут непосредственно установлены:",
  "PackagesToModify": "Дополнительные пакеты (*) будут изменены для завершения этой операции.",
  "PackagesToRebuild": "Будут повторно собраны следующие пакеты:",
  "PackagesToRebuildSuggestRecurse": "Если вы действительно хотите повторно собрать перечисленные выше пакеты, запустите команду с параметром --recurse.",
  "PackagesToRemove": "Будут удалены следующие пакеты:",
  "PackingVendorFailed": "Сбой упаковки {vendor}. Используйте --debug для получения дополнительной информации.",
  "ParseControlErrorInfoInvalidFields": "Не ожидались следующие поля:",
  "ParseControlErrorInfoMissingFields": "Отсутствуют следующие поля:",
  "ParseControlErrorInfoTypesEntry": "{value} ожидалось {expected}",
  "ParseControlErrorInfoWhileLoading": "при загрузке {path}:",
  "ParseControlErrorInfoWrongTypeFields": "Следующие поля имели неправильные типы:",
  "PortDependencyConflict": "Порт {package_name} имеет следующие неподдерживаемые зависимости:",
  "PortNotInBaseline": "В базовом плане нет записи для порта {package_name}.",
  "PortSupportsField": "(поддерживает: \"{supports_expression}\")",
  "PortTypeConflict": "Тип порта {spec} в установленном файле порта отличается от доступного.\nУдалите {spec} вручную и повторно выполните эту команду.",
  "PortsAdded": "Добавлены следующие порты ({count}):",
  "PortsNoDiff": "Порты между двумя фиксациями не изменились.",
  "PortsRemoved": "Удалены следующие порты ({count}):",
  "PortsUpdated": "\nОбновлены следующие порты ({count}):",
  "PreviousIntegrationFileRemains": "Предыдущий файл интеграции не был удален.",
  "ProcessorArchitectureMalformed": "Не удалось проанализировать %PROCESSOR_ARCHITECTURE% ({arch}) как допустимую архитектуру ЦП.",
  "ProcessorArchitectureMissing": "Отсутствует требуемая переменная среды %PROCESSOR_ARCHITECTURE%.",
  "ProcessorArchitectureW6432Malformed": "Не удалось проанализировать %PROCESSOR_ARCHITEW6432% ({arch}) как допустимую архитектуру ЦП. Возврат к %PROCESSOR_ARCHITECTURE%.",
  "ProgramReturnedNonzeroExitCode": "Сбой средства {tool_name} с кодом завершения {exit_code}.",
  "PushingVendorFailed": "Сбой отправки {vendor} в \"{path}\". Для получения дополнительных сведений, используйте --debug.",
  "RegistryCreated": "Реестр успешно создан в {path}",
  "RemovingPackage": "Выполняется удаление {action_index}/{count} {spec}",
  "ReplaceSecretsError": "Замена секретов привела к следующей ошибке: '{error_msg}'",
  "RestoredPackage": "Восстановлен пакет из \"{path}\"",
  "RestoredPackagesFromVendor": "Восстановлено {count} пакетов из {value} за {elapsed}. Используйте --debug, чтобы увидеть больше деталей.",
  "ResultsHeader": "РЕЗУЛЬТАТЫ",
  "SeeURL": "Дополнительные сведения см. в {url}.",
  "SerializedBinParagraphHeader": "\nАбзац сериализованного двоичного файла",
  "SettingEnvVar": "-- Установка переменных среды \"{env_var}\" в \"{url}\".",
  "ShaPassedAsArgAndOption": "SHA512 передан как аргумент и как параметр. Передайте только один из этих вариантов.",
  "ShaPassedWithConflict": "Передано SHA512, но также передан параметр --skip-sha512. Выберите только один из этих вариантов.",
  "SkipClearingInvalidDir": "Очистка содержимого {path} пропущена: это не каталог.",
  "SourceFieldPortNameMismatch": "Поле \"Source\" в файле CONTROL или поле \"name\" в файле vcpkg.json содержит имя {package_name} и не соответствует каталогу порта {path}.",
  "SpecifiedFeatureTurnedOff": "Функция '{command_name}' специально отключена, но указан --{option}.",
  "SpecifyDirectoriesContaining": "Указывает каталоги, содержащие файлы триплетов.\n(также: '{env_var}')",
  "SpecifyDirectoriesWhenSearching": "Укажите каталоги для использования при поиске портов.\n(также: '{env_var}')",
  "SpecifyHostArch": "Укажите триплет архитектуры узла. См. 'vcpkg help triplet'.\n(по умолчанию: '{env_var}')",
  "SpecifyTargetArch": "Укажите триплет целевой архитектуры. См. 'vcpkg help triplet'.\n(по умолчанию: '{env_var}')",
  "StoreOptionMissingSha": "Параметр --store недопустим без sha512",
  "StoredBinaryCache": "Сохраненный двоичный кэш: \"{path}\"",
  "SuggestGitPull": "Результат может быть устаревшим. Чтобы получить последние результаты, запустите \"git pull\".",
  "SuggestResolution": "Чтобы попытаться устранить все ошибки сразу, запустите: \nvcpkg {command_name} --{option}",
  "SuggestStartingBashShell": "Чтобы изменения вступили в силу, пожалуйста, проверьте, запустили ли вы новую оболочку bash,",
  "SuggestUpdateVcpkg": "Возможно, нужно обновить двоичный файл vcpkg; попробуйте запустить {command_line} для обновления.",
  "SupportedPort": "Порт {package_name} поддерживается.",
  "SystemApiErrorMessage": "Сбой вызова API {system_api} с кодом завершения {exit_code} ({error_msg})",
  "ToolFetchFailed": "Не удалось получить {tool_name}.",
  "ToolInWin10": "Эта служебная программа поставляется в комплекте с Windows 10 и более поздней версии.",
  "TotalTime": "Общее затраченное время: {elapsed}",
  "TwoFeatureFlagsSpecified": "И '{value}', и -'{value}' были указаны как флаги функций.",
  "UndeterminedToolChainForTriplet": "Не удалось определить использование цепочки инструментов для {triplet} с CMAKE_SYSTEM_NAME {system_name}. Вы хотели использовать VCPKG_CHAINLOAD_TOOLCHAIN_FILE?",
  "UnexpectedErrorDuringBulkDownload": "произошла неожиданная ошибка при массовом скачивании.",
  "UnexpectedExtension": "Неожиданное расширение архива: \"{extension}\".",
  "UnexpectedFormat": "Ожидается формат [{expected}], а был [{actual}].",
  "UnexpectedToolOutput": "Средство {tool_name} ({path}) отобразило непредвиденные выходные данные при попытке определить версию:",
  "UnknownBaselineFileContent": "Базовая запись не распознана; ожидалось \"port:triplet=(fail|skip|pass)\".",
  "UnknownBinaryProviderType": "неизвестный тип бинарного провайдера: допустимыми провайдерами являются «clear», «default», «nuget», «nugetconfig», «nugettimeout», «interactive», «x-azblob», «x-gcs», «x-aws», «x-aws-config», «http» и «файлы»",
  "UnknownOptions": "Неизвестные параметры для команды '{command_namнеизвестныйe}':",
  "UnknownParameterForIntegrate": "Неизвестный параметр \"{value}\" для интеграции.",
  "UnknownPolicySetting": "Неизвестный параметр политики '{value}': {option}",
  "UnknownSettingForBuildType": "Неизвестный параметр для VCPKG_BUILD_TYPE {опция}. Допустимые параметры: '', 'debug', и 'release'.",
  "UnknownTool": "vcpkg не имеет определения этого инструмента для этой платформы.",
  "UnknownVariablesInTemplate": "Недопустимый аргумент. URL-шаблон \"{value}\" содержит неизвестные переменные: {list}.",
  "UnrecognizedConfigField": "конфигурация содержит следующие нераспознанные поля:",
  "UnsupportedPort": "Порт {package_name} не поддерживается.",
  "UnsupportedPortDependency": "- зависимость {value} не поддерживается.",
  "UnsupportedPortFeature": "{spec} поддерживается только в '{supports_expression}'",
  "UnsupportedShortOptions": "краткие параметры не поддерживаются: '{value}'",
  "UnsupportedSystemName": "Не удалось сопоставить VCPKG_CMAKE_SYSTEM_NAME \"{system_name}\" с платформой vcvarsall. Поддерживаемые имена систем: \"\", \"Windows\" и \"WindowsStore\".",
  "UnsupportedToolchain": "в триплете {triplet}: Не удалось найти допустимую цепочку инструментов для запрошенной целевой архитектуры {arch}.\nВыбранный экземпляр Visual Studio находится в: {path}\nДоступные сочетания наборов инструментов: {list}",
  "UpdateBaselineAddBaselineNoManifest": "ключ --{option} передан, но нет файла манифеста, в который можно было бы добавить поле \"builtin-baseline\".",
  "UpdateBaselineLocalGitError": "сбой GIT при попытке анализа HEAD локального реестра vcpkg в \"{path}\"",
  "UpdateBaselineNoConfiguration": "невозможно обновить \"vcpkg.json\" или \"vcpkg-configuration.json\": файлы не существуют.",
  "UpdateBaselineNoExistingBuiltinBaseline": "файл манифеста в настоящее время не содержит поле \"builtin-baseline\"; чтобы добавить его, передайте ключ --{option}.",
  "UpdateBaselineNoUpdate": "реестр \"{url}\" не обновлен: \"{value}\"",
  "UpdateBaselineRemoteGitError": "GIT не удалось получить удаленный репозиторий \"{url}\"",
  "UpdateBaselineUpdatedBaseline": "обновленный реестр \"{url}\": базовый план \"{old_value}\" -> \"{new_value}\"",
  "UpgradeInManifest": "Команда обновления сейчас не поддерживает режим манифеста. Вместо этого измените vcpkg.json и запустите установку.",
  "UpgradeRunWithNoDryRun": "Если вы действительно хотите повторно собрать перечисленные выше пакеты, запустите эту команду с параметром --no-dry-run.",
  "UploadedBinaries": "Загружены двоичные файлы {count} {vendor}.",
  "UploadedPackagesToVendor": "Отправлено {count} пакетов из {vendor} за {elapsed}",
  "UploadingBinariesToVendor": "Загрузка двоичных файлов для \"{spec}\" в источник \"{vendor}\" \"{path}\".",
  "UploadingBinariesUsingVendor": "Загрузка двоичных файлов для \"{spec}\" с использованием \"{vendor}\" \"{path}\".",
  "UseEnvVar": "-- Использование {env_var} в переменных окружения.",
  "UserWideIntegrationDeleted": "Общепользовательская интеграция не установлена.",
  "UserWideIntegrationRemoved": "Общепользовательская интеграция удалена.",
  "UsingCommunityTriplet": "-- Использование триплета сообщества {triplet}. Успех этой тройной конфигурации не гарантируется.",
  "UsingManifestAt": "Использование файла манифеста в {path}.",
  "Utf8DecoderDereferencedAtEof": "Utf8Decoder без ссылки в конце строки.",
  "VSExaminedInstances": "Рассмотрены следующие экземпляры Visual Studio:",
  "VSExaminedPaths": "Следующие пути проверены на наличие экземпляров Visual Studio:",
  "VSNoInstances": "Не удалось найти полный экземпляр Visual Studio",
  "VcpkgCeIsExperimental": "vcpkg-ce ('configure environment') является экспериментальной функцией и может измениться в любое время.",
  "VcpkgCommitTableHeader": "Фиксация VCPKG",
  "VcpkgCompletion": "Завершение vcpkg {value} уже импортировано в ваш файл \"{path}\".\nНайдены следующие записи:",
  "VcpkgDisallowedClassicMode": "Не удалось найти манифест (vcpkg.json) над текущим рабочим каталогом.\nЭто распределение vcpkg не имеет экземпляра классического режима.",
  "VcpkgHasCrashed": "Сбой vcpkg. Пожалуйста, создайте проблему на https://github.com/microsoft/vcpkg, содержащую краткую сводку о том, что вы пытались сделать, и следующую информацию.",
  "VcpkgInvalidCommand": "недопустимая команда: {command_name}",
  "VcpkgRootRequired": "Для изолированной начальной загрузки необходимо настроить VCPKG_ROOT.",
  "VcpkgRootsDir": "Укажите корневой каталог vcpkg. (по умолчанию:\n'{env_var}')",
  "VcpkgSendMetricsButDisabled": "передан --sendmetrics, но метрики отключены.",
  "VersionCommandHeader": "Версия программы управления пакетами vcpkg {version}\n\nСм. LICENSE.txt для получения сведений о лицензии.",
  "VersionConstraintViolated": "ожидалось, что версия зависимости {spec} будет не менее {expected_version}, но текущая версия — {actual_version}.",
  "VersionInvalidDate": "\"{version}\" не является допустимой версией даты. Даты должны быть в формате ГГГГ-ММ-ДД, а неоднозначные значения должны быть положительными целыми числами с разделителями-точками без начальных нулей.",
  "VersionInvalidRelaxed": "\"{version}\" не является допустимой нестрогой версией (semver с произвольным количеством числовых элементов).",
  "VersionInvalidSemver": "\"{version}\" не является допустимой семантической версией, см. <https://semver.org>.",
  "VersionSpecMismatch": "Не удалось загрузить порт, так как версии не согласованы. Файл \"{path}\" содержит версию {actual_version}, но база данных версий указывает, что она должна быть {expected_version}.",
  "VersionTableHeader": "Версия",
  "WaitingForChildrenToExit": "Ожидание завершения дочерних процессов...",
  "WaitingToTakeFilesystemLock": "ожидание блокировки файловой системы в {path}...",
  "WarningMessage": "Предупреждение: ",
  "WarningMessageMustUsePrintWarning": "Сообщение с именем {value} начинается с предупреждения: вместо этого его необходимо изменить на prepend WarningMessage в коде.",
  "WarningsTreatedAsErrors": "предыдущие предупреждения, интерпретируемые как ошибки",
  "WhileLookingForSpec": "при поиске {spec}:",
  "WindowsOnlyCommand": "Эта команда поддерживает только Windows.",
  "WroteNuGetPkgConfInfo": "Сведения о конфигурации пакета NuGet записаны в {path}."
}
