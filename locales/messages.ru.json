{
  "AddArtifactOnlyOne": "\"{command_line}\" может добавлять только один артефакт за раз.",
  "AddFirstArgument": "Первым аргументом для \"{command_line}\" должен быть artifact или port.\n",
  "AddPortRequiresManifest": "\"{command_line}\" требуется активный файл манифеста.",
  "AddPortSucceded": "Порты успешно добавлены в файл vcpkg.json.",
  "AddTripletExpressionNotAllowed": "Ошибка: здесь не допускаются тройные выражения. Вместо этого можно изменить \"{package_name}:{triplet}\" на \"{package_name}\".",
  "AllFormatArgsRawArgument": "строка формата \"{value}\" содержит необработанный аргумент формата",
  "AllFormatArgsUnbalancedBraces": "несбалансированная фигурная скобка в строке формата \"{value}\"",
  "AlreadyInstalled": "Уже установлено: {spec}",
  "AlreadyInstalledNotHead": "{spec} уже установлено -- сборка не выполняется из HEAD",
  "AttemptingToFetchPackagesFromVendor": "Попытка получить {count} пакетов от {vendor}",
  "BothYesAndNoOptionSpecifiedError": "ошибка: невозможно одновременно указать параметры --no-{option} и --{option}.",
  "BuildAlreadyInstalled": "{spec} — уже установлено. Удалите {spec}, прежде чем выполнять сборку.",
  "BuildDependenciesMissing": "Для команды сборки необходимо установить все зависимости.\nОтсутствуют следующие зависимости:\n\n",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "СКАЧАНО",
  "BuildResultExcluded": "ИСКЛЮЧЕНО",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "УДАЛЕНО",
  "BuildResultSucceeded": "УСПЕШНО",
  "BuildResultSummaryHeader": "СВОДКА ПО {triplet}",
  "BuildResultSummaryLine": "    {build_result}: {count}",
  "BuildTroubleshootingMessage1": "Используйте последние файлы портов с \"git pull\" и \"vcpkg update\".\nЗатем проверьте наличие известных проблем в:",
  "BuildTroubleshootingMessage2": "Вы можете отправить новую проблему в:",
  "BuildTroubleshootingMessage3": "Добавьте \"Ошибка сборки [{package_name}]\" в название отчета об ошибке, следующие сведения о версии в описании ошибки и вложите любые релевантные журналы ошибок из раздела выше.",
  "BuildingFromHead": "Сборка {spec} из HEAD...",
  "BuildingPackage": "Сборка {spec}...",
  "BuildingPackageFailed": "сбой {spec} при построении: {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "из-за следующих отсутствующих зависимостей:",
  "CMakeTargetsUsage": "{package_name} предоставляет целевые объекты CMake:",
  "ChecksFailedCheck": "сбой vcpkg; дополнительные сведения недоступны.",
  "ChecksUnreachableCode": "достигнут недостижимый код",
  "ChecksUpdateVcpkg": "обновление vcpkg путем повторного запуска bootstrap-vcpkg может устранить этот сбой.",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "--allow-unexpected-passing-passing можно использовать, только если указан базовый план с помощью --ci-baseline.",
  "CiBaselineRegression": "РЕГРЕССИЯ: {spec} с ошибкой {build_result}. Если требуется, добавьте {spec}=fail в {path}.",
  "CiBaselineRegressionHeader": "РЕГРЕССИИ:",
  "CiBaselineUnexpectedPass": "ПЕРЕДАЧА, УДАЛЕНИЕ ИЗ СПИСКА СБОЕВ: {spec} ({path}).",
  "CmakeTargetsExcluded": "примечание. Дополнительные целевые объекты ({count}) не отображаются.",
  "CouldNotDeduceNugetIdAndVersion": "Не удалось определить идентификатор nuget и версию по имени файла: {path}",
  "CurlReportedUnexpectedResults": "curl сообщает о неожиданных результатах для vcpkg. Продолжение работы vcpkg невозможно.\nПроверьте следующий текст на наличие конфиденциальных сведений и откройте проблему в GitHub Microsoft/vcpkg, чтобы исправить эту проблему!\ncmd: {command_line}\n=== curl output ===\n{actual}\n=== end curl output ===\n",
  "DownloadedSources": "Скачанные источники для {spec}",
  "DownloadingVcpkgCeBundle": "Скачивание пакета vcpkg-ce {version}...",
  "DownloadingVcpkgCeBundleLatest": "Скачивание последнего пакета vcpkg-ce...",
  "ElapsedForPackage": "Затраченное время на обработку {spec}: {elapsed}",
  "EmptyLicenseExpression": "Выражение лицензии SPDX было пустым.",
  "ErrorIndividualPackagesUnsupported": "Ошибка: в режиме манифеста \"vcpkg install\" не поддерживает отдельные аргументы пакета.\nЧтобы установить дополнительные пакеты, измените vcpkg.json, а затем выполните команду \"vcpkg install\" без аргументов пакета.",
  "ErrorInvalidClassicModeOption": "Ошибка: параметр --{option} не поддерживается в классическом режиме, и манифест не найден.",
  "ErrorInvalidManifestModeOption": "Ошибка: параметр --{option} не поддерживается в режиме манифеста.",
  "ErrorMessage": "ошибка: ",
  "ErrorMissingVcpkgRoot": "Ошибка: не удалось обнаружить vcpkg-root. Если вы пытаетесь использовать созданную вами копию vcpkg, необходимо определить переменную среды VCPKG_ROOT, чтобы она указывала на клонированную копию {url}.",
  "ErrorNoVSInstance": "Ошибка: в триплете {triplet}: не удалось найти допустимый экземпляр Visual Studio.",
  "ErrorNoVSInstanceAt": "     в \"{path}\"",
  "ErrorNoVSInstanceFullVersion": "    с префиксом версии набора инструментов {version}",
  "ErrorNoVSInstanceVersion": "    с версией набора инструментов {version}",
  "ErrorRequireBaseline": "Ошибка: этому экземпляру vcpkg требуется манифест с указанным базовым состоянием для взаимодействия с портами. Добавьте в манифест встроенный базовый план или добавьте файл vcpkg-configuration.json, который переопределяет реестр по умолчанию.\n",
  "ErrorRequirePackagesList": "Ошибка: для \"vcpkg install\" требуется список пакетов для установки в классическом режиме.",
  "ErrorRequirePackagesToInstall": "Ошибка: пакеты для установки не указаны, а манифест не найден.",
  "ErrorVcvarsUnsupported": "Ошибка: в триплете {triplet}: использование приглашения разработчика Visual Studio не поддерживается на узлах, отличных от Windows.\nОпределите \"VCPKG_CMAKE_SYSTEM_NAME\" или \"VCPKG_CHAINLOAD_TOOLCHAIN_FILE\" в файле триплета.",
  "ExcludedPackage": "Исключено: {spec}",
  "ExpectedCharacterHere": "здесь ожидается \"{expected}\"",
  "ExpectedFailOrSkip": "здесь ожидается \"fail\" или \"skip\"",
  "ExpectedPortName": "здесь ожидается имя порта",
  "ExpectedTripletName": "здесь ожидается имя триплета",
  "FailedToProvisionCe": "Не удалось подготовить vcpkg-ce.",
  "FailedToStoreBackToMirror": "не удалось сохранить обратно в зеркале:",
  "ForceSystemBinariesOnWeirdPlatforms": "Переменная среды VCPKG_FORCE_SYSTEM_BINARIES должна быть задана на платформах ARM, s390x и ppc64le.",
  "FormattedParseMessageExpression": "    выражение on: {value}",
  "GenerateMsgErrorParsingFormatArgs": "ошибка: синтаксический анализ строки формата для {value}:",
  "GenerateMsgIncorrectComment": "сообщение {value} содержит неправильный комментарий:",
  "GenerateMsgNoArgumentValue": "    {{{value}}} указано в комментарии, но не использовалось в сообщении.",
  "GenerateMsgNoCommentValue": "    {{{value}}} использовалось в сообщении, но не прокомментировано.",
  "GraphCycleDetected": "Обнаружен цикл в графе в {package_name}:",
  "HashFileFailureToRead": "не удалось прочитать файл \"{path}\" для хэширования: {error}",
  "HeaderOnlyUsage": "{package_name} является заголовочным и может использоваться из CMake через:",
  "IllegalFeatures": "ошибка: список компонентов не разрешен в этом контексте",
  "IllegalPlatformSpec": "ошибка: квалификатор платформы не разрешен в этом контексте",
  "InstallingPackage": "Установка {spec}...",
  "InternalErrorMessage": "внутренняя ошибка: ",
  "InternalErrorMessageContact": "Откройте проблему на странице https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug с подробными инструкциями по ее воспроизведению.",
  "InvalidArgument": "недопустимый аргумент.",
  "InvalidArgumentRequiresAbsolutePath": "недопустимый аргумент: аргументы пути двоичной config \"{binary_source}\" для двоичных строк config должны быть абсолютными",
  "InvalidArgumentRequiresBaseUrl": "недопустимый аргумент: для двоичной config \"{binary_source}\" в качестве первого аргумента требуется базовый URL-адрес {base_url}",
  "InvalidArgumentRequiresBaseUrlAndToken": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется по крайней мере базовый URL-адрес и маркер SAS",
  "InvalidArgumentRequiresNoneArguments": "недопустимый аргумент: двоичная config \"{binary_source}\" не принимает аргументы",
  "InvalidArgumentRequiresOneOrTwoArguments": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется 1 или 2 аргумента",
  "InvalidArgumentRequiresPathArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" требует по крайней мере аргумент пути",
  "InvalidArgumentRequiresPrefix": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется по крайней мере префикс",
  "InvalidArgumentRequiresSingleArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" не принимает более 1 аргумента",
  "InvalidArgumentRequiresSingleStringArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" ожидает однострочного аргумента",
  "InvalidArgumentRequiresSource": "недопустимый аргумент: двоичная config \"{binary_source}\" требует непустого источника",
  "InvalidArgumentRequiresSourceArgument": "недопустимый аргумент: двоичная config \"{binary_source}\" требует по крайней мере исходный аргумент",
  "InvalidArgumentRequiresTwoOrThreeArguments": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется 2 или 3 аргумента",
  "InvalidArgumentRequiresValidToken": "недопустимый аргумент: для двоичной config \"{binary_source}\" требуется маркер SAS без предварительного значения \"?\" в качестве второго аргумента",
  "JsonErrorFailedToParse": "не удается выполнить анализ {path}:",
  "JsonErrorFailedToRead": "не удалось прочитать {path}: {error_msg}",
  "LicenseExpressionContainsExtraPlus": "Выражение лицензии SPDX содержит дополнительный знак \"+\". Они разрешены только непосредственно после идентификатора лицензии.",
  "LicenseExpressionContainsInvalidCharacter": "Выражение лицензии SPDX содержит недопустимый символ (0x{value:02X} '{value}').",
  "LicenseExpressionContainsUnicode": "Выражение лицензии SPDX содержит символ Юникода (U+{value:04X} '{pretty_value}'), но эти выражения предназначены только для ASCII.",
  "LicenseExpressionDocumentRefUnsupported": "Текущая реализация не поддерживает ссылки DocumentRef-SPDX.",
  "LicenseExpressionExpectCompoundFoundParen": "Ожидался составной элемент или конец строки, обнаружена круглая скобка.",
  "LicenseExpressionExpectCompoundFoundWith": "Ожидается либо AND, либо OR, найдено WITH (WITH допускается только после имен лицензий, а не выражений в скобках).",
  "LicenseExpressionExpectCompoundFoundWord": "Ожидается операция AND или OR, обнаружена лицензия или имя исключения: \"{value}\".",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "Ожидается операция AND, OR или WITH, обнаружена лицензия или имя исключения: \"{value}\".",
  "LicenseExpressionExpectExceptionFoundCompound": "Ожидалось имя исключения, обнаружено составное {value}.",
  "LicenseExpressionExpectExceptionFoundEof": "Ожидалось имя исключения, обнаружен конец строки.",
  "LicenseExpressionExpectExceptionFoundParen": "Ожидалось имя исключения, обнаружена скобка.",
  "LicenseExpressionExpectLicenseFoundCompound": "Ожидалось имя лицензии, обнаружено составное {value}.",
  "LicenseExpressionExpectLicenseFoundEof": "Ожидалось имя лицензии, обнаружен конец строки.",
  "LicenseExpressionExpectLicenseFoundParen": "Ожидалось имя лицензии, обнаружена круглая скобка.",
  "LicenseExpressionImbalancedParens": "Закрывающая круглая скобка без открывающей скобки.",
  "LicenseExpressionUnknownException": "Неизвестный идентификатор исключения лицензии \"{value}\". Известные значения перечислены по ссылке https://spdx.org/licenses/exceptions-index.html",
  "LicenseExpressionUnknownLicense": "Неизвестный идентификатор лицензии \"{value}\". Известные значения перечислены по адресу https://spdx.org/licenses/",
  "MsiexecFailedToExtract": "сбой msiexec при извлечении \"{path}\" с кодом запуска или выхода {exit_code} и сообщением:",
  "NoLocalizationForMessages": "Нет локализации для следующих сообщений:",
  "NoteMessage": "примечание. ",
  "ObjectStorageToolFailed": "Сбой {tool_name}. Код завершения: {exit_code}",
  "ProcessorArchitectureMalformed": "Не удалось проанализировать %PROCESSOR_ARCHITECTURE% ({arch}) как допустимую архитектуру ЦП.",
  "ProcessorArchitectureMissing": "Отсутствует требуемая переменная среды %PROCESSOR_ARCHITECTURE%.",
  "ProcessorArchitectureW6432Malformed": "Не удалось проанализировать %PROCESSOR_ARCHITEW6432% ({arch}) как допустимую архитектуру ЦП. Возврат к %PROCESSOR_ARCHITECTURE%.",
  "RemovingPackage": "Удаление {spec}",
  "RestoredPackagesFromVendor": "Восстановлено {count} пакетов из {vendor} за {elapsed}",
  "ResultsHeader": "РЕЗУЛЬТАТЫ",
  "SeeURL": "Дополнительные сведения см. в {url}.",
  "SourceFieldPortNameMismatch": "Поле \"Source\" в файле CONTROL или поле \"name\" в файле vcpkg.json содержит имя {package_name} и не соответствует каталогу портов {path}.",
  "SuggestNewVersionScheme": "Используйте схему \"{new_scheme}\" вместо \"{old_scheme}\" в порте \"{package_name}\".\nЧтобы отключить эту проверку, используйте \"--{option}\".",
  "UnexpectedErrorDuringBulkDownload": "произошла неожиданная ошибка при массовом скачивании.",
  "UnknownBaselineFileContent": "нераспознанная базовая запись; требуется port:triplet=(fail|skip)\"",
  "UnknownBinaryProviderType": "неизвестный тип двоичного поставщика: допустимые поставщики: clear, default, nuget, nugetconfig, interactive и files",
  "UnsupportedSystemName": "Ошибка: не удалось сопоставить VCPKG_CMAKE_SYSTEM_NAME '{system_name}' с платформой vcvarsall. Поддерживаемые имена систем: \"\", \"Windows\" и \"WindowsStore\".",
  "UnsupportedToolchain": "Ошибка: в триплете {triplet}: не удалось найти допустимое сочетание цепочки инструментов.\n    Запрошенная целевая архитектура была {arch}\n    Выбранный экземпляр Visual Studio находится в {path}\n    Доступные сочетания цепочки инструментов: {list}\n",
  "UploadedPackagesToVendor": "Отправлено {count} пакетов из {vendor} за {elapsed}",
  "UsingManifestAt": "Использование файла манифеста в {path}.",
  "Utf8DecoderDereferencedAtEof": "Utf8Decoder без ссылки в конце строки.",
  "VSExaminedInstances": "Рассмотрены следующие экземпляры Visual Studio:",
  "VSExaminedPaths": "Следующие пути проверены на наличие экземпляров Visual Studio:",
  "VSNoInstances": "Не удалось найти полный экземпляр Visual Studio",
  "VcpkgCeIsExperimental": "vcpkg-ce ('configure environment') является экспериментальной функцией и может измениться в любое время.",
  "VcpkgDisallowedClassicMode": "Ошибка: не удалось найти манифест (vcpkg.json) над текущим рабочим каталогом.\nЭто распределение vcpkg не имеет экземпляра классического режима.",
  "VcpkgHasCrashed": "Сбой vcpkg.exe.\nОтправьте сообщение электронной почты по электронной почте:\n    {email}\nсодержит краткую сводку о том, что вы пытались сделать, и следующий BLOB-объект данных:",
  "VcpkgInvalidCommand": "недопустимая команда: {command_name}",
  "VcpkgSendMetricsButDisabled": "Внимание! Передан параметр --sendmetrics, но метрики отключены.",
  "VersionCommandHeader": "Версия программы управления пакетами vcpkg {version}\n\nСм. LICENSE.txt для получения сведений о лицензии.",
  "VersionConstraintViolated": "ожидалось, что версия зависимости {spec} будет не менее {expected_version}, но текущая версия — {actual_version}.",
  "VersionInvalidDate": "\"{version}\" не является допустимой версией даты. Даты должны быть в формате ГГГГ-ММ-ДД, а неоднозначные значения должны быть положительными целыми числами с разделителями-точками без начальных нулей.",
  "VersionInvalidRelaxed": "\"{version}\" не является допустимой нестрогой версией (semver с произвольным количеством числовых элементов).",
  "VersionInvalidSemver": "\"{version}\" не является допустимой семантической версией, см. <https://semver.org>.",
  "VersionSpecMismatch": "ошибка: не удалось загрузить порт, так как спецификации версии не совпадают\n    Путь: {path}\n    Ожидается: {expected_version}\n    Фактически: {actual_version}",
  "WaitingForChildrenToExit": "Ожидание завершения дочерних процессов...",
  "WaitingToTakeFilesystemLock": "ожидание блокировки файловой системы в {path}...",
  "WarningMessage": "Предупреждение: ",
  "WarningsTreatedAsErrors": "предыдущие предупреждения, интерпретируемые как ошибки"
}
