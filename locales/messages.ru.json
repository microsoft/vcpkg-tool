{
  "AddArtifactOnlyOne": "'{command_line}' can only add one artifact at a time.",
  "AddFailedToWriteManifest": "Failed to write manifest file {path}: {error}",
  "AddFirstArgument": "The first argument to '{command_line}' must be 'artifact' or 'port'.\n",
  "AddPortRequiresManifest": "'{command_line}' requires an active manifest file.",
  "AddPortSucceded": "Порты успешно добавлены в файл vcpkg.json.",
  "AddTripletExpressionNotAllowed": "Ошибка: здесь не допускаются тройные выражения. Вместо этого можно изменить \"{package_name}:{triplet}\" на \"{package_name}\".",
  "AllFormatArgsRawArgument": "строка формата \"{value}\" содержит необработанный аргумент формата",
  "AllFormatArgsUnbalancedBraces": "несбалансированная фигурная скобка в строке формата \"{value}\"",
  "AwsAttemptingToFetchPackages": "Попытка получить {count} пакетов из AWS",
  "AwsFailedToDownload": "Не удалось загрузить aws с кодом завершения: {exit_code}",
  "AwsRestoredPackages": "Восстановлено {count} пакетов с AWS-серверов в {elapsed}",
  "AwsUploadedPackages": "Двоичные файлы отправлены на {count} AWS-серверов",
  "BothYesAndNoOptionSpecifiedError": "ошибка: невозможно одновременно указать параметры --no-{option} и --{option}.",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "СКАЧАНО",
  "BuildResultExcluded": "ИСКЛЮЧЕНО",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultSucceeded": "УСПЕШНО",
  "BuildResultSummaryHeader": "СВОДКА ПО {triplet}",
  "BuildResultSummaryLine": "    {build_result}: {count}",
  "ChecksFailedCheck": "vcpkg has crashed; no additional details are available.",
  "ChecksLineInfo": "{vcpkg_line_info}: ",
  "ChecksUnreachableCode": "unreachable code was reached",
  "ChecksUpdateVcpkg": "updating vcpkg by rerunning bootstrap-vcpkg may resolve this failure.",
  "EmptyLicenseExpression": "Выражение лицензии SPDX было пустым.",
  "ErrorIndividualPackagesUnsupported": "Ошибка: в режиме манифеста \"vcpkg install\" не поддерживает отдельные аргументы пакета.\nЧтобы установить дополнительные пакеты, измените vcpkg.json, а затем выполните команду \"vcpkg install\" без аргументов пакета.",
  "ErrorInvalidClassicModeOption": "Ошибка: параметр --{option} не поддерживается в классическом режиме, и манифест не найден.",
  "ErrorInvalidManifestModeOption": "Ошибка: параметр --{option} не поддерживается в режиме манифеста.",
  "ErrorMessage": "ошибка: ",
  "ErrorMissingVcpkgRoot": "Ошибка: не удалось обнаружить vcpkg-root. Если вы пытаетесь использовать созданную вами копию vcpkg, необходимо определить переменную среды VCPKG_ROOT, чтобы она указывала на клонированную копию {url}.",
  "ErrorNoVSInstance": "Ошибка: в триплете {triplet}: не удалось найти допустимый экземпляр Visual Studio.",
  "ErrorNoVSInstanceAt": "     в \"{path}\"",
  "ErrorNoVSInstanceFullVersion": "    с префиксом версии набора инструментов {version}",
  "ErrorNoVSInstanceVersion": "    с версией набора инструментов {version}",
  "ErrorRequireBaseline": "Ошибка: этому экземпляру vcpkg требуется манифест с указанным базовым состоянием для взаимодействия с портами. Добавьте в манифест встроенный базовый план или добавьте файл vcpkg-configuration.json, который переопределяет реестр по умолчанию.\n",
  "ErrorRequirePackagesList": "Ошибка: для \"vcpkg install\" требуется список пакетов для установки в классическом режиме.",
  "ErrorRequirePackagesToInstall": "Ошибка: пакеты для установки не указаны, а манифест не найден.",
  "ErrorVcvarsUnsupported": "Ошибка: в триплете {triplet}: использование приглашения разработчика Visual Studio не поддерживается на узлах, отличных от Windows.\nОпределите \"VCPKG_CMAKE_SYSTEM_NAME\" или \"VCPKG_CHAINLOAD_TOOLCHAIN_FILE\" в файле триплета.",
  "ForceSystemBinariesOnWeirdPlatforms": "Переменная среды VCPKG_FORCE_SYSTEM_BINARIES должна быть задана на платформах ARM, s390x и ppc64le.",
  "FormattedParseMessageExpression": "    выражение on: {value}",
  "FormattedParseMessageLocation": "{path}:{row}:{column}: ",
  "GenerateMsgErrorParsingFormatArgs": "ошибка: синтаксический анализ строки формата для {value}:",
  "GenerateMsgIncorrectComment": "сообщение {value} содержит неправильный комментарий:",
  "GenerateMsgNoArgumentValue": "    {{{value}}} указано в комментарии, но не использовалось в сообщении.",
  "GenerateMsgNoCommentValue": "    {{{value}}} использовалось в сообщении, но не прокомментировано.",
  "GraphCycleDetected": "Обнаружен цикл в графе в {package_name}:",
  "GraphCycleDetectedElement": "    {package_name}",
  "HashFileFailureToRead": "failed to read file '{path}' for hashing: {error}",
  "IllegalFeatures": "ошибка: список компонентов не разрешен в этом контексте",
  "IllegalPlatformSpec": "ошибка: квалификатор платформы не разрешен в этом контексте",
  "InternalErrorMessage": "internal error: ",
  "InternalErrorMessageContact": "Please open an issue at https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug with detailed steps to reproduce the problem.",
  "LicenseExpressionContainsExtraPlus": "Выражение лицензии SPDX содержит дополнительный знак \"+\". Они разрешены только непосредственно после идентификатора лицензии.",
  "LicenseExpressionContainsInvalidCharacter": "Выражение лицензии SPDX содержит недопустимый символ (0x{value:02X} '{value}').",
  "LicenseExpressionContainsUnicode": "Выражение лицензии SPDX содержит символ Юникода (U+{value:04X} '{pretty_value}'), но эти выражения предназначены только для ASCII.",
  "LicenseExpressionDocumentRefUnsupported": "Текущая реализация не поддерживает ссылки DocumentRef-SPDX.",
  "LicenseExpressionExpectCompoundFoundParen": "Ожидался составной элемент или конец строки, обнаружена круглая скобка.",
  "LicenseExpressionExpectCompoundFoundWith": "Ожидается либо AND, либо OR, найдено WITH (WITH допускается только после имен лицензий, а не выражений в скобках).",
  "LicenseExpressionExpectCompoundFoundWord": "Ожидается операция AND или OR, обнаружена лицензия или имя исключения: \"{value}\".",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "Ожидается операция AND, OR или WITH, обнаружена лицензия или имя исключения: \"{value}\".",
  "LicenseExpressionExpectExceptionFoundCompound": "Ожидалось имя исключения, обнаружено составное {value}.",
  "LicenseExpressionExpectExceptionFoundEof": "Ожидалось имя исключения, обнаружен конец строки.",
  "LicenseExpressionExpectExceptionFoundParen": "Ожидалось имя исключения, обнаружена скобка.",
  "LicenseExpressionExpectLicenseFoundCompound": "Ожидалось имя лицензии, обнаружено составное {value}.",
  "LicenseExpressionExpectLicenseFoundEof": "Ожидалось имя лицензии, обнаружен конец строки.",
  "LicenseExpressionExpectLicenseFoundParen": "Ожидалось имя лицензии, обнаружена круглая скобка.",
  "LicenseExpressionImbalancedParens": "Закрывающая круглая скобка без открывающей скобки.",
  "LicenseExpressionUnknownException": "Неизвестный идентификатор исключения лицензии \"{value}\". Известные значения перечислены по ссылке https://spdx.org/licenses/exceptions-index.html",
  "LicenseExpressionUnknownLicense": "Неизвестный идентификатор лицензии \"{value}\". Известные значения перечислены по адресу https://spdx.org/licenses/",
  "MsiexecFailedToExtract": "msiexec failed while extracting '{path}' with launch or exit code {exit_code} and message:",
  "NoLocalizationForMessages": "Нет локализации для следующих сообщений:",
  "NoteMessage": "note: ",
  "ProcessorArchitectureMalformed": "Не удалось проанализировать %PROCESSOR_ARCHITECTURE% ({arch}) как допустимую архитектуру ЦП.",
  "ProcessorArchitectureMissing": "Отсутствует требуемая переменная среды %PROCESSOR_ARCHITECTURE%.",
  "ProcessorArchitectureW6432Malformed": "Не удалось проанализировать %PROCESSOR_ARCHITEW6432% ({arch}) как допустимую архитектуру ЦП. Возврат к %PROCESSOR_ARCHITECTURE%.",
  "ResultsHeader": "РЕЗУЛЬТАТЫ",
  "ResultsLine": "    {spec}: {build_result}: {elapsed}",
  "SeeURL": "Дополнительные сведения см. в {url}.",
  "SuggestNewVersionScheme": "Используйте схему \"{new_scheme}\" вместо \"{old_scheme}\" в порте \"{package_name}\".\nЧтобы отключить эту проверку, используйте \"--{option}\".",
  "UnsupportedSystemName": "Ошибка: не удалось сопоставить VCPKG_CMAKE_SYSTEM_NAME '{system_name}' с платформой vcvarsall. Поддерживаемые имена систем: \"\", \"Windows\" и \"WindowsStore\".",
  "UnsupportedToolchain": "Ошибка: в триплете {triplet}: не удалось найти допустимое сочетание цепочки инструментов.\n    Запрошенная целевая архитектура была {arch}\n    Выбранный экземпляр Visual Studio находится в {path}\n    Доступные сочетания цепочки инструментов: {list}\n",
  "UsingManifestAt": "Использование файла манифеста в {path}.",
  "Utf8DecoderDereferencedAtEof": "dereferenced Utf8Decoder at the end of a string.",
  "VSExaminedInstances": "Рассмотрены следующие экземпляры Visual Studio:",
  "VSExaminedPaths": "Следующие пути проверены на наличие экземпляров Visual Studio:",
  "VSNoInstances": "Не удалось найти полный экземпляр Visual Studio",
  "VcpkgDisallowedClassicMode": "Ошибка: не удалось найти манифест (vcpkg.json) над текущим рабочим каталогом.\nЭто распределение vcpkg не имеет экземпляра классического режима.",
  "VcpkgHasCrashed": "Сбой vcpkg.exe.\nОтправьте сообщение электронной почты по электронной почте:\n    {email}\nсодержит краткую сводку о том, что вы пытались сделать, и следующий BLOB-объект данных:",
  "VcpkgHasCrashedArgument": "{value}|",
  "VcpkgHasCrashedDataBlob": "\nVersion={version}\nEXCEPTION='{error}'\nCMD=",
  "VcpkgInvalidCommand": "недопустимая команда: {command_name}",
  "VcpkgSendMetricsButDisabled": "Внимание! Передан параметр --sendmetrics, но метрики отключены.",
  "VersionSpecMismatch": "ошибка: не удалось загрузить порт, так как спецификации версии не совпадают\n    Путь: {path}\n    Ожидается: {expected_version}\n    Фактически: {actual_version}",
  "WarningMessage": "Предупреждение: "
}
