{
  "AddArtifactOnlyOne": "“{command_line}” 一次只能添加一个项目。",
  "AddFirstArgument": "“{command_line}”的第一个参数必须是 “artifact” 或 “port”。\n",
  "AddPortRequiresManifest": "“{command_line}”需要活动清单文件。",
  "AddPortSucceded": "已成功将端口添加到 vcpkg.json 文件。",
  "AddTripletExpressionNotAllowed": "错误: 此处不允许使用三元表达式。你可能想要将 \"{package_name}:{triplet}\" 更改为 \"{package_name}\"。",
  "AllFormatArgsRawArgument": "格式字符串 \"{value}\" 包含原始格式参数",
  "AllFormatArgsUnbalancedBraces": "格式字符串中的不均衡大括号 \"{value}\"",
  "AlreadyInstalled": "已安装 {spec}",
  "AlreadyInstalledNotHead": "已安装 {spec} - 未从 HEAD 生成",
  "AttemptingToFetchPackagesFromVendor": "正在尝试从 {vendor} 提取 {count} 个包",
  "BothYesAndNoOptionSpecifiedError": "错误: 不能同时指定 --no-{option} 和 --{option}。",
  "BuildAlreadyInstalled": "{spec} is already installed; please remove {spec} before attempting to build it.",
  "BuildDependenciesMissing": "The build command requires all dependencies to be already installed.\nThe following dependencies are missing:\n\n",
  "BuildResultBuildFailed": "BUILD_FAILED",
  "BuildResultCacheMissing": "CACHE_MISSING",
  "BuildResultCascadeDueToMissingDependencies": "CASCADED_DUE_TO_MISSING_DEPENDENCIES",
  "BuildResultDownloaded": "已下载",
  "BuildResultExcluded": "已排除",
  "BuildResultFileConflicts": "FILE_CONFLICTS",
  "BuildResultPostBuildChecksFailed": "POST_BUILD_CHECKS_FAILED",
  "BuildResultRemoved": "REMOVED",
  "BuildResultSucceeded": "成功",
  "BuildResultSummaryHeader": "{triplet} 的摘要",
  "BuildResultSummaryLine": "    {build_result}: {count} 个",
  "BuildTroubleshootingMessage1": "Please ensure you're using the latest port files with `git pull` and `vcpkg update`.\nThen check for known issues at:",
  "BuildTroubleshootingMessage2": "You can submit a new issue at:",
  "BuildTroubleshootingMessage3": "Include '[{package_name}] Build error' in your bug report title, the following version information in your bug description, and attach any relevant failure logs from above.",
  "BuildingFromHead": "正在从 HEAD 生成 {spec}...",
  "BuildingPackage": "正在生成 {spec}...",
  "BuildingPackageFailed": "生成 {spec} 失败，结果为: {build_result}",
  "BuildingPackageFailedDueToMissingDeps": "由于缺少以下依赖项:",
  "CMakeTargetsUsage": "{package_name} 提供 CMake 目标:",
  "ChecksFailedCheck": "vcpkg 已崩溃；没有其他详细信息可用。",
  "ChecksUnreachableCode": "已访问无法访问的代码",
  "ChecksUpdateVcpkg": "通过重新运行 bootstrap-vcpkg 更新 vcpkg 可能会解决此故障。",
  "CiBaselineAllowUnexpectedPassingRequiresBaseline": "只有当通过 --ci-baseline 提供基线时才能使用 --allow-unexpected-passing。",
  "CiBaselineRegression": "REGRESSION: {spec} 失败，结果为 {build_result}。如果在预期之内，则添加 {spec}=fail to {path}。",
  "CiBaselineRegressionHeader": "回归测试:",
  "CiBaselineUnexpectedPass": "正在通过，从失败列表中删除: {spec} ({path})。",
  "CmakeTargetsExcluded": "注意: 未显示其他 {count} 个目标。",
  "CouldNotDeduceNugetIdAndVersion": "无法从文件名推导出 nuget ID 和版本: {path}",
  "CurlReportedUnexpectedResults": "curl 向 vcpkg 报告了意外结果，vcpkg 无法继续。\n请查看以下文本以获取敏感信息，并在 Microsoft/vcpkg GitHub 上打开问题以获取解决此问题的帮助!\ncmd: {command_line}\n=== curl output ===\n{actual}\n=== end curl output ===\n",
  "DownloadedSources": "已下载的 {spec} 源",
  "DownloadingVcpkgCeBundle": "正在下载 vcpkg-ce 捆绑包 {version}...",
  "DownloadingVcpkgCeBundleLatest": "正在下载最新的 vcpkg-ce 捆绑包...",
  "ElapsedForPackage": "处理 {spec} 所用时间: {elapsed}",
  "EmptyLicenseExpression": "SPDX 许可证表达式为空。",
  "ErrorIndividualPackagesUnsupported": "错误: 在清单模式下，`vcpkg install` 不支持单个包参数。\n若要安装其他包，请编辑 vcpkg.json，然后在没有任何包参数的情况下运行 `vcpkg install`。",
  "ErrorInvalidClassicModeOption": "错误: 在经典模式下不支持选项 --{option}，未找到任何清单。",
  "ErrorInvalidManifestModeOption": "错误: 清单模式下不支持选项 --{option}。",
  "ErrorMessage": "错误:",
  "ErrorMissingVcpkgRoot": "错误: 无法检测 vcpkg-root。如果尝试使用已生成的 vcpkg 的副本，则必须定义 VCPKG_ROOT 环境变量以指向 {url} 的克隆副本。",
  "ErrorNoVSInstance": "错误: 在三重 {triplet} 中: 找不到有效的 Visual Studio 实例",
  "ErrorNoVSInstanceAt": "     位于 \"{path}\"",
  "ErrorNoVSInstanceFullVersion": "    具有工具集版本前缀 {version}",
  "ErrorNoVSInstanceVersion": "    具有工具集版本 {version}",
  "ErrorRequireBaseline": "错误: 此 vcpkg 实例需要具有指定基线的清单才能与端口交互。请将 \"builtin-baseline\" 添加到清单或添加 \"vcpkg-configuration.json\"，以重新定义默认注册表。\n",
  "ErrorRequirePackagesList": "错误: \"vcpkg install\" 需要在经典模式下安装包的列表。",
  "ErrorRequirePackagesToInstall": "错误: 未列出用于安装的包，未找到任何清单。",
  "ErrorVcvarsUnsupported": "错误: 在三重 {triplet} 中: 在非 Windows 主机上不支持使用 Visual Studio 的开发人员提示。\n在三重文件中定义 \"VCPKG_CMAKE_SYSTEM_NAME\" 或 \"VCPKG_CHAINLOAD_TOOLCHAIN_FILE\"。",
  "ExcludedPackage": "已排除 {spec}",
  "ExpectedCharacterHere": "此处应为“{expected}”",
  "ExpectedFailOrSkip": "此处需要选择“失败”或“跳过”",
  "ExpectedPortName": "此处需要填写端口名称",
  "ExpectedTripletName": "此处需要填写三联名称",
  "FailedToProvisionCe": "无法预配 vcpkg-ce。",
  "FailedToStoreBackToMirror": "无法存储回镜像:",
  "ForceSystemBinariesOnWeirdPlatforms": "必须在 arm、s390x、ppc64le 平台上设置环境变量 VCPKG_FORCE_SYSTEM_BINARIES。",
  "FormattedParseMessageExpression": "    在表达式上: {value}",
  "GenerateMsgErrorParsingFormatArgs": "错误: 正在分析 {value} 的格式字符串:",
  "GenerateMsgIncorrectComment": "消息 {value} 的注释不正确:",
  "GenerateMsgNoArgumentValue": "    在注释中指定了 {{{value}}}，但未在消息中使用。",
  "GenerateMsgNoCommentValue": "    邮件中使用了 {{{value}}}，但未进行注释。",
  "GraphCycleDetected": "在 {package_name} 的图形中检测到循环:",
  "HashFileFailureToRead": "无法读取用于哈希的文件“{path}”: {error}",
  "HeaderOnlyUsage": "{package_name} 是仅限标头的，可通过以下方式从 CMake 使用:",
  "IllegalFeatures": "错误: 此功能中不允许的功能列表",
  "IllegalPlatformSpec": "错误: 此上下文中不允许使用平台限定符",
  "InstallingPackage": "正在安装 {spec}...",
  "InternalErrorMessage": "内部错误: ",
  "InternalErrorMessageContact": "请在 https://github.com/microsoft/vcpkg/issues/new?template=other-type-of-bug-report.md&labels=category:vcpkg-bug 打开一个包含重现问题的详细步骤的问题。",
  "InvalidArgument": "invalid argument",
  "InvalidArgumentRequiresAbsolutePath": "invalid argument: binary config '{binary_source}' path arguments for binary config strings must be absolute",
  "InvalidArgumentRequiresBaseUrl": "invalid argument: binary config '{binary_source}' requires a {base_url} base url as the first argument",
  "InvalidArgumentRequiresBaseUrlAndToken": "invalid argument: binary config '{binary_source}' requires at least a base-url and a SAS token",
  "InvalidArgumentRequiresNoneArguments": "invalid argument: binary config '{binary_source}' does not take arguments",
  "InvalidArgumentRequiresOneOrTwoArguments": "invalid argument: binary config '{binary_source}' requires 1 or 2 arguments",
  "InvalidArgumentRequiresPathArgument": "invalid argument: binary config '{binary_source}' requires at least a path argument",
  "InvalidArgumentRequiresPrefix": "invalid argument: binary config '{binary_source}' requires at least a prefix",
  "InvalidArgumentRequiresSingleArgument": "invalid argument: binary config '{binary_source}' does not take more than 1 argument",
  "InvalidArgumentRequiresSingleStringArgument": "invalid argument: binary config '{binary_source}' expects a single string argument",
  "InvalidArgumentRequiresSource": "invalid argument: binary config '{binary_source}' requires non-empty source",
  "InvalidArgumentRequiresSourceArgument": "invalid argument: binary config '{binary_source}' requires at least a source argument",
  "InvalidArgumentRequiresTwoOrThreeArguments": "invalid argument: binary config '{binary_source}' requires 2 or 3 arguments",
  "InvalidArgumentRequiresValidToken": "invalid argument: binary config '{binary_source}' requires a SAS token without a preceeding '?' as the second argument",
  "JsonErrorFailedToParse": "未能分析路径 {path}:",
  "JsonErrorFailedToRead": "无法读取 {path}: {error_msg}",
  "LicenseExpressionContainsExtraPlus": "SPDX 许可证表达式包含额外的 \"+\"。只有在许可证标识符之后才允许使用这些标识符。",
  "LicenseExpressionContainsInvalidCharacter": "SPDX 许可证表达式包含无效字符 (0x{value:02X} '{value}')。",
  "LicenseExpressionContainsUnicode": "SPDX 许可证表达式包含 unicode 字符(U+{value: 04X}\"{pretty_value}\")，但这些表达式仅限 ASCII。",
  "LicenseExpressionDocumentRefUnsupported": "当前实现不支持 DocumentRef- SPDX 引用。",
  "LicenseExpressionExpectCompoundFoundParen": "应为复合或字符串末尾，找到了一个括号。",
  "LicenseExpressionExpectCompoundFoundWith": "应为 AND 或 OR，找到 WITH (仅允许在许可证名称后使用 WITH，而不允许使用带圆括号表达式)。",
  "LicenseExpressionExpectCompoundFoundWord": "应为 AND 或 OR，找到许可证或异常名称: \"{value}\"。",
  "LicenseExpressionExpectCompoundOrWithFoundWord": "应为 AND、OR 或 WITH，找到许可证或异常名称: \"{value}\"。",
  "LicenseExpressionExpectExceptionFoundCompound": "应为异常名称，找到了复合项 {value}。",
  "LicenseExpressionExpectExceptionFoundEof": "应为异常名称，找到了字符串的末尾。",
  "LicenseExpressionExpectExceptionFoundParen": "应为异常名称，找到了一个括号。",
  "LicenseExpressionExpectLicenseFoundCompound": "应为许可证名称，找到了复合项 {value}。",
  "LicenseExpressionExpectLicenseFoundEof": "应为许可证名称，找到了字符串的末尾。",
  "LicenseExpressionExpectLicenseFoundParen": "应为许可证名称，找到一个括号。",
  "LicenseExpressionImbalancedParens": "有一个不带左括号的右括号。",
  "LicenseExpressionUnknownException": "未知的许可证异常标识符 \"{value}\"。已知值列在 https://spdx.org/licenses/exceptions-index.html 中",
  "LicenseExpressionUnknownLicense": "未知的许可证标识符 \"{value}\"。已知值列在 https://spdx.org/licenses/ 中",
  "MsiexecFailedToExtract": "msiexec 在提取“{path}”时失败，启动或退出代码 {exit_code} 和消息:",
  "NoLocalizationForMessages": "没有针对以下消息的本地化:",
  "NoteMessage": "注意: ",
  "ObjectStorageToolFailed": "{tool_name} 失败，退出代码: {exit_code}",
  "ProcessorArchitectureMalformed": "无法将 %PROCESSOR_ARCHITECTURE% ({arch})分析为有效的 CPU 体系结构。",
  "ProcessorArchitectureMissing": "缺少所需的环境变量 %PROCESSOR_ARCHITECTURE%。",
  "ProcessorArchitectureW6432Malformed": "无法将 %PROCESSOR_ARCHITEW6432% ({arch}) 分析为有效的 CPU 体系结构。回退到 %PROCESSOR_ARCHITECTURE%。",
  "RemovingPackage": "正在删除 {spec}",
  "RestoredPackagesFromVendor": "已在 {elapsed} 内从 {vendor} 还原 {count} 个包",
  "ResultsHeader": "结果",
  "SeeURL": "有关详细信息，请参阅 {url}。",
  "SourceFieldPortNameMismatch": "The 'Source' field inside the CONTROL file, or \"name\" field inside the vcpkg.json file has the name {package_name} and does not match the port directory {path}.",
  "SuggestNewVersionScheme": "在端口 \"{package_name}\" 中使用版本方案 \"{new_scheme}\" 而不是 \"{old_scheme}\" 。\n使用 `--{option}` 禁用此检查。",
  "UnexpectedErrorDuringBulkDownload": "批量下载期间出现意外错误。",
  "UnknownBaselineFileContent": "无法识别的基线条目；应为“port：triplet=(fail|skip)”",
  "UnknownBinaryProviderType": "unknown binary provider type: valid providers are 'clear', 'default', 'nuget', 'nugetconfig', 'interactive', and 'files'",
  "UnsupportedSystemName": "错误: 无法将 VCPKG_CMAKE_SYSTEM_NAME\"{system_name}\" 映射到 vcvarsall 平台。支持的系统名称为 \"{0}\"、\"Windows\"、\"WindowsStore\"。",
  "UnsupportedToolchain": "错误: 在 triplet {triplet} 中: 找不到有效的工具链组合。\n   请求的目标体系结构为 {arch}\n   所选 Visual Studio 实例位于 {path}\n   可用的工具链组合为 {list}\n",
  "UploadedPackagesToVendor": "已在 {elapsed} 内将 {count} 个包上传到 {vendor}",
  "UsingManifestAt": "正在 {path} 使用清单文件。",
  "Utf8DecoderDereferencedAtEof": "已在字符串末尾取消引用 Utf8Decoder。",
  "VSExaminedInstances": "考虑了以下 Visual Studio 实例:",
  "VSExaminedPaths": "检查了 Visual Studio 实例的以下路径:",
  "VSNoInstances": "找不到完整的 Visual Studio 实例",
  "VcpkgCeIsExperimental": "vcpkg-ce (“配置环境”)是实验性的，可能会随时更改。",
  "VcpkgDisallowedClassicMode": "错误: 在当前工作目录上找不到清单(vcpkg.json)。\n此 vcpkg 分发没有经典模式实例。",
  "VcpkgHasCrashed": "vcpkg.exe 已崩溃。\n请向: \n{email}\n发送电子邮件，并包含你尝试执行的操作的简短摘要以及以下数据 blob:",
  "VcpkgInvalidCommand": "无效命令: {command_name}",
  "VcpkgSendMetricsButDisabled": "警告: 已通过 --sendmetrics，但指标已禁用。",
  "VersionCommandHeader": "vcpkg 包管理程序版本 {version}\n\n查看 LICENSE.txt 获取许可证信息。",
  "VersionConstraintViolated": "依赖项 {spec} 应至少为 {expected_version} 版本，但目前为 {actual_version}。",
  "VersionInvalidDate": "“{version}”不是有效的日期版本。日期必须采用 YYYY-MM-DD 格式，并且消歧因子必须是不带前导零的点分隔正整数值。",
  "VersionInvalidRelaxed": "“{version}”不是有效的宽松版本(具有任意数值元素计数的 semver)。",
  "VersionInvalidSemver": "“{version}”不是有效的语义版本，请参阅 <https://semver.org>。",
  "VersionSpecMismatch": "错误: 加载端口失败，因为版本规范不匹配\n   路径: {path}\n   应为: {expected_version}\n   实际: {actual_version}",
  "WaitingForChildrenToExit": "正在等待子进程退出...",
  "WaitingToTakeFilesystemLock": "正在等待锁定 {path} 上的文件系统...",
  "WarningMessage": "警告:",
  "WarningsTreatedAsErrors": "以前被解释为错误的警告"
}
