{
  "UnrecognizedCommand$": "Unrecognized command '${p0}'",
  "_UnrecognizedCommand$.comment": "\n'${p0}' (aka 'commandline.inputs[0]') is a parameter of type 'string'\n",
  "Use$ToGetHelp": "Use ${p0} to get help",
  "_Use$ToGetHelp.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "FatalTheRootFolder$CannotBeCreated": "Fatal: The root folder '${p0}' cannot be created",
  "_FatalTheRootFolder$CannotBeCreated.comment": "\n'${p0}' (aka 'this.homeFolder.fsPath') is a parameter of type 'string'\n",
  "FatalTheGlobalConfigurationFile$CannotBeCreated": "Fatal: The global configuration file '${p0}' cannot be created",
  "_FatalTheGlobalConfigurationFile$CannotBeCreated.comment": "\n'${p0}' (aka 'this.globalConfig.fsPath') is a parameter of type 'string'\n",
  "VCPKGCOMMANDWasNotSet": "VCPKG_COMMAND was not set",
  "RunningVcpkgInternallyReturnedANonzeroExitCode$": "Running vcpkg internally returned a nonzero exit code: ${p0}",
  "_RunningVcpkgInternallyReturnedANonzeroExitCode$.comment": "\n'${p0}' is a parameter of type 'number'\n",
  "failedToDownloadFrom$": "failed to download from ${p0}",
  "_failedToDownloadFrom$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "failedToDownload$FromAnySource": "failed to download ${p0} from any source",
  "_failedToDownload$FromAnySource.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "ErrorParsingConditionalDemand$$": "Error parsing conditional demand '${p0}'- ${p1}",
  "_ErrorParsingConditionalDemand$$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' (aka 'query.error?.message') is a parameter of type 'string'\n",
  "MissingIdentity$": "Missing identity '${p0}'",
  "_MissingIdentity$.comment": "\n'${p0}' (aka ''info.id'') is a parameter of type 'string'\n",
  "infoidShouldBeOfTypestringFound$": "info.id should be of type 'string', found '${p0}'",
  "_infoidShouldBeOfTypestringFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "MissingVersion$": "Missing version '${p0}'",
  "_MissingVersion$.comment": "\n'${p0}' (aka ''info.version'') is a parameter of type 'string'\n",
  "infoversionShouldBeOfTypestringFound$": "info.version should be of type 'string', found '${p0}'",
  "_infoversionShouldBeOfTypestringFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "infosummaryShouldBeOfTypestringFound$": "info.summary should be of type 'string', found '${p0}'",
  "_infosummaryShouldBeOfTypestringFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "infodescriptionShouldBeOfTypestringFound$": "info.description should be of type 'string', found '${p0}'",
  "_infodescriptionShouldBeOfTypestringFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "infooptionsShouldBeASequenceFound$": "info.options should be a sequence, found '${p0}'",
  "_infooptionsShouldBeASequenceFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "TheInfoBlockIsDeprecatedForConsistencyWithVcpkgjsonMoveInfoMembersToTheOutside": "The info block is deprecated for consistency with vcpkg.json; move info members to the outside.",
  "idShouldBeOfTypestringFound$": "id should be of type 'string', found '${p0}'",
  "_idShouldBeOfTypestringFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "versionShouldBeOfTypestringFound$": "version should be of type 'string', found '${p0}'",
  "_versionShouldBeOfTypestringFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "summaryShouldBeOfTypestringFound$": "summary should be of type 'string', found '${p0}'",
  "_summaryShouldBeOfTypestringFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "descriptionShouldBeOfTypestringFound$": "description should be of type 'string', found '${p0}'",
  "_descriptionShouldBeOfTypestringFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "optionsShouldBeASequenceFound$": "options should be a sequence, found '${p0}'",
  "_optionsShouldBeASequenceFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "DuplicateKeysDetectedInManifest$": "Duplicate keys detected in manifest: '${p0}'",
  "_DuplicateKeysDetectedInManifest$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "in$Skipping$BecauseItIsA$": "in ${p0} skipping ${p1} because it is a ${p2}",
  "_in$Skipping$BecauseItIsA$.comment": "\n'${p0}' (aka 'archiveUri.fsPath') is a parameter of type 'string'\n\n'${p1}' (aka 'header.name') is a parameter of type 'string'\n\n'${p2}' (aka 'header?.type || ''') is a parameter of type 'string'\n",
  "noPostscriptFileRerunWithTheVcpkgShellFunctionRatherThanExecutable": "no postscript file: rerun with the vcpkg shell function rather than executable",
  "DuplicateDefine$DuringActivationNewValueWillReplaceOld": "Duplicate define ${p0} during activation. New value will replace old.",
  "_DuplicateDefine$DuringActivationNewValueWillReplaceOld.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "DuplicateToolDeclared$DuringActivationNewValueWillReplaceOld": "Duplicate tool declared ${p0} during activation.  New value will replace old.",
  "_DuplicateToolDeclared$DuringActivationNewValueWillReplaceOld.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "DuplicateAliasDeclared$DuringActivationNewValueWillReplaceOld": "Duplicate alias declared ${p0} during activation.  New value will replace old.",
  "_DuplicateAliasDeclared$DuringActivationNewValueWillReplaceOld.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "DuplicateLocationDeclared$DuringActivationNewValueWillReplaceOld": "Duplicate location declared ${p0} during activation. New value will replace old.",
  "_DuplicateLocationDeclared$DuringActivationNewValueWillReplaceOld.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "CircularVariableReferenceDetected$": "Circular variable reference detected: ${p0}",
  "_CircularVariableReferenceDetected$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "CircularVariableReferenceDetected$$": "Circular variable reference detected: ${p0} - ${p1}",
  "_CircularVariableReferenceDetected$$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n",
  "VariableReferenceFound$$$ThatIsReferencingAnUnknownBaseObject": "Variable reference found '$${p0}.${p1}' that is referencing an unknown base object.",
  "_VariableReferenceFound$$$ThatIsReferencingAnUnknownBaseObject.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n",
  "UnresolvedVariableReferenceFound$$$DuringVariableSubstitution": "Unresolved variable reference found ($${p0}.${p1}) during variable substitution.",
  "_UnresolvedVariableReferenceFound$$$DuringVariableSubstitution.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n",
  "InvalidPathDoesNotExist$": "Invalid path - does not exist: ${p0}",
  "_InvalidPathDoesNotExist$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "Activating$": "Activating: ${p0}",
  "_Activating$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "Deactivating$": "Deactivating: ${p0}",
  "_Deactivating$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "nothingIsActivatedNoChangesHaveBeenMade": "nothing is activated, no changes have been made",
  "InvalidArtifactId$": "Invalid artifact id '${p0}'",
  "_InvalidArtifactId$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "UnknownInstallerType$": "Unknown installer type ${p0}",
  "_UnknownInstallerType$.comment": "\n'${p0}' (aka 'installInfo!.installerKind') is a parameter of type 'string'\n",
  "WhileResolvingDependenciesOf$$In$CouldNotBeResolvedToARegistry": "While resolving dependencies of ${p0}, ${p1} in ${p2} could not be resolved to a registry.",
  "_WhileResolvingDependenciesOf$$In$CouldNotBeResolvedToARegistry.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string | undefined'\n\n'${p2}' is a parameter of type 'string'\n",
  "WhileResolvingDependenciesOfTheProjectFile$$DidNotSpecifyARegistry": "While resolving dependencies of the project file ${p0}, ${p1} did not specify a registry.",
  "_WhileResolvingDependenciesOfTheProjectFile$$DidNotSpecifyARegistry.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n",
  "UnableToResolveDependency$In$": "Unable to resolve dependency ${p0} in ${p1}.",
  "_UnableToResolveDependency$In$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n",
  "Artifact": "Artifact",
  "Version": "Version",
  "Status": "Status",
  "Dependency": "Dependency",
  "Summary": "Summary",
  "progressUnknown": "(progress unknown)",
  "verifying": "verifying",
  "downloading$$": "downloading ${p0} -> ${p1}",
  "_downloading$$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n",
  "unpacking": "unpacking",
  "unpacking$": "unpacking ${p0}",
  "_unpacking$.comment": "\n'${p0}' (aka 'archiveUri.fsPath') is a parameter of type 'string'\n",
  "Installing$": "Installing ${p0}...",
  "_Installing$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "$AlreadyInstalled": "${p0} already installed.",
  "_$AlreadyInstalled.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "Downloading$": "Downloading ${p0}...",
  "_Downloading$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "Unpacking$": "Unpacking ${p0}...",
  "_Unpacking$.comment": "\n'${p0}' (aka 'archiveUri.fsPath') is a parameter of type 'string'\n",
  "ErrorInstalling$$": "Error installing ${p0} - ${p1}",
  "_ErrorInstalling$$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'any'\n",
  "ExpectedASingleValueFor$FoundMultiple": "Expected a single value for ${p0} - found multiple",
  "_ExpectedASingleValueFor$FoundMultiple.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "Synopsis": "Synopsis",
  "Description": "Description",
  "Switches": "Switches",
  "SeeAlso": "See Also",
  "error": "error:",
  "warning": "warning:",
  "ExpectedASingleValueFor$": "Expected a single value for '--${p0}'.",
  "_ExpectedASingleValueFor$.comment": "\n'${p0}' (aka 'this.switch') is a parameter of type 'string'\n",
  "Assuming$IsCorrectSupplyAHashInTheArtifactMetadataToSuppressThisMessage": "Assuming '${p0}' is correct; supply a hash in the artifact metadata to suppress this message.",
  "_Assuming$IsCorrectSupplyAHashInTheArtifactMetadataToSuppressThisMessage.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "DownloadedFile$DidNotHaveTheCorrectHash$$": "Downloaded file '${p0}' did not have the correct hash (${p1}: ${p2}) ",
  "_DownloadedFile$DidNotHaveTheCorrectHash$$.comment": "\n'${p0}' (aka 'outputFile.fsPath') is a parameter of type 'string'\n\n'${p1}' (aka 'options.algorithm') is a parameter of type 'string'\n\n'${p2}' (aka 'options.value') is a parameter of type 'string'\n",
  "packageReference$IsNotAValidNugetPackageReferencenameversion": "package reference '${p0}' is not a valid nuget package reference ({name}/{version})",
  "_packageReference$IsNotAValidNugetPackageReferencenameversion.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "statsMayNotBeUndefined": "stats may not be undefined",
  "CannotRenameFilesAcrossFilesystems": "Cannot rename files across filesystems",
  "CopyFailedSource$IsAFolderTarget$IsAFile": "Copy failed: source (${p0}) is a folder, target (${p1}) is a file",
  "_CopyFailedSource$IsAFolderTarget$IsAFile.comment": "\n'${p0}' (aka 'source.fsPath') is a parameter of type 'string'\n\n'${p1}' (aka 'target.fsPath') is a parameter of type 'string'\n",
  "UriMayNotBeEmpty": "Uri may not be empty",
  "scheme$AlreadyRegistered": "scheme '${p0}' already registered",
  "_scheme$AlreadyRegistered.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "uri$HasNoScheme": "uri ${p0} has no scheme",
  "_uri$HasNoScheme.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "scheme$HasNoFilesystemAssociatedWithIt": "scheme ${p0} has no filesystem associated with it",
  "_scheme$HasNoFilesystemAssociatedWithIt.comment": "\n'${p0}' is a parameter of type 'string | undefined'\n",
  "mayNotRenameAcrossFilesystems": "may not rename across filesystems",
  "CouldNotActivateEspidfPythonWasNotFound": "Could not activate esp-idf: python was not found.",
  "GitIsNotInstalled": "Git is not installed",
  "InitializingRepositoryFolder": "Initializing repository folder",
  "FailedToInitializeGitRepositoryFolder$": "Failed to initialize git repository folder (${p0})",
  "_FailedToInitializeGitRepositoryFolder$.comment": "\n'${p0}' (aka 'targetDirectory.fsPath') is a parameter of type 'string'\n",
  "AddingRemote$ToGitRepositoryFolder": "Adding remote ${p0} to git repository folder",
  "_AddingRemote$ToGitRepositoryFolder.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "FailedToSetGitOrigin$InFolder$": "Failed to set git origin (${p0}) in folder (${p1})",
  "_FailedToSetGitOrigin$InFolder$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' (aka 'targetDirectory.fsPath') is a parameter of type 'string'\n",
  "FetchingRemote$ForGitRepositoryFolder": "Fetching remote ${p0} for git repository folder",
  "_FetchingRemote$ForGitRepositoryFolder.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "UnableToFetchGitDataFor$InFolder$": "Unable to fetch git data for (${p0}) in folder (${p1})",
  "_UnableToFetchGitDataFor$InFolder$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' (aka 'targetDirectory.fsPath') is a parameter of type 'string'\n",
  "CheckingOutCommit$For$ToGitRepositoryFolder": "Checking out commit ${p0} for ${p1} to git repository folder",
  "_CheckingOutCommit$For$ToGitRepositoryFolder.comment": "\n'${p0}' (aka 'install.commit') is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n",
  "UnableToCheckoutDataFor$InFolder$": "Unable to checkout data for (${p0}) in folder (${p1})",
  "_UnableToCheckoutDataFor$InFolder$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' (aka 'targetDirectory.fsPath') is a parameter of type 'string'\n",
  "UpdatingSubmodulesForRepository$InTheGitRepositoryFolder": "Updating submodules for repository ${p0} in the git repository folder",
  "_UpdatingSubmodulesForRepository$InTheGitRepositoryFolder.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "UnableToSetSubmoduleShallowDataFor$InFolder$": "Unable to set submodule shallow data for (${p0}) in folder (${p1})",
  "_UnableToSetSubmoduleShallowDataFor$InFolder$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' (aka 'targetDirectory.fsPath') is a parameter of type 'string'\n",
  "UnableUpdateSubmodulesFor$InFolder$": "Unable update submodules for (${p0}) in folder (${p1})",
  "_UnableUpdateSubmodulesFor$InFolder$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' (aka 'targetDirectory.fsPath') is a parameter of type 'string'\n",
  "ExpectedCommaFound$": "Expected comma, found ${p0}",
  "_ExpectedCommaFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "ExpectedOneOfNumberBooleanIdentifierStringFoundToken$": "Expected one of {Number, Boolean, Identifier, String}, found token ${p0}",
  "_ExpectedOneOfNumberBooleanIdentifierStringFoundToken$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "ExpressionSpecifiedNOTTwice": "Expression specified NOT twice",
  "ExpectedCloseParenthesisForExpressionFound$": "Expected close parenthesis for expression, found ${p0}",
  "_ExpectedCloseParenthesisForExpressionFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "ExpectedExpressionFound$": "Expected expression, found ${p0}",
  "_ExpectedExpressionFound$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "ParseErrorDigitExpected": "ParseError: Digit expected (0-9)",
  "ParseErrorHexDigitExpectedFf": "ParseError: Hex Digit expected (0-F,0-f)",
  "ParseErrorBinaryDigitExpected": "ParseError: Binary Digit expected (0,1)",
  "UnexpectedEndOfFileWhileSearchingFor$": "Unexpected end of file while searching for '${p0}'",
  "_UnexpectedEndOfFileWhileSearchingFor$.comment": "\n'${p0}' is a parameter of type 'string | undefined'\n",
  "InvalidEscapeSequence": "Invalid escape sequence",
  "FailedToDeserializeIndex$": "Failed to deserialize index ${p0}",
  "_FailedToDeserializeIndex$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "$MatchedMoreThanOneResult$": "'${p0}' matched more than one result (${p1}).",
  "_$MatchedMoreThanOneResult$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n",
  "UnsupportedRegistryScheme$": "Unsupported registry scheme '${p0}'",
  "_UnsupportedRegistryScheme$.comment": "\n'${p0}' (aka 'locationUri.scheme') is a parameter of type 'string'\n",
  "TriedToAdd$As$But$IsAlready$": "Tried to add ${p0} as ${p1}, but ${p2} is already ${p3}.",
  "_TriedToAdd$As$But$IsAlready$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n\n'${p2}' is a parameter of type 'string'\n\n'${p3}' is a parameter of type 'string | undefined'\n",
  "UnknownRegistry$in$TheFollowingAreKnown$": "Unknown registry ${p0} (in ${p1}). The following are known: ${p2}",
  "_UnknownRegistry$in$TheFollowingAreKnown$.comment": "\n'${p0}' is a parameter of type 'string | undefined'\n\n'${p1}' is a parameter of type 'string'\n\n'${p2}' is a parameter of type 'string'\n",
  "UpdatingRegistryDataFrom$": "Updating registry data from ${p0}",
  "_UpdatingRegistryDataFrom$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "$MustBeAString": "${p0} must be a string",
  "_$MustBeAString.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "$MustBeABool": "${p0} must be a bool",
  "_$MustBeABool.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "$MustBeAnArrayOfStringsOrUnset": "${p0} must be an array of strings, or unset",
  "_$MustBeAnArrayOfStringsOrUnset.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "FoundAMismatched$In$ForALiteral$Use$$Instead": "Found a mismatched ${p0} in '${p1}'. For a literal ${p2}, use ${p3}${p4} instead.",
  "_FoundAMismatched$In$ForALiteral$Use$$Instead.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n\n'${p2}' is a parameter of type 'string'\n\n'${p3}' is a parameter of type 'string'\n\n'${p4}' is a parameter of type 'string'\n",
  "CouldNotFindAValueFor$In$ToWriteTheLiteralValueUse$Instead": "Could not find a value for {${p0}} in '${p1}'. To write the literal value, use '{{${p2}}}' instead.",
  "_CouldNotFindAValueFor$In$ToWriteTheLiteralValueUse$Instead.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n\n'${p2}' is a parameter of type 'string'\n",
  "MatchedMoreThanOneInstallBlock$": "Matched more than one install block [${p0}]",
  "_MatchedMoreThanOneInstallBlock$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "AcquiresEverythingReferencedByAProjectWithoutActivating": "Acquires everything referenced by a project, without activating",
  "ThisAllowsTheConsumerToPredownloadToolsRequiredForAProject": "This allows the consumer to pre-download tools required for a project.",
  "UnableToFindProjectInFolderorParentFoldersFor$": "Unable to find project in folder (or parent folders) for ${p0}",
  "_UnableToFindProjectInFolderorParentFoldersFor$.comment": "\n'${p0}' (aka 'session.currentDirectory.fsPath') is a parameter of type 'string'\n",
  "UnableToAcquireProject": "Unable to acquire project",
  "AcquireArtifactsInTheRegistry": "Acquire artifacts in the registry",
  "ThisAllowsTheConsumerToAcquiredownloadAndUnpackArtifactsArtifactsMustBeActivatedToBeUsed": "This allows the consumer to acquire (download and unpack) artifacts. Artifacts must be activated to be used",
  "NoArtifactsSpecified": "No artifacts specified",
  "MultiplePackagesSpecifiedButNotAnEqualNumberOf$Switches": "Multiple packages specified, but not an equal number of ${p0} switches",
  "_MultiplePackagesSpecifiedButNotAnEqualNumberOf$Switches.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "NoArtifactsAreAcquired": "No artifacts are acquired",
  "AllArtifactsAreAlreadyInstalled": "All artifacts are already installed",
  "$ArtifactsInstalledSuccessfully": "${p0} artifacts installed successfully",
  "_$ArtifactsInstalledSuccessfully.comment": "\n'${p0}' is a parameter of type 'number'\n",
  "InstallationFailedStopping": "Installation failed -- stopping",
  "ActivatesTheToolsRequiredForAProject": "Activates the tools required for a project",
  "ThisAllowsTheConsumerToActivateTheToolsRequiredForAProjectIfTheToolsAreNotAlreadyInstalledThisWillForceThemToBeDownloadedAndInstalledBeforeActivation": "This allows the consumer to Activate the tools required for a project. If the tools are not already installed, this will force them to be downloaded and installed before activation.",
  "AddsAnArtifactToTheProject": "Adds an artifact to the project",
  "ThisAllowsTheConsumerToAddAnArtifactToTheProjectThisWillActivateTheProjectAsWell": "This allows the consumer to add an artifact to the project. This will activate the project as well.",
  "MultipleArtifactsSpecifiedButNotAnEqualNumberOf$Switches": "Multiple artifacts specified, but not an equal number of ${p0} switches",
  "_MultipleArtifactsSpecifiedButNotAnEqualNumberOf$Switches.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "TriedToAddAnArtifact$$ButCouldNotDetermineTheRegistryToUse": "Tried to add an artifact [${p0}]:${p1} but could not determine the registry to use.",
  "_TriedToAddAnArtifact$$ButCouldNotDetermineTheRegistryToUse.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' (aka 'artifact.id') is a parameter of type 'string'\n",
  "TriedToAddRegistry$As$ButItWasAlready$PleaseAdd$ToThisProjectManuallyAndReattempt": "Tried to add registry ${p0} as ${p1}, but it was already ${p2}. Please add ${p3} to this project manually and reattempt.",
  "_TriedToAddRegistry$As$ButItWasAlready$PleaseAdd$ToThisProjectManuallyAndReattempt.comment": "\n'${p0}' is a parameter of type 'string | undefined'\n\n'${p1}' is a parameter of type 'string'\n\n'${p2}' is a parameter of type 'string'\n\n'${p3}' is a parameter of type 'string'\n",
  "RunvcpkgActivateToApplyToTheCurrentTerminal": "Run \\`vcpkg activate\\` to apply to the current terminal",
  "ManagesTheDownloadCache": "Manages the download cache",
  "DownloadsFolderCleared$": "Downloads folder cleared (${p0}) ",
  "_DownloadsFolderCleared$.comment": "\n'${p0}' (aka 'session.downloads.fsPath') is a parameter of type 'string'\n",
  "cleansOutEverythingcacheInstalledArtifacts": "cleans out everything (cache, installed artifacts)",
  "cleansOutTheDownloadsCache": "cleans out the downloads cache",
  "removesAllTheArtifactsThatAreInstalled": "removes all the artifacts that are installed",
  "cleansUp": "cleans up",
  "AllowsTheUserToCleanOutTheCacheInstalledArtifactsEtc": "Allows the user to clean out the cache, installed artifacts, etc.",
  "InstalledArtifactFolderCleared$": "Installed Artifact folder cleared (${p0}) ",
  "_InstalledArtifactFolderCleared$.comment": "\n'${p0}' (aka 'session.installFolder.fsPath') is a parameter of type 'string'\n",
  "CacheFolderCleared$": "Cache folder cleared (${p0}) ",
  "_CacheFolderCleared$.comment": "\n'${p0}' (aka 'session.downloads.fsPath') is a parameter of type 'string'\n",
  "DeactivatesTheCurrentSession": "Deactivates the current session",
  "ThisAllowsTheConsumerToRemoveEnvironmentSettingsForTheCurrentlyActiveSession": "This allows the consumer to remove environment settings for the currently active session.",
  "DeletesAnArtifactFromTheArtifactFolder": "Deletes an artifact from the artifact folder",
  "ThisAllowsTheConsumerToRemoveAnArtifactFromDisk": "This allows the consumer to remove an artifact from disk.",
  "DeletingArtifact$From$": "Deleting artifact ${p0} from ${p1}",
  "_DeletingArtifact$From$.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' (aka 'folder.fsPath') is a parameter of type 'string'\n",
  "FindArtifactsInTheRegistry": "Find artifacts in the registry",
  "ThisAllowsTheUserToFindArtifactsBasedOnSomeCriteria": "This allows the user to find artifacts based on some criteria.",
  "NoArtifactsFoundMatchingCriteria$": "No artifacts found matching criteria: ${p0}",
  "_NoArtifactsFoundMatchingCriteria$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "GeneratesMSBuildPropertiesForAnActivationWithoutDownloadingAnythingForAProject": "Generates MSBuild properties for an activation without downloading anything for a project",
  "generatemsbuildpropsRequiresmsbuildprops": "generate-msbuild-props requires --msbuild-props",
  "UnableToActivateProject": "Unable to activate project",
  "theNameOfTheCommandForWhichYouWantHelp": "the name of the command for which you want help",
  "getHelpOn$OrOneOfTheCommands": "get help on ${p0} or one of the commands",
  "_getHelpOn$OrOneOfTheCommands.comment": "\n'${p0}' is a parameter - it is expecting a value like: \"vcpkg\"",
  "GetsDetailedHelpOn$OrOneOfTheCommands": "Gets detailed help on ${p0}, or one of the commands",
  "_GetsDetailedHelpOn$OrOneOfTheCommands.comment": "\n'${p0}' is a parameter - it is expecting a value like: \"vcpkg\"",
  "Arguments": "Arguments:",
  "Use$ToGetTheListOfAvailableCommands": "Use ${p0} to get the list of available commands",
  "_Use$ToGetTheListOfAvailableCommands.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "Usage": "Usage",
  "$COMMANDargumentsswitches": "${p0} COMMAND <arguments> [--switches]",
  "_$COMMANDargumentsswitches.comment": "\n'${p0}' is a parameter - it is expecting a value like: \"vcpkg\"",
  "Available$Commands": "Available ${p0} commands:",
  "_Available$Commands.comment": "\n'${p0}' is a parameter - it is expecting a value like: \"vcpkg\"",
  "ListsTheArtifacts": "Lists the artifacts",
  "ThisAllowsTheConsumerToListArtifacts": "This allows the consumer to list artifacts.",
  "regenerateTheIndexForARegistry": "regenerate the index for a registry",
  "ThisAllowsTheUserToRegenerateThe$FilesForA$Registry": "This allows the user to regenerate the ${p0} files for a ${p1} registry.",
  "_ThisAllowsTheUserToRegenerateThe$FilesForA$Registry.comment": "\n'${p0}' is a parameter - it is expecting a value like: \"index.yaml\"\n'${p1}' is a parameter - it is expecting a value like: \"vcpkg\"",
  "RegeneratingIndexFor$": "Regenerating index for ${p0}",
  "_RegeneratingIndexFor$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "RegenerationCompleteIndexContains$MetadataFiles": "Regeneration complete. Index contains ${p0} metadata files",
  "_RegenerationCompleteIndexContains$MetadataFiles.comment": "\n'${p0}' is a parameter of type 'number'\n",
  "Registry$ContainsNoArtifacts": "Registry: '${p0}' contains no artifacts.",
  "_Registry$ContainsNoArtifacts.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "error$": "error ${p0}: ",
  "_error$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "RemovesAnArtifactFromAProject": "Removes an artifact from a project",
  "ThisAllowsTheConsumerToRemoveAnArtifactFromTheProjectForcesReactivationInThisWindow": "This allows the consumer to remove an artifact from the project. Forces reactivation in this window.",
  "Removing$FromProjectManifest": "Removing ${p0} from project manifest",
  "_Removing$FromProjectManifest.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "unableToFindArtifact$InTheProjectManifest": "unable to find artifact ${p0} in the project manifest",
  "_unableToFindArtifact$InTheProjectManifest.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "Updated$ItContains$MetadataFiles": "Updated ${p0}. It contains ${p1} metadata files.",
  "_Updated$ItContains$MetadataFiles.comment": "\n'${p0}' is a parameter of type 'string'\n\n'${p1}' is a parameter of type 'string'\n",
  "UnableToDownload$": "Unable to download ${p0}.",
  "_UnableToDownload$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "$CouldNotBeUpdatedItCouldBeMalformed": "${p0} could not be updated; it could be malformed.",
  "_$CouldNotBeUpdatedItCouldBeMalformed.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "updateTheRegistryFromTheRemote": "update the registry from the remote",
  "ThisDownloadsTheLatestContentsOfTheRegistryFromTheRemoteService": "This downloads the latest contents of the registry from the remote service.",
  "TheXupdateregistryCommandDownloadsNewRegistryInformationAndThusCannotBeUsedWithLocalRegistriesDidYouMeanXregenerate$": "The x-update-registry command downloads new registry information and thus cannot be used with local registries. Did you mean x-regenerate ${p0}?",
  "_TheXupdateregistryCommandDownloadsNewRegistryInformationAndThusCannotBeUsedWithLocalRegistriesDidYouMeanXregenerate$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "UnableToFindRegistry$": "Unable to find registry ${p0}.",
  "_UnableToFindRegistry$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "InstantlyActivatesAnArtifactOutsideOfTheProject": "Instantly activates an artifact outside of the project",
  "ThisWillInstantlyActivateAnArtifact": "This will instantly activate an artifact .",
  "NoArtifactsAreBeingAcquired": "No artifacts are being acquired",
  "UpdateAllKnownArtifactRegistries": "Update all known artifact registries",
  "removesAllFilesInTheLocalCache": "removes all files in the local cache",
  "enablesDebugModeDisplaysInternalMesssagesAboutHow$Works": "enables debug mode, displays internal messsages about how ${p0} works",
  "_enablesDebugModeDisplaysInternalMesssagesAboutHow$Works.comment": "\n'${p0}' is a parameter - it is expecting a value like: \"vcpkg\"",
  "proceedsWithThepotentiallyDangerousActionWithoutConfirmation": "proceeds with the (potentially dangerous) action without confirmation",
  "showsTheinstalledArtifacts": "shows the _installed_ artifacts",
  "DumpEnvironmentVariablesAndOtherPropertiesToAJsonFileWithThePathProvidedByTheUser": "Dump environment variables and other properties to a json file with the path provided by the user.",
  "FullPathToTheFileInWhichMSBuildPropertiesWillBeWritten": "Full path to the file in which MSBuild properties will be written.",
  "ApplyAnyDeprecationFixups": "Apply any deprecation fixups.",
  "overrideThePathToTheProjectFolder": "override the path to the project folder",
  "UnableToFindProjectEnvironment$": "Unable to find project environment ${p0}",
  "_UnableToFindProjectEnvironment$.comment": "\n'${p0}' is a parameter of type 'string'\n",
  "enablesVerboseModeDisplaysVerboseMesssagesAboutTheProcess": "enables verbose mode, displays verbose messsages about the process",
  "aVersionOrVersionRangeToMatch": "a version or version range to match"
}